// Generated from SiddhiQL.g4 by ANTLR 4.5
// jshint ignore: start
var antlr4 = require('../../antlr4-js-runtime/index');

var SiddhiQLListener = require('./SiddhiQLListener').SiddhiQLListener;

	//import io.siddhi.query.compiler.exception.SiddhiParserException;

var grammarFileName = "SiddhiQL.g4";

var serializedATN = ["\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\3t\u0684\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4",
    "\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t",
    "\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27",
    "\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4",
    "\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t",
    "\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t",
    "\61\4\62\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t",
    "8\49\t9\4:\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC",
    "\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4",
    "O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z",
    "\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4`\t`\4a\ta\4b\tb\4c\tc\4d\td\4",
    "e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\tk\4l\tl\4m\tm\4n\tn\4o\to\4p",
    "\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv\4w\tw\4x\tx\4y\ty\4z\tz\4{\t",
    "{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080\t\u0080\4\u0081\t\u0081\4\u0082",
    "\t\u0082\4\u0083\t\u0083\4\u0084\t\u0084\4\u0085\t\u0085\4\u0086\t\u0086",
    "\4\u0087\t\u0087\4\u0088\t\u0088\4\u0089\t\u0089\3\2\3\2\3\2\3\3\3\3",
    "\3\4\3\4\7\4\u011a\n\4\f\4\16\4\u011d\13\4\3\4\3\4\3\4\3\4\3\4\3\4\3",
    "\4\5\4\u0126\n\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u0130\n\4\7\4\u0132",
    "\n\4\f\4\16\4\u0135\13\4\3\4\3\4\3\4\5\4\u013a\n\4\7\4\u013c\n\4\f\4",
    "\16\4\u013f\13\4\3\4\5\4\u0142\n\4\3\5\3\5\5\5\u0146\n\5\3\6\3\6\5\6",
    "\u014a\n\6\3\6\3\6\3\7\7\7\u014f\n\7\f\7\16\7\u0152\13\7\3\7\3\7\3\7",
    "\3\7\3\7\3\7\3\7\3\7\3\7\3\7\7\7\u015e\n\7\f\7\16\7\u0161\13\7\3\7\3",
    "\7\3\b\3\b\5\b\u0167\n\b\3\b\3\b\3\t\7\t\u016c\n\t\f\t\16\t\u016f\13",
    "\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\7\t\u017b\n\t\f\t\16\t\u017e",
    "\13\t\3\t\3\t\3\n\3\n\5\n\u0184\n\n\3\n\3\n\3\13\7\13\u0189\n\13\f\13",
    "\16\13\u018c\13\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13",
    "\7\13\u0198\n\13\f\13\16\13\u019b\13\13\3\13\3\13\3\13\3\13\5\13\u01a1",
    "\n\13\3\f\3\f\5\f\u01a5\n\f\3\f\3\f\3\r\3\r\3\r\5\r\u01ac\n\r\3\r\3",
    "\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\5\r\u01ba\n\r\3\r\3\r\3\r",
    "\3\r\5\r\u01c0\n\r\3\r\5\r\u01c3\n\r\3\16\3\16\3\16\5\16\u01c8\n\16",
    "\3\16\3\16\5\16\u01cc\n\16\3\16\3\16\3\16\5\16\u01d1\n\16\3\17\3\17",
    "\5\17\u01d5\n\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3",
    "\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\5\24\u01eb\n\24\3\24",
    "\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\5\25\u01f6\n\25\3\26\3\26\3",
    "\27\3\27\5\27\u01fc\n\27\3\27\3\27\3\30\7\30\u0201\n\30\f\30\16\30\u0204",
    "\13\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u020f\n\30",
    "\3\30\3\30\3\30\3\31\3\31\3\32\3\32\5\32\u0218\n\32\3\33\3\33\3\34\3",
    "\34\3\34\3\34\3\35\3\35\3\35\7\35\u0223\n\35\f\35\16\35\u0226\13\35",
    "\3\36\3\36\3\36\3\36\3\36\5\36\u022d\n\36\3\36\3\36\3\36\5\36\u0232",
    "\n\36\7\36\u0234\n\36\f\36\16\36\u0237\13\36\3\36\3\36\5\36\u023b\n",
    "\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\7\37\u0245\n\37\f\37\16",
    "\37\u0248\13\37\3\37\3\37\5\37\u024c\n\37\3 \3 \3 \5 \u0251\n \3 \3",
    " \3!\7!\u0256\n!\f!\16!\u0259\13!\3!\3!\3!\3!\3!\3!\7!\u0261\n!\f!\16",
    "!\u0264\13!\3!\3!\3!\3!\5!\u026a\n!\3!\3!\3!\5!\u026f\n!\7!\u0271\n",
    "!\f!\16!\u0274\13!\3!\5!\u0277\n!\3!\3!\3\"\3\"\5\"\u027d\n\"\3\"\3",
    "\"\3#\3#\3#\3#\3#\3#\3#\3#\5#\u0289\n#\3$\3$\3$\7$\u028e\n$\f$\16$\u0291",
    "\13$\3%\3%\3%\3%\3&\3&\5&\u0299\n&\3&\3&\3\'\7\'\u029e\n\'\f\'\16\'",
    "\u02a1\13\'\3\'\3\'\3\'\5\'\u02a6\n\'\3\'\5\'\u02a9\n\'\3\'\3\'\3(\3",
    "(\3(\3(\3(\5(\u02b2\n(\3)\3)\5)\u02b6\n)\3)\5)\u02b9\n)\3)\5)\u02bc",
    "\n)\3*\3*\3*\3*\5*\u02c2\n*\3*\3*\3*\3*\5*\u02c8\n*\3*\3*\5*\u02cc\n",
    "*\3*\3*\3*\5*\u02d1\n*\3+\3+\5+\u02d5\n+\3+\5+\u02d8\n+\3+\3+\5+\u02dc",
    "\n+\3,\3,\5,\u02e0\n,\3,\3,\5,\u02e4\n,\5,\u02e6\n,\3-\3-\3-\3-\3-\3",
    "-\3-\3-\3-\3-\3-\3-\3-\5-\u02f5\n-\3-\3-\3-\7-\u02fa\n-\f-\16-\u02fd",
    "\13-\3.\3.\3.\3.\3.\3.\5.\u0305\n.\3.\3.\3.\7.\u030a\n.\f.\16.\u030d",
    "\13.\3/\5/\u0310\n/\3/\3/\3/\3/\3/\3/\3/\5/\u0319\n/\3\60\3\60\3\60",
    "\3\60\3\60\3\60\5\60\u0321\n\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3",
    "\60\5\60\u032b\n\60\3\60\3\60\3\60\3\60\3\60\3\60\7\60\u0333\n\60\f",
    "\60\16\60\u0336\13\60\3\61\3\61\3\61\3\61\3\61\3\61\5\61\u033e\n\61",
    "\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\5\61\u0348\n\61\3\61\3\61\3",
    "\61\3\61\3\61\3\61\7\61\u0350\n\61\f\61\16\61\u0353\13\61\3\62\3\62",
    "\3\62\3\62\5\62\u0359\n\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\5",
    "\63\u0363\n\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64",
    "\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3",
    "\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64",
    "\5\64\u038b\n\64\3\65\5\65\u038e\n\65\3\65\3\65\3\66\3\66\3\66\3\66",
    "\3\67\3\67\3\67\3\67\3\67\38\38\38\58\u039e\n8\38\38\39\39\59\u03a4",
    "\n9\3:\6:\u03a7\n:\r:\16:\u03a8\3;\3;\5;\u03ad\n;\3<\3<\5<\u03b1\n<",
    "\3<\3<\5<\u03b5\n<\5<\u03b7\n<\3=\5=\u03ba\n=\3=\3=\3=\3=\3>\5>\u03c1",
    "\n>\3>\3>\3>\3>\3>\5>\u03c8\n>\3>\3>\3>\3>\5>\u03ce\n>\3?\3?\3?\3?\3",
    "?\3?\3?\5?\u03d7\n?\3@\3@\3@\3@\3@\3@\3@\3@\3@\3@\3@\3@\3@\5@\u03e6",
    "\n@\3@\3@\3@\3@\3@\3@\7@\u03ee\n@\f@\16@\u03f1\13@\3A\3A\3A\3A\3A\3",
    "A\3A\3A\3A\3A\3A\3A\3A\5A\u0400\nA\3A\3A\3A\3A\3A\3A\7A\u0408\nA\fA",
    "\16A\u040b\13A\3B\3B\3B\3B\3B\3B\5B\u0413\nB\3B\3B\3B\7B\u0418\nB\f",
    "B\16B\u041b\13B\3C\3C\3C\3C\5C\u0421\nC\3D\3D\3D\3D\3D\3D\3D\3D\5D\u042b",
    "\nD\3E\3E\3E\3E\3E\3E\3E\5E\u0434\nE\3E\5E\u0437\nE\3E\3E\5E\u043b\n",
    "E\5E\u043d\nE\3F\5F\u0440\nF\3F\3F\3F\3F\3G\3G\3G\3H\3H\3H\3H\3H\3I",
    "\3I\3I\3I\3I\7I\u0453\nI\fI\16I\u0456\13I\5I\u0458\nI\3I\5I\u045b\n",
    "I\3J\3J\3J\3J\3J\7J\u0462\nJ\fJ\16J\u0465\13J\5J\u0467\nJ\3J\5J\u046a",
    "\nJ\3J\5J\u046d\nJ\3J\5J\u0470\nJ\3J\5J\u0473\nJ\3J\5J\u0476\nJ\3K\3",
    "K\3K\3K\3K\7K\u047d\nK\fK\16K\u0480\13K\3L\3L\3L\3M\3M\3M\3M\3M\7M\u048a",
    "\nM\fM\16M\u048d\13M\3N\3N\5N\u0491\nN\3O\3O\3P\3P\3P\3Q\3Q\3Q\3R\3",
    "R\5R\u049d\nR\3R\3R\3R\3R\3R\3R\5R\u04a5\nR\3R\3R\3R\3R\3R\3R\3R\3R",
    "\3R\3R\5R\u04b1\nR\3R\5R\u04b4\nR\3R\3R\3R\3R\3R\3R\3R\5R\u04bd\nR\3",
    "R\5R\u04c0\nR\3R\3R\3R\3R\3R\5R\u04c7\nR\5R\u04c9\nR\3S\3S\3S\3S\3S",
    "\3S\3S\3S\5S\u04d3\nS\3S\3S\3S\5S\u04d8\nS\3T\3T\3T\3T\7T\u04de\nT\f",
    "T\16T\u04e1\13T\3U\3U\3U\3U\3V\3V\3V\3V\3V\5V\u04ec\nV\3V\5V\u04ef\n",
    "V\3W\3W\5W\u04f3\nW\3W\3W\3W\3W\5W\u04f9\nW\3W\3W\3W\3W\5W\u04ff\nW",
    "\3X\3X\3Y\3Y\3Y\3Z\3Z\3Z\3[\3[\3[\3[\5[\u050d\n[\3\\\3\\\3\\\3]\3]\3",
    "]\3]\3]\5]\u0517\n]\3^\3^\3_\3_\3`\3`\3`\3`\3`\3`\3`\3`\3`\3`\3`\5`",
    "\u0528\n`\3`\3`\3`\3`\5`\u052e\n`\3`\3`\3`\3`\5`\u0534\n`\3`\3`\3`\3",
    "`\3`\3`\5`\u053c\n`\3`\3`\3`\3`\5`\u0542\n`\3`\3`\3`\3`\3`\3`\3`\3`",
    "\3`\3`\7`\u054e\n`\f`\16`\u0551\13`\3a\3a\3a\5a\u0556\na\3a\3a\3a\5",
    "a\u055b\na\3a\3a\3b\3b\3b\7b\u0562\nb\fb\16b\u0565\13b\3b\5b\u0568\n",
    "b\3c\3c\3c\5c\u056d\nc\3c\3c\3c\3d\3d\5d\u0574\nd\3d\3d\3d\3d\3d\5d",
    "\u057b\nd\3e\3e\5e\u057f\ne\3e\3e\3e\3e\3e\5e\u0586\ne\3e\3e\3e\3e\3",
    "e\3e\5e\u058e\ne\5e\u0590\ne\3e\3e\3e\3e\5e\u0596\ne\3f\3f\3f\3f\5f",
    "\u059c\nf\5f\u059e\nf\3g\3g\3h\3h\3i\3i\3j\3j\3k\3k\3l\3l\3l\3l\7l\u05ae",
    "\nl\fl\16l\u05b1\13l\3l\5l\u05b4\nl\3m\3m\3n\3n\3o\3o\3p\3p\3q\3q\5",
    "q\u05c0\nq\3q\3q\3r\3r\3s\3s\3t\3t\5t\u05ca\nt\3u\3u\3u\3u\3u\3u\3u",
    "\3u\5u\u05d4\nu\3v\3v\3w\3w\3w\3w\3w\3w\3w\3w\3w\3w\3w\3w\5w\u05e4\n",
    "w\3w\5w\u05e7\nw\3x\3x\3x\3x\3x\3x\3x\5x\u05f0\nx\3y\3y\3z\3z\3{\3{",
    "\5{\u05f8\n{\3{\5{\u05fb\n{\3{\5{\u05fe\n{\3{\5{\u0601\n{\3{\5{\u0604",
    "\n{\3{\5{\u0607\n{\3{\5{\u060a\n{\3{\3{\5{\u060e\n{\3{\5{\u0611\n{\3",
    "{\5{\u0614\n{\3{\5{\u0617\n{\3{\5{\u061a\n{\3{\5{\u061d\n{\3{\3{\5{",
    "\u0621\n{\3{\5{\u0624\n{\3{\5{\u0627\n{\3{\5{\u062a\n{\3{\5{\u062d\n",
    "{\3{\3{\5{\u0631\n{\3{\5{\u0634\n{\3{\5{\u0637\n{\3{\5{\u063a\n{\3{",
    "\3{\5{\u063e\n{\3{\5{\u0641\n{\3{\5{\u0644\n{\3{\3{\5{\u0648\n{\3{\5",
    "{\u064b\n{\3{\3{\5{\u064f\n{\3{\5{\u0652\n{\3|\3|\3|\3}\3}\3}\3~\3~",
    "\3~\3\177\3\177\3\177\3\u0080\3\u0080\3\u0080\3\u0081\3\u0081\3\u0081",
    "\3\u0082\3\u0082\3\u0082\3\u0083\3\u0083\3\u0083\3\u0084\5\u0084\u066d",
    "\n\u0084\3\u0084\3\u0084\3\u0085\5\u0085\u0672\n\u0085\3\u0085\3\u0085",
    "\3\u0086\5\u0086\u0677\n\u0086\3\u0086\3\u0086\3\u0087\5\u0087\u067c",
    "\n\u0087\3\u0087\3\u0087\3\u0088\3\u0088\3\u0089\3\u0089\3\u0089\2\n",
    "XZ^`~\u0080\u0082\u00be\u008a\2\4\6\b\n\f\16\20\22\24\26\30\32\34\36",
    " \"$&(*,.\60\62\64\668:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082",
    "\u0084\u0086\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a",
    "\u009c\u009e\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2",
    "\u00b4\u00b6\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca",
    "\u00cc\u00ce\u00d0\u00d2\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2",
    "\u00e4\u00e6\u00e8\u00ea\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa",
    "\u00fc\u00fe\u0100\u0102\u0104\u0106\u0108\u010a\u010c\u010e\u0110\2",
    "\13\3\2Y_\3\2\60\61\3\2OQ\5\2\b\b\n\n\25\25\3\2ci\3\2mn\b\2!\"%.\60",
    "\65\67ACDFi\4\2\23\23\25\25\3\2ab\u0714\2\u0112\3\2\2\2\4\u0115\3\2",
    "\2\2\6\u011b\3\2\2\2\b\u0145\3\2\2\2\n\u0147\3\2\2\2\f\u0150\3\2\2\2",
    "\16\u0164\3\2\2\2\20\u016d\3\2\2\2\22\u0181\3\2\2\2\24\u018a\3\2\2\2",
    "\26\u01a2\3\2\2\2\30\u01c2\3\2\2\2\32\u01c4\3\2\2\2\34\u01d2\3\2\2\2",
    "\36\u01d8\3\2\2\2 \u01e2\3\2\2\2\"\u01e4\3\2\2\2$\u01e6\3\2\2\2&\u01e8",
    "\3\2\2\2(\u01ee\3\2\2\2*\u01f7\3\2\2\2,\u01f9\3\2\2\2.\u0202\3\2\2\2",
    "\60\u0213\3\2\2\2\62\u0217\3\2\2\2\64\u0219\3\2\2\2\66\u021b\3\2\2\2",
    "8\u021f\3\2\2\2:\u0227\3\2\2\2<\u023c\3\2\2\2>\u0250\3\2\2\2@\u0257",
    "\3\2\2\2B\u027a\3\2\2\2D\u0288\3\2\2\2F\u028a\3\2\2\2H\u0292\3\2\2\2",
    "J\u0296\3\2\2\2L\u029f\3\2\2\2N\u02b1\3\2\2\2P\u02b3\3\2\2\2R\u02bd",
    "\3\2\2\2T\u02d2\3\2\2\2V\u02e5\3\2\2\2X\u02f4\3\2\2\2Z\u0304\3\2\2\2",
    "\\\u0318\3\2\2\2^\u032a\3\2\2\2`\u0347\3\2\2\2b\u0358\3\2\2\2d\u0362",
    "\3\2\2\2f\u038a\3\2\2\2h\u038d\3\2\2\2j\u0391\3\2\2\2l\u0395\3\2\2\2",
    "n\u039d\3\2\2\2p\u03a1\3\2\2\2r\u03a6\3\2\2\2t\u03ac\3\2\2\2v\u03b6",
    "\3\2\2\2x\u03b9\3\2\2\2z\u03cd\3\2\2\2|\u03d6\3\2\2\2~\u03e5\3\2\2\2",
    "\u0080\u03ff\3\2\2\2\u0082\u0412\3\2\2\2\u0084\u0420\3\2\2\2\u0086\u0422",
    "\3\2\2\2\u0088\u043c\3\2\2\2\u008a\u043f\3\2\2\2\u008c\u0445\3\2\2\2",
    "\u008e\u0448\3\2\2\2\u0090\u044d\3\2\2\2\u0092\u045c\3\2\2\2\u0094\u0477",
    "\3\2\2\2\u0096\u0481\3\2\2\2\u0098\u0484\3\2\2\2\u009a\u048e\3\2\2\2",
    "\u009c\u0492\3\2\2\2\u009e\u0494\3\2\2\2\u00a0\u0497\3\2\2\2\u00a2\u04c8",
    "\3\2\2\2\u00a4\u04d7\3\2\2\2\u00a6\u04d9\3\2\2\2\u00a8\u04e2\3\2\2\2",
    "\u00aa\u04ee\3\2\2\2\u00ac\u04fe\3\2\2\2\u00ae\u0500\3\2\2\2\u00b0\u0502",
    "\3\2\2\2\u00b2\u0505\3\2\2\2\u00b4\u0508\3\2\2\2\u00b6\u050e\3\2\2\2",
    "\u00b8\u0516\3\2\2\2\u00ba\u0518\3\2\2\2\u00bc\u051a\3\2\2\2\u00be\u0527",
    "\3\2\2\2\u00c0\u0555\3\2\2\2\u00c2\u0567\3\2\2\2\u00c4\u056c\3\2\2\2",
    "\u00c6\u0573\3\2\2\2\u00c8\u0595\3\2\2\2\u00ca\u059d\3\2\2\2\u00cc\u059f",
    "\3\2\2\2\u00ce\u05a1\3\2\2\2\u00d0\u05a3\3\2\2\2\u00d2\u05a5\3\2\2\2",
    "\u00d4\u05a7\3\2\2\2\u00d6\u05b3\3\2\2\2\u00d8\u05b5\3\2\2\2\u00da\u05b7",
    "\3\2\2\2\u00dc\u05b9\3\2\2\2\u00de\u05bb\3\2\2\2\u00e0\u05bf\3\2\2\2",
    "\u00e2\u05c3\3\2\2\2\u00e4\u05c5\3\2\2\2\u00e6\u05c9\3\2\2\2\u00e8\u05d3",
    "\3\2\2\2\u00ea\u05d5\3\2\2\2\u00ec\u05e6\3\2\2\2\u00ee\u05ef\3\2\2\2",
    "\u00f0\u05f1\3\2\2\2\u00f2\u05f3\3\2\2\2\u00f4\u0651\3\2\2\2\u00f6\u0653",
    "\3\2\2\2\u00f8\u0656\3\2\2\2\u00fa\u0659\3\2\2\2\u00fc\u065c\3\2\2\2",
    "\u00fe\u065f\3\2\2\2\u0100\u0662\3\2\2\2\u0102\u0665\3\2\2\2\u0104\u0668",
    "\3\2\2\2\u0106\u066c\3\2\2\2\u0108\u0671\3\2\2\2\u010a\u0676\3\2\2\2",
    "\u010c\u067b\3\2\2\2\u010e\u067f\3\2\2\2\u0110\u0681\3\2\2\2\u0112\u0113",
    "\5\6\4\2\u0113\u0114\7\2\2\3\u0114\3\3\2\2\2\u0115\u0116\7s\2\2\u0116",
    "\5\3\2\2\2\u0117\u011a\5<\37\2\u0118\u011a\5\4\3\2\u0119\u0117\3\2\2",
    "\2\u0119\u0118\3\2\2\2\u011a\u011d\3\2\2\2\u011b\u0119\3\2\2\2\u011b",
    "\u011c\3\2\2\2\u011c\u0125\3\2\2\2\u011d\u011b\3\2\2\2\u011e\u0126\5",
    "\f\7\2\u011f\u0126\5\20\t\2\u0120\u0126\5(\25\2\u0121\u0126\5\36\20",
    "\2\u0122\u0126\5\24\13\2\u0123\u0126\5.\30\2\u0124\u0126\5\4\3\2\u0125",
    "\u011e\3\2\2\2\u0125\u011f\3\2\2\2\u0125\u0120\3\2\2\2\u0125\u0121\3",
    "\2\2\2\u0125\u0122\3\2\2\2\u0125\u0123\3\2\2\2\u0125\u0124\3\2\2\2\u0126",
    "\u0133\3\2\2\2\u0127\u012f\7\t\2\2\u0128\u0130\5\f\7\2\u0129\u0130\5",
    "\20\t\2\u012a\u0130\5(\25\2\u012b\u0130\5\36\20\2\u012c\u0130\5\24\13",
    "\2\u012d\u0130\5.\30\2\u012e\u0130\5\4\3\2\u012f\u0128\3\2\2\2\u012f",
    "\u0129\3\2\2\2\u012f\u012a\3\2\2\2\u012f\u012b\3\2\2\2\u012f\u012c\3",
    "\2\2\2\u012f\u012d\3\2\2\2\u012f\u012e\3\2\2\2\u0130\u0132\3\2\2\2\u0131",
    "\u0127\3\2\2\2\u0132\u0135\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3",
    "\2\2\2\u0134\u013d\3\2\2\2\u0135\u0133\3\2\2\2\u0136\u0139\7\t\2\2\u0137",
    "\u013a\5\b\5\2\u0138\u013a\5\4\3\2\u0139\u0137\3\2\2\2\u0139\u0138\3",
    "\2\2\2\u013a\u013c\3\2\2\2\u013b\u0136\3\2\2\2\u013c\u013f\3\2\2\2\u013d",
    "\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u0141\3\2\2\2\u013f\u013d\3",
    "\2\2\2\u0140\u0142\7\t\2\2\u0141\u0140\3\2\2\2\u0141\u0142\3\2\2\2\u0142",
    "\7\3\2\2\2\u0143\u0146\5L\'\2\u0144\u0146\5@!\2\u0145\u0143\3\2\2\2",
    "\u0145\u0144\3\2\2\2\u0146\t\3\2\2\2\u0147\u0149\5\f\7\2\u0148\u014a",
    "\7\t\2\2\u0149\u0148\3\2\2\2\u0149\u014a\3\2\2\2\u014a\u014b\3\2\2\2",
    "\u014b\u014c\7\2\2\3\u014c\13\3\2\2\2\u014d\u014f\5:\36\2\u014e\u014d",
    "\3\2\2\2\u014f\u0152\3\2\2\2\u0150\u014e\3\2\2\2\u0150\u0151\3\2\2\2",
    "\u0151\u0153\3\2\2\2\u0152\u0150\3\2\2\2\u0153\u0154\7\"\2\2\u0154\u0155",
    "\7!\2\2\u0155\u0156\5\u00e0q\2\u0156\u0157\7\f\2\2\u0157\u0158\5\u00d8",
    "m\2\u0158\u015f\5\u00eav\2\u0159\u015a\7\20\2\2\u015a\u015b\5\u00d8",
    "m\2\u015b\u015c\5\u00eav\2\u015c\u015e\3\2\2\2\u015d\u0159\3\2\2\2\u015e",
    "\u0161\3\2\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0162\3",
    "\2\2\2\u0161\u015f\3\2\2\2\u0162\u0163\7\r\2\2\u0163\r\3\2\2\2\u0164",
    "\u0166\5\20\t\2\u0165\u0167\7\t\2\2\u0166\u0165\3\2\2\2\u0166\u0167",
    "\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0169\7\2\2\3\u0169\17\3\2\2\2\u016a",
    "\u016c\5:\36\2\u016b\u016a\3\2\2\2\u016c\u016f\3\2\2\2\u016d\u016b\3",
    "\2\2\2\u016d\u016e\3\2\2\2\u016e\u0170\3\2\2\2\u016f\u016d\3\2\2\2\u0170",
    "\u0171\7\"\2\2\u0171\u0172\7%\2\2\u0172\u0173\5\u00e0q\2\u0173\u0174",
    "\7\f\2\2\u0174\u0175\5\u00d8m\2\u0175\u017c\5\u00eav\2\u0176\u0177\7",
    "\20\2\2\u0177\u0178\5\u00d8m\2\u0178\u0179\5\u00eav\2\u0179\u017b\3",
    "\2\2\2\u017a\u0176\3\2\2\2\u017b\u017e\3\2\2\2\u017c\u017a\3\2\2\2\u017c",
    "\u017d\3\2\2\2\u017d\u017f\3\2\2\2\u017e\u017c\3\2\2\2\u017f\u0180\7",
    "\r\2\2\u0180\21\3\2\2\2\u0181\u0183\5\24\13\2\u0182\u0184\7\t\2\2\u0183",
    "\u0182\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0186\7",
    "\2\2\3\u0186\23\3\2\2\2\u0187\u0189\5:\36\2\u0188\u0187\3\2\2\2\u0189",
    "\u018c\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018d\3",
    "\2\2\2\u018c\u018a\3\2\2\2\u018d\u018e\7\"\2\2\u018e\u018f\7)\2\2\u018f",
    "\u0190\5\u00e0q\2\u0190\u0191\7\f\2\2\u0191\u0192\5\u00d8m\2\u0192\u0199",
    "\5\u00eav\2\u0193\u0194\7\20\2\2\u0194\u0195\5\u00d8m\2\u0195\u0196",
    "\5\u00eav\2\u0196\u0198\3\2\2\2\u0197\u0193\3\2\2\2\u0198\u019b\3\2",
    "\2\2\u0199\u0197\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019c\3\2\2\2\u019b",
    "\u0199\3\2\2\2\u019c\u019d\7\r\2\2\u019d\u01a0\5\u00c0a\2\u019e\u019f",
    "\7:\2\2\u019f\u01a1\5\u00aaV\2\u01a0\u019e\3\2\2\2\u01a0\u01a1\3\2\2",
    "\2\u01a1\25\3\2\2\2\u01a2\u01a4\5\30\r\2\u01a3\u01a5\7\t\2\2\u01a4\u01a3",
    "\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a7\7\2\2\3",
    "\u01a7\27\3\2\2\2\u01a8\u01a9\7\'\2\2\u01a9\u01ab\5\32\16\2\u01aa\u01ac",
    "\5\u0092J\2\u01ab\u01aa\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01c3\3\2",
    "\2\2\u01ad\u01ae\5\u0092J\2\u01ae\u01af\7\63\2\2\u01af\u01b0\79\2\2",
    "\u01b0\u01b1\5\u00e2r\2\u01b1\u01c3\3\2\2\2\u01b2\u01b3\5\u0092J\2\u01b3",
    "\u01b4\7\65\2\2\u01b4\u01b5\7C\2\2\u01b5\u01b6\7\63\2\2\u01b6\u01b7",
    "\79\2\2\u01b7\u01b9\5\u00e2r\2\u01b8\u01ba\5\u00a6T\2\u01b9\u01b8\3",
    "\2\2\2\u01b9\u01ba\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01bc\7F\2\2\u01bc",
    "\u01bd\5\u00bc_\2\u01bd\u01c3\3\2\2\2\u01be\u01c0\5\u0092J\2\u01bf\u01be",
    "\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u01c3\5\u00a4",
    "S\2\u01c2\u01a8\3\2\2\2\u01c2\u01ad\3\2\2\2\u01c2\u01b2\3\2\2\2\u01c2",
    "\u01bf\3\2\2\2\u01c3\31\3\2\2\2\u01c4\u01c7\5\u00d2j\2\u01c5\u01c6\7",
    "A\2\2\u01c6\u01c8\5\u00d4k\2\u01c7\u01c5\3\2\2\2\u01c7\u01c8\3\2\2\2",
    "\u01c8\u01cb\3\2\2\2\u01c9\u01ca\7F\2\2\u01ca\u01cc\5\u00bc_\2\u01cb",
    "\u01c9\3\2\2\2\u01cb\u01cc\3\2\2\2\u01cc\u01d0\3\2\2\2\u01cd\u01ce\5",
    "\u00b4[\2\u01ce\u01cf\5\u00b6\\\2\u01cf\u01d1\3\2\2\2\u01d0\u01cd\3",
    "\2\2\2\u01d0\u01d1\3\2\2\2\u01d1\33\3\2\2\2\u01d2\u01d4\5\36\20\2\u01d3",
    "\u01d5\7\t\2\2\u01d4\u01d3\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5\u01d6\3",
    "\2\2\2\u01d6\u01d7\7\2\2\3\u01d7\35\3\2\2\2\u01d8\u01d9\7\"\2\2\u01d9",
    "\u01da\7#\2\2\u01da\u01db\5 \21\2\u01db\u01dc\7\16\2\2\u01dc\u01dd\5",
    "\"\22\2\u01dd\u01de\7\17\2\2\u01de\u01df\7\67\2\2\u01df\u01e0\5\u00ea",
    "v\2\u01e0\u01e1\5$\23\2\u01e1\37\3\2\2\2\u01e2\u01e3\5\u00f0y\2\u01e3",
    "!\3\2\2\2\u01e4\u01e5\5\u00f0y\2\u01e5#\3\2\2\2\u01e6\u01e7\7t\2\2\u01e7",
    "%\3\2\2\2\u01e8\u01ea\5(\25\2\u01e9\u01eb\7\t\2\2\u01ea\u01e9\3\2\2",
    "\2\u01ea\u01eb\3\2\2\2\u01eb\u01ec\3\2\2\2\u01ec\u01ed\7\2\2\3\u01ed",
    "\'\3\2\2\2\u01ee\u01ef\7\"\2\2\u01ef\u01f0\7$\2\2\u01f0\u01f1\5*\26",
    "\2\u01f1\u01f5\7B\2\2\u01f2\u01f3\7N\2\2\u01f3\u01f6\5\u00f4{\2\u01f4",
    "\u01f6\5\u0110\u0089\2\u01f5\u01f2\3\2\2\2\u01f5\u01f4\3\2\2\2\u01f6",
    ")\3\2\2\2\u01f7\u01f8\5\u00f0y\2\u01f8+\3\2\2\2\u01f9\u01fb\5.\30\2",
    "\u01fa\u01fc\7\t\2\2\u01fb\u01fa\3\2\2\2\u01fb\u01fc\3\2\2\2\u01fc\u01fd",
    "\3\2\2\2\u01fd\u01fe\7\2\2\3\u01fe-\3\2\2\2\u01ff\u0201\5:\36\2\u0200",
    "\u01ff\3\2\2\2\u0201\u0204\3\2\2\2\u0202\u0200\3\2\2\2\u0202\u0203\3",
    "\2\2\2\u0203\u0205\3\2\2\2\u0204\u0202\3\2\2\2\u0205\u0206\7\"\2\2\u0206",
    "\u0207\7j\2\2\u0207\u0208\5\60\31\2\u0208\u0209\7\'\2\2\u0209\u020a",
    "\5P)\2\u020a\u020b\5\u0090I\2\u020b\u020e\7k\2\2\u020c\u020d\7,\2\2",
    "\u020d\u020f\5\u00c8e\2\u020e\u020c\3\2\2\2\u020e\u020f\3\2\2\2\u020f",
    "\u0210\3\2\2\2\u0210\u0211\7N\2\2\u0211\u0212\5\62\32\2\u0212/\3\2\2",
    "\2\u0213\u0214\5\u00f0y\2\u0214\61\3\2\2\2\u0215\u0218\5\66\34\2\u0216",
    "\u0218\58\35\2\u0217\u0215\3\2\2\2\u0217\u0216\3\2\2\2\u0218\63\3\2",
    "\2\2\u0219\u021a\t\2\2\2\u021a\65\3\2\2\2\u021b\u021c\5\64\33\2\u021c",
    "\u021d\7\13\2\2\u021d\u021e\5\64\33\2\u021e\67\3\2\2\2\u021f\u0224\5",
    "\64\33\2\u0220\u0221\7\20\2\2\u0221\u0223\5\64\33\2\u0222\u0220\3\2",
    "\2\2\u0223\u0226\3\2\2\2\u0224\u0222\3\2\2\2\u0224\u0225\3\2\2\2\u0225",
    "9\3\2\2\2\u0226\u0224\3\2\2\2\u0227\u0228\7\36\2\2\u0228\u023a\5\u00e6",
    "t\2\u0229\u022c\7\f\2\2\u022a\u022d\5> \2\u022b\u022d\5:\36\2\u022c",
    "\u022a\3\2\2\2\u022c\u022b\3\2\2\2\u022d\u0235\3\2\2\2\u022e\u0231\7",
    "\20\2\2\u022f\u0232\5> \2\u0230\u0232\5:\36\2\u0231\u022f\3\2\2\2\u0231",
    "\u0230\3\2\2\2\u0232\u0234\3\2\2\2\u0233\u022e\3\2\2\2\u0234\u0237\3",
    "\2\2\2\u0235\u0233\3\2\2\2\u0235\u0236\3\2\2\2\u0236\u0238\3\2\2\2\u0237",
    "\u0235\3\2\2\2\u0238\u0239\7\r\2\2\u0239\u023b\3\2\2\2\u023a\u0229\3",
    "\2\2\2\u023a\u023b\3\2\2\2\u023b;\3\2\2\2\u023c\u023d\7\36\2\2\u023d",
    "\u023e\7&\2\2\u023e\u023f\7\b\2\2\u023f\u024b\5\u00e6t\2\u0240\u0241",
    "\7\f\2\2\u0241\u0246\5> \2\u0242\u0243\7\20\2\2\u0243\u0245\5> \2\u0244",
    "\u0242\3\2\2\2\u0245\u0248\3\2\2\2\u0246\u0244\3\2\2\2\u0246\u0247\3",
    "\2\2\2\u0247\u0249\3\2\2\2\u0248\u0246\3\2\2\2\u0249\u024a\7\r\2\2\u024a",
    "\u024c\3\2\2\2\u024b\u0240\3\2\2\2\u024b\u024c\3\2\2\2\u024c=\3\2\2",
    "\2\u024d\u024e\5\u00d6l\2\u024e\u024f\7\21\2\2\u024f\u0251\3\2\2\2\u0250",
    "\u024d\3\2\2\2\u0250\u0251\3\2\2\2\u0251\u0252\3\2\2\2\u0252\u0253\5",
    "\u00dco\2\u0253?\3\2\2\2\u0254\u0256\5:\36\2\u0255\u0254\3\2\2\2\u0256",
    "\u0259\3\2\2\2\u0257\u0255\3\2\2\2\u0257\u0258\3\2\2\2\u0258\u025a\3",
    "\2\2\2\u0259\u0257\3\2\2\2\u025a\u025b\7(\2\2\u025b\u025c\7J\2\2\u025c",
    "\u025d\7\f\2\2\u025d\u0262\5D#\2\u025e\u025f\7\20\2\2\u025f\u0261\5",
    "D#\2\u0260\u025e\3\2\2\2\u0261\u0264\3\2\2\2\u0262\u0260\3\2\2\2\u0262",
    "\u0263\3\2\2\2\u0263\u0265\3\2\2\2\u0264\u0262\3\2\2\2\u0265\u0266\7",
    "\r\2\2\u0266\u0269\7K\2\2\u0267\u026a\5L\'\2\u0268\u026a\5\4\3\2\u0269",
    "\u0267\3\2\2\2\u0269\u0268\3\2\2\2\u026a\u0272\3\2\2\2\u026b\u026e\7",
    "\t\2\2\u026c\u026f\5L\'\2\u026d\u026f\5\4\3\2\u026e\u026c\3\2\2\2\u026e",
    "\u026d\3\2\2\2\u026f\u0271\3\2\2\2\u0270\u026b\3\2\2\2\u0271\u0274\3",
    "\2\2\2\u0272\u0270\3\2\2\2\u0272\u0273\3\2\2\2\u0273\u0276\3\2\2\2\u0274",
    "\u0272\3\2\2\2\u0275\u0277\7\t\2\2\u0276\u0275\3\2\2\2\u0276\u0277\3",
    "\2\2\2\u0277\u0278\3\2\2\2\u0278\u0279\7L\2\2\u0279A\3\2\2\2\u027a\u027c",
    "\5@!\2\u027b\u027d\7\t\2\2\u027c\u027b\3\2\2\2\u027c\u027d\3\2\2\2\u027d",
    "\u027e\3\2\2\2\u027e\u027f\7\2\2\3\u027fC\3\2\2\2\u0280\u0281\5\u00ba",
    "^\2\u0281\u0282\7@\2\2\u0282\u0283\5\u00d0i\2\u0283\u0289\3\2\2\2\u0284",
    "\u0285\5F$\2\u0285\u0286\7@\2\2\u0286\u0287\5\u00d0i\2\u0287\u0289\3",
    "\2\2\2\u0288\u0280\3\2\2\2\u0288\u0284\3\2\2\2\u0289E\3\2\2\2\u028a",
    "\u028f\5H%\2\u028b\u028c\7C\2\2\u028c\u028e\5H%\2\u028d\u028b\3\2\2",
    "\2\u028e\u0291\3\2\2\2\u028f\u028d\3\2\2\2\u028f\u0290\3\2\2\2\u0290",
    "G\3\2\2\2\u0291\u028f\3\2\2\2\u0292\u0293\5\u00bc_\2\u0293\u0294\7A",
    "\2\2\u0294\u0295\5\u0110\u0089\2\u0295I\3\2\2\2\u0296\u0298\5L\'\2\u0297",
    "\u0299\7\t\2\2\u0298\u0297\3\2\2\2\u0298\u0299\3\2\2\2\u0299\u029a\3",
    "\2\2\2\u029a\u029b\7\2\2\3\u029bK\3\2\2\2\u029c\u029e\5:\36\2\u029d",
    "\u029c\3\2\2\2\u029e\u02a1\3\2\2\2\u029f\u029d\3\2\2\2\u029f\u02a0\3",
    "\2\2\2\u02a0\u02a2\3\2\2\2\u02a1\u029f\3\2\2\2\u02a2\u02a3\7\'\2\2\u02a3",
    "\u02a5\5N(\2\u02a4\u02a6\5\u0092J\2\u02a5\u02a4\3\2\2\2\u02a5\u02a6",
    "\3\2\2\2\u02a6\u02a8\3\2\2\2\u02a7\u02a9\5\u00acW\2\u02a8\u02a7\3\2",
    "\2\2\u02a8\u02a9\3\2\2\2\u02a9\u02aa\3\2\2\2\u02aa\u02ab\5\u00a2R\2",
    "\u02abM\3\2\2\2\u02ac\u02b2\5P)\2\u02ad\u02b2\5R*\2\u02ae\u02b2\5V,",
    "\2\u02af\u02b2\5v<\2\u02b0\u02b2\5\u0088E\2\u02b1\u02ac\3\2\2\2\u02b1",
    "\u02ad\3\2\2\2\u02b1\u02ae\3\2\2\2\u02b1\u02af\3\2\2\2\u02b1\u02b0\3",
    "\2\2\2\u02b2O\3\2\2\2\u02b3\u02b5\5\u00e0q\2\u02b4\u02b6\5r:\2\u02b5",
    "\u02b4\3\2\2\2\u02b5\u02b6\3\2\2\2\u02b6\u02b8\3\2\2\2\u02b7\u02b9\5",
    "\u008eH\2\u02b8\u02b7\3\2\2\2\u02b8\u02b9\3\2\2\2\u02b9\u02bb\3\2\2",
    "\2\u02ba\u02bc\5r:\2\u02bb\u02ba\3\2\2\2\u02bb\u02bc\3\2\2\2\u02bcQ",
    "\3\2\2\2\u02bd\u02c7\5T+\2\u02be\u02bf\5\u00ecw\2\u02bf\u02c1\5T+\2",
    "\u02c0\u02c2\7X\2\2\u02c1\u02c0\3\2\2\2\u02c1\u02c2\3\2\2\2\u02c2\u02c8",
    "\3\2\2\2\u02c3\u02c4\7X\2\2\u02c4\u02c5\5\u00ecw\2\u02c5\u02c6\5T+\2",
    "\u02c6\u02c8\3\2\2\2\u02c7\u02be\3\2\2\2\u02c7\u02c3\3\2\2\2\u02c8\u02cb",
    "\3\2\2\2\u02c9\u02ca\7F\2\2\u02ca\u02cc\5\u00bc_\2\u02cb\u02c9\3\2\2",
    "\2\u02cb\u02cc\3\2\2\2\u02cc\u02d0\3\2\2\2\u02cd\u02ce\5\u00b4[\2\u02ce",
    "\u02cf\5\u00b6\\\2\u02cf\u02d1\3\2\2\2\u02d0\u02cd\3\2\2\2\u02d0\u02d1",
    "\3\2\2\2\u02d1S\3\2\2\2\u02d2\u02d4\5\u00e0q\2\u02d3\u02d5\5r:\2\u02d4",
    "\u02d3\3\2\2\2\u02d4\u02d5\3\2\2\2\u02d5\u02d7\3\2\2\2\u02d6\u02d8\5",
    "\u008eH\2\u02d7\u02d6\3\2\2\2\u02d7\u02d8\3\2\2\2\u02d8\u02db\3\2\2",
    "\2\u02d9\u02da\7A\2\2\u02da\u02dc\5\u00d4k\2\u02db\u02d9\3\2\2\2\u02db",
    "\u02dc\3\2\2\2\u02dcU\3\2\2\2\u02dd\u02df\5X-\2\u02de\u02e0\5\u00b2",
    "Z\2\u02df\u02de\3\2\2\2\u02df\u02e0\3\2\2\2\u02e0\u02e6\3\2\2\2\u02e1",
    "\u02e3\5\\/\2\u02e2\u02e4\5\u00b2Z\2\u02e3\u02e2\3\2\2\2\u02e3\u02e4",
    "\3\2\2\2\u02e4\u02e6\3\2\2\2\u02e5\u02dd\3\2\2\2\u02e5\u02e1\3\2\2\2",
    "\u02e6W\3\2\2\2\u02e7\u02e8\b-\1\2\u02e8\u02e9\7\f\2\2\u02e9\u02ea\5",
    "X-\2\u02ea\u02eb\7\r\2\2\u02eb\u02f5\3\2\2\2\u02ec\u02ed\7N\2\2\u02ed",
    "\u02ee\7\f\2\2\u02ee\u02ef\5Z.\2\u02ef\u02f0\7\r\2\2\u02f0\u02f5\3\2",
    "\2\2\u02f1\u02f5\5Z.\2\u02f2\u02f3\7N\2\2\u02f3\u02f5\5b\62\2\u02f4",
    "\u02e7\3\2\2\2\u02f4\u02ec\3\2\2\2\u02f4\u02f1\3\2\2\2\u02f4\u02f2\3",
    "\2\2\2\u02f5\u02fb\3\2\2\2\u02f6\u02f7\f\5\2\2\u02f7\u02f8\7\37\2\2",
    "\u02f8\u02fa\5X-\6\u02f9\u02f6\3\2\2\2\u02fa\u02fd\3\2\2\2\u02fb\u02f9",
    "\3\2\2\2\u02fb\u02fc\3\2\2\2\u02fcY\3\2\2\2\u02fd\u02fb\3\2\2\2\u02fe",
    "\u02ff\b.\1\2\u02ff\u0300\7\f\2\2\u0300\u0301\5Z.\2\u0301\u0302\7\r",
    "\2\2\u0302\u0305\3\2\2\2\u0303\u0305\5b\62\2\u0304\u02fe\3\2\2\2\u0304",
    "\u0303\3\2\2\2\u0305\u030b\3\2\2\2\u0306\u0307\f\4\2\2\u0307\u0308\7",
    "\37\2\2\u0308\u030a\5Z.\5\u0309\u0306\3\2\2\2\u030a\u030d\3\2\2\2\u030b",
    "\u0309\3\2\2\2\u030b\u030c\3\2\2\2\u030c[\3\2\2\2\u030d\u030b\3\2\2",
    "\2\u030e\u0310\7N\2\2\u030f\u030e\3\2\2\2\u030f\u0310\3\2\2\2\u0310",
    "\u0311\3\2\2\2\u0311\u0312\7\f\2\2\u0312\u0313\5\\/\2\u0313\u0314\7",
    "\r\2\2\u0314\u0319\3\2\2\2\u0315\u0319\5h\65\2\u0316\u0319\5^\60\2\u0317",
    "\u0319\5`\61\2\u0318\u030f\3\2\2\2\u0318\u0315\3\2\2\2\u0318\u0316\3",
    "\2\2\2\u0318\u0317\3\2\2\2\u0319]\3\2\2\2\u031a\u031b\b\60\1\2\u031b",
    "\u031c\5X-\2\u031c\u031d\7\37\2\2\u031d\u031e\5^\60\3\u031e\u032b\3",
    "\2\2\2\u031f\u0321\7N\2\2\u0320\u031f\3\2\2\2\u0320\u0321\3\2\2\2\u0321",
    "\u0322\3\2\2\2\u0322\u0323\7\f\2\2\u0323\u0324\5^\60\2\u0324\u0325\7",
    "\r\2\2\u0325\u032b\3\2\2\2\u0326\u0327\5h\65\2\u0327\u0328\7\37\2\2",
    "\u0328\u0329\5X-\2\u0329\u032b\3\2\2\2\u032a\u031a\3\2\2\2\u032a\u0320",
    "\3\2\2\2\u032a\u0326\3\2\2\2\u032b\u0334\3\2\2\2\u032c\u032d\f\5\2\2",
    "\u032d\u032e\7\37\2\2\u032e\u0333\5^\60\6\u032f\u0330\f\4\2\2\u0330",
    "\u0331\7\37\2\2\u0331\u0333\5h\65\2\u0332\u032c\3\2\2\2\u0332\u032f",
    "\3\2\2\2\u0333\u0336\3\2\2\2\u0334\u0332\3\2\2\2\u0334\u0335\3\2\2\2",
    "\u0335_\3\2\2\2\u0336\u0334\3\2\2\2\u0337\u0338\b\61\1\2\u0338\u0339",
    "\5h\65\2\u0339\u033a\7\37\2\2\u033a\u033b\5`\61\4\u033b\u0348\3\2\2",
    "\2\u033c\u033e\7N\2\2\u033d\u033c\3\2\2\2\u033d\u033e\3\2\2\2\u033e",
    "\u033f\3\2\2\2\u033f\u0340\7\f\2\2\u0340\u0341\5`\61\2\u0341\u0342\7",
    "\r\2\2\u0342\u0348\3\2\2\2\u0343\u0344\5X-\2\u0344\u0345\7\37\2\2\u0345",
    "\u0346\5h\65\2\u0346\u0348\3\2\2\2\u0347\u0337\3\2\2\2\u0347\u033d\3",
    "\2\2\2\u0347\u0343\3\2\2\2\u0348\u0351\3\2\2\2\u0349\u034a\f\5\2\2\u034a",
    "\u034b\7\37\2\2\u034b\u0350\5`\61\6\u034c\u034d\f\3\2\2\u034d\u034e",
    "\7\37\2\2\u034e\u0350\5X-\2\u034f\u0349\3\2\2\2\u034f\u034c\3\2\2\2",
    "\u0350\u0353\3\2\2\2\u0351\u034f\3\2\2\2\u0351\u0352\3\2\2\2\u0352a",
    "\3\2\2\2\u0353\u0351\3\2\2\2\u0354\u0359\5d\63\2\u0355\u0359\5l\67\2",
    "\u0356\u0359\5n8\2\u0357\u0359\5f\64\2\u0358\u0354\3\2\2\2\u0358\u0355",
    "\3\2\2\2\u0358\u0356\3\2\2\2\u0358\u0357\3\2\2\2\u0359c\3\2\2\2\u035a",
    "\u035b\5n8\2\u035b\u035c\7D\2\2\u035c\u035d\5n8\2\u035d\u0363\3\2\2",
    "\2\u035e\u035f\5n8\2\u035f\u0360\7C\2\2\u0360\u0361\5n8\2\u0361\u0363",
    "\3\2\2\2\u0362\u035a\3\2\2\2\u0362\u035e\3\2\2\2\u0363e\3\2\2\2\u0364",
    "\u0365\7\f\2\2\u0365\u0366\5f\64\2\u0366\u0367\7\r\2\2\u0367\u038b\3",
    "\2\2\2\u0368\u0369\5n8\2\u0369\u036a\7D\2\2\u036a\u036b\7H\2\2\u036b",
    "\u036c\5p9\2\u036c\u038b\3\2\2\2\u036d\u036e\7H\2\2\u036e\u036f\5p9",
    "\2\u036f\u0370\7D\2\2\u0370\u0371\5n8\2\u0371\u038b\3\2\2\2\u0372\u0373",
    "\5n8\2\u0373\u0374\7D\2\2\u0374\u0375\5j\66\2\u0375\u038b\3\2\2\2\u0376",
    "\u0377\5j\66\2\u0377\u0378\7D\2\2\u0378\u0379\5n8\2\u0379\u038b\3\2",
    "\2\2\u037a\u037b\5j\66\2\u037b\u037c\7D\2\2\u037c\u037d\5j\66\2\u037d",
    "\u038b\3\2\2\2\u037e\u037f\5n8\2\u037f\u0380\7C\2\2\u0380\u0381\5j\66",
    "\2\u0381\u038b\3\2\2\2\u0382\u0383\5j\66\2\u0383\u0384\7C\2\2\u0384",
    "\u0385\5n8\2\u0385\u038b\3\2\2\2\u0386\u0387\5j\66\2\u0387\u0388\7C",
    "\2\2\u0388\u0389\5j\66\2\u0389\u038b\3\2\2\2\u038a\u0364\3\2\2\2\u038a",
    "\u0368\3\2\2\2\u038a\u036d\3\2\2\2\u038a\u0372\3\2\2\2\u038a\u0376\3",
    "\2\2\2\u038a\u037a\3\2\2\2\u038a\u037e\3\2\2\2\u038a\u0382\3\2\2\2\u038a",
    "\u0386\3\2\2\2\u038bg\3\2\2\2\u038c\u038e\7N\2\2\u038d\u038c\3\2\2\2",
    "\u038d\u038e\3\2\2\2\u038e\u038f\3\2\2\2\u038f\u0390\5j\66\2\u0390i",
    "\3\2\2\2\u0391\u0392\7H\2\2\u0392\u0393\5p9\2\u0393\u0394\5\u00b0Y\2",
    "\u0394k\3\2\2\2\u0395\u0396\5n8\2\u0396\u0397\7\30\2\2\u0397\u0398\5",
    "\u00e8u\2\u0398\u0399\7\32\2\2\u0399m\3\2\2\2\u039a\u039b\5\u00e4s\2",
    "\u039b\u039c\7\21\2\2\u039c\u039e\3\2\2\2\u039d\u039a\3\2\2\2\u039d",
    "\u039e\3\2\2\2\u039e\u039f\3\2\2\2\u039f\u03a0\5p9\2\u03a0o\3\2\2\2",
    "\u03a1\u03a3\5\u00e0q\2\u03a2\u03a4\5r:\2\u03a3\u03a2\3\2\2\2\u03a3",
    "\u03a4\3\2\2\2\u03a4q\3\2\2\2\u03a5\u03a7\5t;\2\u03a6\u03a5\3\2\2\2",
    "\u03a7\u03a8\3\2\2\2\u03a8\u03a6\3\2\2\2\u03a8\u03a9\3\2\2\2\u03a9s",
    "\3\2\2\2\u03aa\u03ad\5\u008aF\2\u03ab\u03ad\5\u008cG\2\u03ac\u03aa\3",
    "\2\2\2\u03ac\u03ab\3\2\2\2\u03adu\3\2\2\2\u03ae\u03b0\5x=\2\u03af\u03b1",
    "\5\u00b2Z\2\u03b0\u03af\3\2\2\2\u03b0\u03b1\3\2\2\2\u03b1\u03b7\3\2",
    "\2\2\u03b2\u03b4\5z>\2\u03b3\u03b5\5\u00b2Z\2\u03b4\u03b3\3\2\2\2\u03b4",
    "\u03b5\3\2\2\2\u03b5\u03b7\3\2\2\2\u03b6\u03ae\3\2\2\2\u03b6\u03b2\3",
    "\2\2\2\u03b7w\3\2\2\2\u03b8\u03ba\7N\2\2\u03b9\u03b8\3\2\2\2\u03b9\u03ba",
    "\3\2\2\2\u03ba\u03bb\3\2\2\2\u03bb\u03bc\5\u0084C\2\u03bc\u03bd\7\20",
    "\2\2\u03bd\u03be\5\u0082B\2\u03bey\3\2\2\2\u03bf\u03c1\7N\2\2\u03c0",
    "\u03bf\3\2\2\2\u03c0\u03c1\3\2\2\2\u03c1\u03c2\3\2\2\2\u03c2\u03c3\5",
    "|?\2\u03c3\u03c4\7\20\2\2\u03c4\u03c5\5\u0082B\2\u03c5\u03ce\3\2\2\2",
    "\u03c6\u03c8\7N\2\2\u03c7\u03c6\3\2\2\2\u03c7\u03c8\3\2\2\2\u03c8\u03c9",
    "\3\2\2\2\u03c9\u03ca\5\u0084C\2\u03ca\u03cb\7\20\2\2\u03cb\u03cc\5|",
    "?\2\u03cc\u03ce\3\2\2\2\u03cd\u03c0\3\2\2\2\u03cd\u03c7\3\2\2\2\u03ce",
    "{\3\2\2\2\u03cf\u03d0\7\f\2\2\u03d0\u03d1\5|?\2\u03d1\u03d2\7\r\2\2",
    "\u03d2\u03d7\3\2\2\2\u03d3\u03d7\5j\66\2\u03d4\u03d7\5~@\2\u03d5\u03d7",
    "\5\u0080A\2\u03d6\u03cf\3\2\2\2\u03d6\u03d3\3\2\2\2\u03d6\u03d4\3\2",
    "\2\2\u03d6\u03d5\3\2\2\2\u03d7}\3\2\2\2\u03d8\u03d9\b@\1\2\u03d9\u03da",
    "\5\u0082B\2\u03da\u03db\7\20\2\2\u03db\u03dc\5~@\3\u03dc\u03e6\3\2\2",
    "\2\u03dd\u03de\7\f\2\2\u03de\u03df\5~@\2\u03df\u03e0\7\r\2\2\u03e0\u03e6",
    "\3\2\2\2\u03e1\u03e2\5j\66\2\u03e2\u03e3\7\20\2\2\u03e3\u03e4\5\u0082",
    "B\2\u03e4\u03e6\3\2\2\2\u03e5\u03d8\3\2\2\2\u03e5\u03dd\3\2\2\2\u03e5",
    "\u03e1\3\2\2\2\u03e6\u03ef\3\2\2\2\u03e7\u03e8\f\5\2\2\u03e8\u03e9\7",
    "\20\2\2\u03e9\u03ee\5~@\6\u03ea\u03eb\f\4\2\2\u03eb\u03ec\7\20\2\2\u03ec",
    "\u03ee\5j\66\2\u03ed\u03e7\3\2\2\2\u03ed\u03ea\3\2\2\2\u03ee\u03f1\3",
    "\2\2\2\u03ef\u03ed\3\2\2\2\u03ef\u03f0\3\2\2\2\u03f0\177\3\2\2\2\u03f1",
    "\u03ef\3\2\2\2\u03f2\u03f3\bA\1\2\u03f3\u03f4\5j\66\2\u03f4\u03f5\7",
    "\20\2\2\u03f5\u03f6\5\u0080A\4\u03f6\u0400\3\2\2\2\u03f7\u03f8\7\f\2",
    "\2\u03f8\u03f9\5\u0080A\2\u03f9\u03fa\7\r\2\2\u03fa\u0400\3\2\2\2\u03fb",
    "\u03fc\5\u0082B\2\u03fc\u03fd\7\20\2\2\u03fd\u03fe\5j\66\2\u03fe\u0400",
    "\3\2\2\2\u03ff\u03f2\3\2\2\2\u03ff\u03f7\3\2\2\2\u03ff\u03fb\3\2\2\2",
    "\u0400\u0409\3\2\2\2\u0401\u0402\f\5\2\2\u0402\u0403\7\20\2\2\u0403",
    "\u0408\5\u0080A\6\u0404\u0405\f\3\2\2\u0405\u0406\7\20\2\2\u0406\u0408",
    "\5\u0082B\2\u0407\u0401\3\2\2\2\u0407\u0404\3\2\2\2\u0408\u040b\3\2",
    "\2\2\u0409\u0407\3\2\2\2\u0409\u040a\3\2\2\2\u040a\u0081\3\2\2\2\u040b",
    "\u0409\3\2\2\2\u040c\u040d\bB\1\2\u040d\u040e\7\f\2\2\u040e\u040f\5",
    "\u0082B\2\u040f\u0410\7\r\2\2\u0410\u0413\3\2\2\2\u0411\u0413\5\u0084",
    "C\2\u0412\u040c\3\2\2\2\u0412\u0411\3\2\2\2\u0413\u0419\3\2\2\2\u0414",
    "\u0415\f\4\2\2\u0415\u0416\7\20\2\2\u0416\u0418\5\u0082B\5\u0417\u0414",
    "\3\2\2\2\u0418\u041b\3\2\2\2\u0419\u0417\3\2\2\2\u0419\u041a\3\2\2\2",
    "\u041a\u0083\3\2\2\2\u041b\u0419\3\2\2\2\u041c\u0421\5d\63\2\u041d\u0421",
    "\5\u0086D\2\u041e\u0421\5n8\2\u041f\u0421\5f\64\2\u0420\u041c\3\2\2",
    "\2\u0420\u041d\3\2\2\2\u0420\u041e\3\2\2\2\u0420\u041f\3\2\2\2\u0421",
    "\u0085\3\2\2\2\u0422\u042a\5n8\2\u0423\u0424\7\30\2\2\u0424\u0425\5",
    "\u00e8u\2\u0425\u0426\7\32\2\2\u0426\u042b\3\2\2\2\u0427\u042b\7\22",
    "\2\2\u0428\u042b\7\24\2\2\u0429\u042b\7\23\2\2\u042a\u0423\3\2\2\2\u042a",
    "\u0427\3\2\2\2\u042a\u0428\3\2\2\2\u042a\u0429\3\2\2\2\u042b\u0087\3",
    "\2\2\2\u042c\u042d\7\f\2\2\u042d\u042e\5\u0088E\2\u042e\u042f\7\r\2",
    "\2\u042f\u043d\3\2\2\2\u0430\u0431\7\'\2\2\u0431\u0433\5N(\2\u0432\u0434",
    "\5\u0092J\2\u0433\u0432\3\2\2\2\u0433\u0434\3\2\2\2\u0434\u0436\3\2",
    "\2\2\u0435\u0437\5\u00acW\2\u0436\u0435\3\2\2\2\u0436\u0437\3\2\2\2",
    "\u0437\u0438\3\2\2\2\u0438\u043a\7\67\2\2\u0439\u043b\5\u00aaV\2\u043a",
    "\u0439\3\2\2\2\u043a\u043b\3\2\2\2\u043b\u043d\3\2\2\2\u043c\u042c\3",
    "\2\2\2\u043c\u0430\3\2\2\2\u043d\u0089\3\2\2\2\u043e\u0440\7 \2\2\u043f",
    "\u043e\3\2\2\2\u043f\u0440\3\2\2\2\u0440\u0441\3\2\2\2\u0441\u0442\7",
    "\16\2\2\u0442\u0443\5\u00bc_\2\u0443\u0444\7\17\2\2\u0444\u008b\3\2",
    "\2\2\u0445\u0446\7 \2\2\u0446\u0447\5\u00c0a\2\u0447\u008d\3\2\2\2\u0448",
    "\u0449\7 \2\2\u0449\u044a\7)\2\2\u044a\u044b\7\n\2\2\u044b\u044c\5\u00c0",
    "a\2\u044c\u008f\3\2\2\2\u044d\u0457\7*\2\2\u044e\u0458\7\22\2\2\u044f",
    "\u0454\5\u00b8]\2\u0450\u0451\7\20\2\2\u0451\u0453\5\u00b8]\2\u0452",
    "\u0450\3\2\2\2\u0453\u0456\3\2\2\2\u0454\u0452\3\2\2\2\u0454\u0455\3",
    "\2\2\2\u0455\u0458\3\2\2\2\u0456\u0454\3\2\2\2\u0457\u044e\3\2\2\2\u0457",
    "\u044f\3\2\2\2\u0458\u045a\3\2\2\2\u0459\u045b\5\u0094K\2\u045a\u0459",
    "\3\2\2\2\u045a\u045b\3\2\2\2\u045b\u0091\3\2\2\2\u045c\u0466\7*\2\2",
    "\u045d\u0467\7\22\2\2\u045e\u0463\5\u00b8]\2\u045f\u0460\7\20\2\2\u0460",
    "\u0462\5\u00b8]\2\u0461\u045f\3\2\2\2\u0462\u0465\3\2\2\2\u0463\u0461",
    "\3\2\2\2\u0463\u0464\3\2\2\2\u0464\u0467\3\2\2\2\u0465\u0463\3\2\2\2",
    "\u0466\u045d\3\2\2\2\u0466\u045e\3\2\2\2\u0467\u0469\3\2\2\2\u0468\u046a",
    "\5\u0094K\2\u0469\u0468\3\2\2\2\u0469\u046a\3\2\2\2\u046a\u046c\3\2",
    "\2\2\u046b\u046d\5\u0096L\2\u046c\u046b\3\2\2\2\u046c\u046d\3\2\2\2",
    "\u046d\u046f\3\2\2\2\u046e\u0470\5\u0098M\2\u046f\u046e\3\2\2\2\u046f",
    "\u0470\3\2\2\2\u0470\u0472\3\2\2\2\u0471\u0473\5\u009eP\2\u0472\u0471",
    "\3\2\2\2\u0472\u0473\3\2\2\2\u0473\u0475\3\2\2\2\u0474\u0476\5\u00a0",
    "Q\2\u0475\u0474\3\2\2\2\u0475\u0476\3\2\2\2\u0476\u0093\3\2\2\2\u0477",
    "\u0478\7+\2\2\u0478\u0479\7,\2\2\u0479\u047e\5\u00c8e\2\u047a\u047b",
    "\7\20\2\2\u047b\u047d\5\u00c8e\2\u047c\u047a\3\2\2\2\u047d\u0480\3\2",
    "\2\2\u047e\u047c\3\2\2\2\u047e\u047f\3\2\2\2\u047f\u0095\3\2\2\2\u0480",
    "\u047e\3\2\2\2\u0481\u0482\7\62\2\2\u0482\u0483\5\u00bc_\2\u0483\u0097",
    "\3\2\2\2\u0484\u0485\7-\2\2\u0485\u0486\7,\2\2\u0486\u048b\5\u009aN",
    "\2\u0487\u0488\7\20\2\2\u0488\u048a\5\u009aN\2\u0489\u0487\3\2\2\2\u048a",
    "\u048d\3\2\2\2\u048b\u0489\3\2\2\2\u048b\u048c\3\2\2\2\u048c\u0099\3",
    "\2\2\2\u048d\u048b\3\2\2\2\u048e\u0490\5\u00c8e\2\u048f\u0491\5\u009c",
    "O\2\u0490\u048f\3\2\2\2\u0490\u0491\3\2\2\2\u0491\u009b\3\2\2\2\u0492",
    "\u0493\t\3\2\2\u0493\u009d\3\2\2\2\u0494\u0495\7.\2\2\u0495\u0496\5",
    "\u00bc_\2\u0496\u009f\3\2\2\2\u0497\u0498\7/\2\2\u0498\u0499\5\u00bc",
    "_\2\u0499\u00a1\3\2\2\2\u049a\u049c\7\63\2\2\u049b\u049d\5\u00aaV\2",
    "\u049c\u049b\3\2\2\2\u049c\u049d\3\2\2\2\u049d\u049e\3\2\2\2\u049e\u049f",
    "\79\2\2\u049f\u04c9\5\u00e2r\2\u04a0\u04a1\7\64\2\2\u04a1\u04a4\5\u00e2",
    "r\2\u04a2\u04a3\7>\2\2\u04a3\u04a5\5\u00aaV\2\u04a4\u04a2\3\2\2\2\u04a4",
    "\u04a5\3\2\2\2\u04a5\u04a6\3\2\2\2\u04a6\u04a7\7F\2\2\u04a7\u04a8\5",
    "\u00bc_\2\u04a8\u04c9\3\2\2\2\u04a9\u04aa\7\65\2\2\u04aa\u04ab\7C\2",
    "\2\u04ab\u04ac\7\63\2\2\u04ac\u04ad\79\2\2\u04ad\u04b0\5\u00e2r\2\u04ae",
    "\u04af\7>\2\2\u04af\u04b1\5\u00aaV\2\u04b0\u04ae\3\2\2\2\u04b0\u04b1",
    "\3\2\2\2\u04b1\u04b3\3\2\2\2\u04b2\u04b4\5\u00a6T\2\u04b3\u04b2\3\2",
    "\2\2\u04b3\u04b4\3\2\2\2\u04b4\u04b5\3\2\2\2\u04b5\u04b6\7F\2\2\u04b6",
    "\u04b7\5\u00bc_\2\u04b7\u04c9\3\2\2\2\u04b8\u04b9\7\65\2\2\u04b9\u04bc",
    "\5\u00e2r\2\u04ba\u04bb\7>\2\2\u04bb\u04bd\5\u00aaV\2\u04bc\u04ba\3",
    "\2\2\2\u04bc\u04bd\3\2\2\2\u04bd\u04bf\3\2\2\2\u04be\u04c0\5\u00a6T",
    "\2\u04bf\u04be\3\2\2\2\u04bf\u04c0\3\2\2\2\u04c0\u04c1\3\2\2\2\u04c1",
    "\u04c2\7F\2\2\u04c2\u04c3\5\u00bc_\2\u04c3\u04c9\3\2\2\2\u04c4\u04c6",
    "\7\67\2\2\u04c5\u04c7\5\u00aaV\2\u04c6\u04c5\3\2\2\2\u04c6\u04c7\3\2",
    "\2\2\u04c7\u04c9\3\2\2\2\u04c8\u049a\3\2\2\2\u04c8\u04a0\3\2\2\2\u04c8",
    "\u04a9\3\2\2\2\u04c8\u04b8\3\2\2\2\u04c8\u04c4\3\2\2\2\u04c9\u00a3\3",
    "\2\2\2\u04ca\u04cb\7\64\2\2\u04cb\u04cc\5\u00e2r\2\u04cc\u04cd\7F\2",
    "\2\u04cd\u04ce\5\u00bc_\2\u04ce\u04d8\3\2\2\2\u04cf\u04d0\7\65\2\2\u04d0",
    "\u04d2\5\u00e2r\2\u04d1\u04d3\5\u00a6T\2\u04d2\u04d1\3\2\2\2\u04d2\u04d3",
    "\3\2\2\2\u04d3\u04d4\3\2\2\2\u04d4\u04d5\7F\2\2\u04d5\u04d6\5\u00bc",
    "_\2\u04d6\u04d8\3\2\2\2\u04d7\u04ca\3\2\2\2\u04d7\u04cf\3\2\2\2\u04d8",
    "\u00a5\3\2\2\2\u04d9\u04da\7\66\2\2\u04da\u04df\5\u00a8U\2\u04db\u04dc",
    "\7\20\2\2\u04dc\u04de\5\u00a8U\2\u04dd\u04db\3\2\2\2\u04de\u04e1\3\2",
    "\2\2\u04df\u04dd\3\2\2\2\u04df\u04e0\3\2\2\2\u04e0\u00a7\3\2\2\2\u04e1",
    "\u04df\3\2\2\2\u04e2\u04e3\5\u00c8e\2\u04e3\u04e4\7\21\2\2\u04e4\u04e5",
    "\5\u00bc_\2\u04e5\u00a9\3\2\2\2\u04e6\u04e7\7P\2\2\u04e7\u04ef\78\2",
    "\2\u04e8\u04e9\7;\2\2\u04e9\u04ef\78\2\2\u04ea\u04ec\7<\2\2\u04eb\u04ea",
    "\3\2\2\2\u04eb\u04ec\3\2\2\2\u04ec\u04ed\3\2\2\2\u04ed\u04ef\78\2\2",
    "\u04ee\u04e6\3\2\2\2\u04ee\u04e8\3\2\2\2\u04ee\u04eb\3\2\2\2\u04ef\u00ab",
    "\3\2\2\2\u04f0\u04f2\7:\2\2\u04f1\u04f3\5\u00aeX\2\u04f2\u04f1\3\2\2",
    "\2\u04f2\u04f3\3\2\2\2\u04f3\u04f4\3\2\2\2\u04f4\u04f8\7N\2\2\u04f5",
    "\u04f9\5\u00f4{\2\u04f6\u04f7\7\4\2\2\u04f7\u04f9\78\2\2\u04f8\u04f5",
    "\3\2\2\2\u04f8\u04f6\3\2\2\2\u04f9\u04ff\3\2\2\2\u04fa\u04fb\7:\2\2",
    "\u04fb\u04fc\7=\2\2\u04fc\u04fd\7N\2\2\u04fd\u04ff\5\u00f4{\2\u04fe",
    "\u04f0\3\2\2\2\u04fe\u04fa\3\2\2\2\u04ff\u00ad\3\2\2\2\u0500\u0501\t",
    "\4\2\2\u0501\u00af\3\2\2\2\u0502\u0503\7>\2\2\u0503\u0504\5\u00f4{\2",
    "\u0504\u00b1\3\2\2\2\u0505\u0506\7I\2\2\u0506\u0507\5\u00f4{\2\u0507",
    "\u00b3\3\2\2\2\u0508\u0509\7I\2\2\u0509\u050c\5\u00bc_\2\u050a\u050b",
    "\7\20\2\2\u050b\u050d\5\u00bc_\2\u050c\u050a\3\2\2\2\u050c\u050d\3\2",
    "\2\2\u050d\u00b5\3\2\2\2\u050e\u050f\7l\2\2\u050f\u0510\5\u00bc_\2\u0510",
    "\u00b7\3\2\2\2\u0511\u0512\5\u00ba^\2\u0512\u0513\7A\2\2\u0513\u0514",
    "\5\u00d8m\2\u0514\u0517\3\2\2\2\u0515\u0517\5\u00c8e\2\u0516\u0511\3",
    "\2\2\2\u0516\u0515\3\2\2\2\u0517\u00b9\3\2\2\2\u0518\u0519\5\u00be`",
    "\2\u0519\u00bb\3\2\2\2\u051a\u051b\5\u00be`\2\u051b\u00bd\3\2\2\2\u051c",
    "\u051d\b`\1\2\u051d\u051e\7H\2\2\u051e\u0528\5\u00be`\r\u051f\u0520",
    "\7\f\2\2\u0520\u0521\5\u00be`\2\u0521\u0522\7\r\2\2\u0522\u0528\3\2",
    "\2\2\u0523\u0528\5\u00c4c\2\u0524\u0528\5\u00c0a\2\u0525\u0528\5\u00ee",
    "x\2\u0526\u0528\5\u00c8e\2\u0527\u051c\3\2\2\2\u0527\u051f\3\2\2\2\u0527",
    "\u0523\3\2\2\2\u0527\u0524\3\2\2\2\u0527\u0525\3\2\2\2\u0527\u0526\3",
    "\2\2\2\u0528\u054f\3\2\2\2\u0529\u052d\f\f\2\2\u052a\u052e\7\22\2\2",
    "\u052b\u052e\7\26\2\2\u052c\u052e\7\27\2\2\u052d\u052a\3\2\2\2\u052d",
    "\u052b\3\2\2\2\u052d\u052c\3\2\2\2\u052e\u052f\3\2\2\2\u052f\u054e\5",
    "\u00be`\r\u0530\u0533\f\13\2\2\u0531\u0534\7\23\2\2\u0532\u0534\7\25",
    "\2\2\u0533\u0531\3\2\2\2\u0533\u0532\3\2\2\2\u0534\u0535\3\2\2\2\u0535",
    "\u054e\5\u00be`\f\u0536\u053b\f\n\2\2\u0537\u053c\7\33\2\2\u0538\u053c",
    "\7\31\2\2\u0539\u053c\7\32\2\2\u053a\u053c\7\30\2\2\u053b\u0537\3\2",
    "\2\2\u053b\u0538\3\2\2\2\u053b\u0539\3\2\2\2\u053b\u053a\3\2\2\2\u053c",
    "\u053d\3\2\2\2\u053d\u054e\5\u00be`\13\u053e\u0541\f\t\2\2\u053f\u0542",
    "\7\34\2\2\u0540\u0542\7\35\2\2\u0541\u053f\3\2\2\2\u0541\u0540\3\2\2",
    "\2\u0542\u0543\3\2\2\2\u0543\u054e\5\u00be`\n\u0544\u0545\f\7\2\2\u0545",
    "\u0546\7D\2\2\u0546\u054e\5\u00be`\b\u0547\u0548\f\6\2\2\u0548\u0549",
    "\7C\2\2\u0549\u054e\5\u00be`\7\u054a\u054b\f\b\2\2\u054b\u054c\7E\2",
    "\2\u054c\u054e\5\u00e6t\2\u054d\u0529\3\2\2\2\u054d\u0530\3\2\2\2\u054d",
    "\u0536\3\2\2\2\u054d\u053e\3\2\2\2\u054d\u0544\3\2\2\2\u054d\u0547\3",
    "\2\2\2\u054d\u054a\3\2\2\2\u054e\u0551\3\2\2\2\u054f\u054d\3\2\2\2\u054f",
    "\u0550\3\2\2\2\u0550\u00bf\3\2\2\2\u0551\u054f\3\2\2\2\u0552\u0553\5",
    "\u00ceh\2\u0553\u0554\7\b\2\2\u0554\u0556\3\2\2\2\u0555\u0552\3\2\2",
    "\2\u0555\u0556\3\2\2\2\u0556\u0557\3\2\2\2\u0557\u0558\5\u00ccg\2\u0558",
    "\u055a\7\f\2\2\u0559\u055b\5\u00c2b\2\u055a\u0559\3\2\2\2\u055a\u055b",
    "\3\2\2\2\u055b\u055c\3\2\2\2\u055c\u055d\7\r\2\2\u055d\u00c1\3\2\2\2",
    "\u055e\u0563\5\u00ba^\2\u055f\u0560\7\20\2\2\u0560\u0562\5\u00ba^\2",
    "\u0561\u055f\3\2\2\2\u0562\u0565\3\2\2\2\u0563\u0561\3\2\2\2\u0563\u0564",
    "\3\2\2\2\u0564\u0568\3\2\2\2\u0565\u0563\3\2\2\2\u0566\u0568\7\22\2",
    "\2\u0567\u055e\3\2\2\2\u0567\u0566\3\2\2\2\u0568\u00c3\3\2\2\2\u0569",
    "\u056d\5\u00c6d\2\u056a\u056d\5\u00c8e\2\u056b\u056d\5\u00c0a\2\u056c",
    "\u0569\3\2\2\2\u056c\u056a\3\2\2\2\u056c\u056b\3\2\2\2\u056d\u056e\3",
    "\2\2\2\u056e\u056f\7G\2\2\u056f\u0570\7M\2\2\u0570\u00c5\3\2\2\2\u0571",
    "\u0574\7 \2\2\u0572\u0574\7\3\2\2\u0573\u0571\3\2\2\2\u0573\u0572\3",
    "\2\2\2\u0573\u0574\3\2\2\2\u0574\u0575\3\2\2\2\u0575\u057a\5\u00e6t",
    "\2\u0576\u0577\7\16\2\2\u0577\u0578\5\u00caf\2\u0578\u0579\7\17\2\2",
    "\u0579\u057b\3\2\2\2\u057a\u0576\3\2\2\2\u057a\u057b\3\2\2\2\u057b\u00c7",
    "\3\2\2\2\u057c\u057f\7 \2\2\u057d\u057f\7\3\2\2\u057e\u057c\3\2\2\2",
    "\u057e\u057d\3\2\2\2\u057e\u057f\3\2\2\2\u057f\u0580\3\2\2\2\u0580\u0585",
    "\5\u00e6t\2\u0581\u0582\7\16\2\2\u0582\u0583\5\u00caf\2\u0583\u0584",
    "\7\17\2\2\u0584\u0586\3\2\2\2\u0585\u0581\3\2\2\2\u0585\u0586\3\2\2",
    "\2\u0586\u058f\3\2\2\2\u0587\u0588\7 \2\2\u0588\u058d\5\u00e6t\2\u0589",
    "\u058a\7\16\2\2\u058a\u058b\5\u00caf\2\u058b\u058c\7\17\2\2\u058c\u058e",
    "\3\2\2\2\u058d\u0589\3\2\2\2\u058d\u058e\3\2\2\2\u058e\u0590\3\2\2\2",
    "\u058f\u0587\3\2\2\2\u058f\u0590\3\2\2\2\u0590\u0591\3\2\2\2\u0591\u0592",
    "\7\n\2\2\u0592\u0593\5\u00d8m\2\u0593\u0596\3\2\2\2\u0594\u0596\5\u00d8",
    "m\2\u0595\u057e\3\2\2\2\u0595\u0594\3\2\2\2\u0596\u00c9\3\2\2\2\u0597",
    "\u059e\7\4\2\2\u0598\u059b\7O\2\2\u0599\u059a\7\25\2\2\u059a\u059c\7",
    "\4\2\2\u059b\u0599\3\2\2\2\u059b\u059c\3\2\2\2\u059c\u059e\3\2\2\2\u059d",
    "\u0597\3\2\2\2\u059d\u0598\3\2\2\2\u059e\u00cb\3\2\2\2\u059f\u05a0\5",
    "\u00e6t\2\u05a0\u00cd\3\2\2\2\u05a1\u05a2\5\u00e6t\2\u05a2\u00cf\3\2",
    "\2\2\u05a3\u05a4\5\u00e6t\2\u05a4\u00d1\3\2\2\2\u05a5\u05a6\5\u00e6",
    "t\2\u05a6\u00d3\3\2\2\2\u05a7\u05a8\5\u00e6t\2\u05a8\u00d5\3\2\2\2\u05a9",
    "\u05af\5\u00e6t\2\u05aa\u05ab\5\u00dep\2\u05ab\u05ac\5\u00e6t\2\u05ac",
    "\u05ae\3\2\2\2\u05ad\u05aa\3\2\2\2\u05ae\u05b1\3\2\2\2\u05af\u05ad\3",
    "\2\2\2\u05af\u05b0\3\2\2\2\u05b0\u05b4\3\2\2\2\u05b1\u05af\3\2\2\2\u05b2",
    "\u05b4\5\u0110\u0089\2\u05b3\u05a9\3\2\2\2\u05b3\u05b2\3\2\2\2\u05b4",
    "\u00d7\3\2\2\2\u05b5\u05b6\5\u00e6t\2\u05b6\u00d9\3\2\2\2\u05b7\u05b8",
    "\5\u00e6t\2\u05b8\u00db\3\2\2\2\u05b9\u05ba\5\u0110\u0089\2\u05ba\u00dd",
    "\3\2\2\2\u05bb\u05bc\t\5\2\2\u05bc\u00df\3\2\2\2\u05bd\u05c0\7 \2\2",
    "\u05be\u05c0\7\3\2\2\u05bf\u05bd\3\2\2\2\u05bf\u05be\3\2\2\2\u05bf\u05c0",
    "\3\2\2\2\u05c0\u05c1\3\2\2\2\u05c1\u05c2\5\u00d0i\2\u05c2\u00e1\3\2",
    "\2\2\u05c3\u05c4\5\u00e0q\2\u05c4\u00e3\3\2\2\2\u05c5\u05c6\5\u00e6",
    "t\2\u05c6\u00e5\3\2\2\2\u05c7\u05ca\5\u00f0y\2\u05c8\u05ca\5\u00f2z",
    "\2\u05c9\u05c7\3\2\2\2\u05c9\u05c8\3\2\2\2\u05ca\u00e7\3\2\2\2\u05cb",
    "\u05cc\7\4\2\2\u05cc\u05cd\7\b\2\2\u05cd\u05d4\7\4\2\2\u05ce\u05cf\7",
    "\4\2\2\u05cf\u05d4\7\b\2\2\u05d0\u05d1\7\b\2\2\u05d1\u05d4\7\4\2\2\u05d2",
    "\u05d4\7\4\2\2\u05d3\u05cb\3\2\2\2\u05d3\u05ce\3\2\2\2\u05d3\u05d0\3",
    "\2\2\2\u05d3\u05d2\3\2\2\2\u05d4\u00e9\3\2\2\2\u05d5\u05d6\t\6\2\2\u05d6",
    "\u00eb\3\2\2\2\u05d7\u05d8\7V\2\2\u05d8\u05d9\7T\2\2\u05d9\u05e7\7R",
    "\2\2\u05da\u05db\7U\2\2\u05db\u05dc\7T\2\2\u05dc\u05e7\7R\2\2\u05dd",
    "\u05de\7W\2\2\u05de\u05df\7T\2\2\u05df\u05e7\7R\2\2\u05e0\u05e1\7T\2",
    "\2\u05e1\u05e7\7R\2\2\u05e2\u05e4\7S\2\2\u05e3\u05e2\3\2\2\2\u05e3\u05e4",
    "\3\2\2\2\u05e4\u05e5\3\2\2\2\u05e5\u05e7\7R\2\2\u05e6\u05d7\3\2\2\2",
    "\u05e6\u05da\3\2\2\2\u05e6\u05dd\3\2\2\2\u05e6\u05e0\3\2\2\2\u05e6\u05e3",
    "\3\2\2\2\u05e7\u00ed\3\2\2\2\u05e8\u05f0\5\u010e\u0088\2\u05e9\u05f0",
    "\5\u0106\u0084\2\u05ea\u05f0\5\u010a\u0086\2\u05eb\u05f0\5\u0108\u0085",
    "\2\u05ec\u05f0\5\u010c\u0087\2\u05ed\u05f0\5\u00f4{\2\u05ee\u05f0\5",
    "\u0110\u0089\2\u05ef\u05e8\3\2\2\2\u05ef\u05e9\3\2\2\2\u05ef\u05ea\3",
    "\2\2\2\u05ef\u05eb\3\2\2\2\u05ef\u05ec\3\2\2\2\u05ef\u05ed\3\2\2\2\u05ef",
    "\u05ee\3\2\2\2\u05f0\u00ef\3\2\2\2\u05f1\u05f2\t\7\2\2\u05f2\u00f1\3",
    "\2\2\2\u05f3\u05f4\t\b\2\2\u05f4\u00f3\3\2\2\2\u05f5\u05f7\5\u00f6|",
    "\2\u05f6\u05f8\5\u00f8}\2\u05f7\u05f6\3\2\2\2\u05f7\u05f8\3\2\2\2\u05f8",
    "\u05fa\3\2\2\2\u05f9\u05fb\5\u00fa~\2\u05fa\u05f9\3\2\2\2\u05fa\u05fb",
    "\3\2\2\2\u05fb\u05fd\3\2\2\2\u05fc\u05fe\5\u00fc\177\2\u05fd\u05fc\3",
    "\2\2\2\u05fd\u05fe\3\2\2\2\u05fe\u0600\3\2\2\2\u05ff\u0601\5\u00fe\u0080",
    "\2\u0600\u05ff\3\2\2\2\u0600\u0601\3\2\2\2\u0601\u0603\3\2\2\2\u0602",
    "\u0604\5\u0100\u0081\2\u0603\u0602\3\2\2\2\u0603\u0604\3\2\2\2\u0604",
    "\u0606\3\2\2\2\u0605\u0607\5\u0102\u0082\2\u0606\u0605\3\2\2\2\u0606",
    "\u0607\3\2\2\2\u0607\u0609\3\2\2\2\u0608\u060a\5\u0104\u0083\2\u0609",
    "\u0608\3\2\2\2\u0609\u060a\3\2\2\2\u060a\u0652\3\2\2\2\u060b\u060d\5",
    "\u00f8}\2\u060c\u060e\5\u00fa~\2\u060d\u060c\3\2\2\2\u060d\u060e\3\2",
    "\2\2\u060e\u0610\3\2\2\2\u060f\u0611\5\u00fc\177\2\u0610\u060f\3\2\2",
    "\2\u0610\u0611\3\2\2\2\u0611\u0613\3\2\2\2\u0612\u0614\5\u00fe\u0080",
    "\2\u0613\u0612\3\2\2\2\u0613\u0614\3\2\2\2\u0614\u0616\3\2\2\2\u0615",
    "\u0617\5\u0100\u0081\2\u0616\u0615\3\2\2\2\u0616\u0617\3\2\2\2\u0617",
    "\u0619\3\2\2\2\u0618\u061a\5\u0102\u0082\2\u0619\u0618\3\2\2\2\u0619",
    "\u061a\3\2\2\2\u061a\u061c\3\2\2\2\u061b\u061d\5\u0104\u0083\2\u061c",
    "\u061b\3\2\2\2\u061c\u061d\3\2\2\2\u061d\u0652\3\2\2\2\u061e\u0620\5",
    "\u00fa~\2\u061f\u0621\5\u00fc\177\2\u0620\u061f\3\2\2\2\u0620\u0621",
    "\3\2\2\2\u0621\u0623\3\2\2\2\u0622\u0624\5\u00fe\u0080\2\u0623\u0622",
    "\3\2\2\2\u0623\u0624\3\2\2\2\u0624\u0626\3\2\2\2\u0625\u0627\5\u0100",
    "\u0081\2\u0626\u0625\3\2\2\2\u0626\u0627\3\2\2\2\u0627\u0629\3\2\2\2",
    "\u0628\u062a\5\u0102\u0082\2\u0629\u0628\3\2\2\2\u0629\u062a\3\2\2\2",
    "\u062a\u062c\3\2\2\2\u062b\u062d\5\u0104\u0083\2\u062c\u062b\3\2\2\2",
    "\u062c\u062d\3\2\2\2\u062d\u0652\3\2\2\2\u062e\u0630\5\u00fc\177\2\u062f",
    "\u0631\5\u00fe\u0080\2\u0630\u062f\3\2\2\2\u0630\u0631\3\2\2\2\u0631",
    "\u0633\3\2\2\2\u0632\u0634\5\u0100\u0081\2\u0633\u0632\3\2\2\2\u0633",
    "\u0634\3\2\2\2\u0634\u0636\3\2\2\2\u0635\u0637\5\u0102\u0082\2\u0636",
    "\u0635\3\2\2\2\u0636\u0637\3\2\2\2\u0637\u0639\3\2\2\2\u0638\u063a\5",
    "\u0104\u0083\2\u0639\u0638\3\2\2\2\u0639\u063a\3\2\2\2\u063a\u0652\3",
    "\2\2\2\u063b\u063d\5\u00fe\u0080\2\u063c\u063e\5\u0100\u0081\2\u063d",
    "\u063c\3\2\2\2\u063d\u063e\3\2\2\2\u063e\u0640\3\2\2\2\u063f\u0641\5",
    "\u0102\u0082\2\u0640\u063f\3\2\2\2\u0640\u0641\3\2\2\2\u0641\u0643\3",
    "\2\2\2\u0642\u0644\5\u0104\u0083\2\u0643\u0642\3\2\2\2\u0643\u0644\3",
    "\2\2\2\u0644\u0652\3\2\2\2\u0645\u0647\5\u0100\u0081\2\u0646\u0648\5",
    "\u0102\u0082\2\u0647\u0646\3\2\2\2\u0647\u0648\3\2\2\2\u0648\u064a\3",
    "\2\2\2\u0649\u064b\5\u0104\u0083\2\u064a\u0649\3\2\2\2\u064a\u064b\3",
    "\2\2\2\u064b\u0652\3\2\2\2\u064c\u064e\5\u0102\u0082\2\u064d\u064f\5",
    "\u0104\u0083\2\u064e\u064d\3\2\2\2\u064e\u064f\3\2\2\2\u064f\u0652\3",
    "\2\2\2\u0650\u0652\5\u0104\u0083\2\u0651\u05f5\3\2\2\2\u0651\u060b\3",
    "\2\2\2\u0651\u061e\3\2\2\2\u0651\u062e\3\2\2\2\u0651\u063b\3\2\2\2\u0651",
    "\u0645\3\2\2\2\u0651\u064c\3\2\2\2\u0651\u0650\3\2\2\2\u0652\u00f5\3",
    "\2\2\2\u0653\u0654\7\4\2\2\u0654\u0655\7Y\2\2\u0655\u00f7\3\2\2\2\u0656",
    "\u0657\7\4\2\2\u0657\u0658\7Z\2\2\u0658\u00f9\3\2\2\2\u0659\u065a\7",
    "\4\2\2\u065a\u065b\7[\2\2\u065b\u00fb\3\2\2\2\u065c\u065d\7\4\2\2\u065d",
    "\u065e\7\\\2\2\u065e\u00fd\3\2\2\2\u065f\u0660\7\4\2\2\u0660\u0661\7",
    "]\2\2\u0661\u00ff\3\2\2\2\u0662\u0663\7\4\2\2\u0663\u0664\7^\2\2\u0664",
    "\u0101\3\2\2\2\u0665\u0666\7\4\2\2\u0666\u0667\7_\2\2\u0667\u0103\3",
    "\2\2\2\u0668\u0669\7\4\2\2\u0669\u066a\7`\2\2\u066a\u0105\3\2\2\2\u066b",
    "\u066d\t\t\2\2\u066c\u066b\3\2\2\2\u066c\u066d\3\2\2\2\u066d\u066e\3",
    "\2\2\2\u066e\u066f\7\7\2\2\u066f\u0107\3\2\2\2\u0670\u0672\t\t\2\2\u0671",
    "\u0670\3\2\2\2\u0671\u0672\3\2\2\2\u0672\u0673\3\2\2\2\u0673\u0674\7",
    "\5\2\2\u0674\u0109\3\2\2\2\u0675\u0677\t\t\2\2\u0676\u0675\3\2\2\2\u0676",
    "\u0677\3\2\2\2\u0677\u0678\3\2\2\2\u0678\u0679\7\6\2\2\u0679\u010b\3",
    "\2\2\2\u067a\u067c\t\t\2\2\u067b\u067a\3\2\2\2\u067b\u067c\3\2\2\2\u067c",
    "\u067d\3\2\2\2\u067d\u067e\7\4\2\2\u067e\u010d\3\2\2\2\u067f\u0680\t",
    "\n\2\2\u0680\u010f\3\2\2\2\u0681\u0682\7o\2\2\u0682\u0111\3\2\2\2\u00d1",
    "\u0119\u011b\u0125\u012f\u0133\u0139\u013d\u0141\u0145\u0149\u0150\u015f",
    "\u0166\u016d\u017c\u0183\u018a\u0199\u01a0\u01a4\u01ab\u01b9\u01bf\u01c2",
    "\u01c7\u01cb\u01d0\u01d4\u01ea\u01f5\u01fb\u0202\u020e\u0217\u0224\u022c",
    "\u0231\u0235\u023a\u0246\u024b\u0250\u0257\u0262\u0269\u026e\u0272\u0276",
    "\u027c\u0288\u028f\u0298\u029f\u02a5\u02a8\u02b1\u02b5\u02b8\u02bb\u02c1",
    "\u02c7\u02cb\u02d0\u02d4\u02d7\u02db\u02df\u02e3\u02e5\u02f4\u02fb\u0304",
    "\u030b\u030f\u0318\u0320\u032a\u0332\u0334\u033d\u0347\u034f\u0351\u0358",
    "\u0362\u038a\u038d\u039d\u03a3\u03a8\u03ac\u03b0\u03b4\u03b6\u03b9\u03c0",
    "\u03c7\u03cd\u03d6\u03e5\u03ed\u03ef\u03ff\u0407\u0409\u0412\u0419\u0420",
    "\u042a\u0433\u0436\u043a\u043c\u043f\u0454\u0457\u045a\u0463\u0466\u0469",
    "\u046c\u046f\u0472\u0475\u047e\u048b\u0490\u049c\u04a4\u04b0\u04b3\u04bc",
    "\u04bf\u04c6\u04c8\u04d2\u04d7\u04df\u04eb\u04ee\u04f2\u04f8\u04fe\u050c",
    "\u0516\u0527\u052d\u0533\u053b\u0541\u054d\u054f\u0555\u055a\u0563\u0567",
    "\u056c\u0573\u057a\u057e\u0585\u058d\u058f\u0595\u059b\u059d\u05af\u05b3",
    "\u05bf\u05c9\u05d3\u05e3\u05e6\u05ef\u05f7\u05fa\u05fd\u0600\u0603\u0606",
    "\u0609\u060d\u0610\u0613\u0616\u0619\u061c\u0620\u0623\u0626\u0629\u062c",
    "\u0630\u0633\u0636\u0639\u063d\u0640\u0643\u0647\u064a\u064e\u0651\u066c",
    "\u0671\u0676\u067b"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ 'null', "'!'", 'null', 'null', 'null', 'null', "':'", 
                     "';'", "'.'", "'...'", "'('", "')'", "'['", "']'", 
                     "','", "'='", "'*'", "'+'", "'?'", "'-'", "'/'", "'%'", 
                     "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", "'@'", 
                     "'->'", "'#'" ];

var symbolicNames = [ 'null', 'null', "INT_LITERAL", "LONG_LITERAL", "FLOAT_LITERAL", 
                      "DOUBLE_LITERAL", "COL", "SCOL", "DOT", "TRIPLE_DOT", 
                      "OPEN_PAR", "CLOSE_PAR", "OPEN_SQUARE_BRACKETS", "CLOSE_SQUARE_BRACKETS", 
                      "COMMA", "ASSIGN", "STAR", "PLUS", "QUESTION", "MINUS", 
                      "DIV", "MOD", "LT", "LT_EQ", "GT", "GT_EQ", "EQ", 
                      "NOT_EQ", "AT_SYMBOL", "FOLLOWED_BY", "HASH", "STREAM", 
                      "DEFINE", "FUNCTION", "TRIGGER", "TABLE", "APP", "FROM", 
                      "PARTITION", "WINDOW", "SELECT", "GROUP", "BY", "ORDER", 
                      "LIMIT", "OFFSET", "ASC", "DESC", "HAVING", "INSERT", 
                      "DELETE", "UPDATE", "SET", "RETURN", "EVENTS", "INTO", 
                      "OUTPUT", "EXPIRED", "CURRENT", "SNAPSHOT", "FOR", 
                      "RAW", "OF", "AS", "AT", "OR", "AND", "IN", "ON", 
                      "IS", "NOT", "WITHIN", "WITH", "BEGIN", "END", "NULL", 
                      "EVERY", "LAST", "ALL", "FIRST", "JOIN", "INNER", 
                      "OUTER", "RIGHT", "LEFT", "FULL", "UNIDIRECTIONAL", 
                      "YEARS", "MONTHS", "WEEKS", "DAYS", "HOURS", "MINUTES", 
                      "SECONDS", "MILLISECONDS", "FALSE", "TRUE", "STRING", 
                      "INT", "LONG", "FLOAT", "DOUBLE", "BOOL", "OBJECT", 
                      "AGGREGATION", "AGGREGATE", "PER", "ID_QUOTES", "ID", 
                      "STRING_LITERAL", "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", 
                      "SPACES", "UNEXPECTED_CHAR", "SCRIPT" ];

var ruleNames =  [ "parse", "error", "siddhi_app", "execution_element", 
                   "definition_stream_final", "definition_stream", "definition_table_final", 
                   "definition_table", "definition_window_final", "definition_window", 
                   "store_query_final", "store_query", "store_input", "definition_function_final", 
                   "definition_function", "function_name", "language_name", 
                   "function_body", "definition_trigger_final", "definition_trigger", 
                   "trigger_name", "definition_aggregation_final", "definition_aggregation", 
                   "aggregation_name", "aggregation_time", "aggregation_time_duration", 
                   "aggregation_time_range", "aggregation_time_interval", 
                   "annotation", "app_annotation", "annotation_element", 
                   "partition", "partition_final", "partition_with_stream", 
                   "condition_ranges", "condition_range", "query_final", 
                   "query", "query_input", "standard_stream", "join_stream", 
                   "join_source", "pattern_stream", "every_pattern_source_chain", 
                   "pattern_source_chain", "absent_pattern_source_chain", 
                   "left_absent_pattern_source", "right_absent_pattern_source", 
                   "pattern_source", "logical_stateful_source", "logical_absent_stateful_source", 
                   "every_absent_pattern_source", "basic_absent_pattern_source", 
                   "pattern_collection_stateful_source", "standard_stateful_source", 
                   "basic_source", "basic_source_stream_handlers", "basic_source_stream_handler", 
                   "sequence_stream", "every_sequence_source_chain", "every_absent_sequence_source_chain", 
                   "absent_sequence_source_chain", "left_absent_sequence_source", 
                   "right_absent_sequence_source", "sequence_source_chain", 
                   "sequence_source", "sequence_collection_stateful_source", 
                   "anonymous_stream", "filter", "stream_function", "window", 
                   "group_by_query_selection", "query_section", "group_by", 
                   "having", "order_by", "order_by_reference", "order", 
                   "limit", "offset", "query_output", "store_query_output", 
                   "set_clause", "set_assignment", "output_event_type", 
                   "output_rate", "output_rate_type", "for_time", "within_time", 
                   "within_time_range", "per", "output_attribute", "attribute", 
                   "expression", "math_operation", "function_operation", 
                   "attribute_list", "null_check", "stream_reference", "attribute_reference", 
                   "attribute_index", "function_id", "function_namespace", 
                   "stream_id", "source_id", "alias", "property_name", "attribute_name", 
                   "type", "property_value", "property_separator", "source", 
                   "target", "event", "name", "collect", "attribute_type", 
                   "join", "constant_value", "id", "keyword", "time_value", 
                   "year_value", "month_value", "week_value", "day_value", 
                   "hour_value", "minute_value", "second_value", "millisecond_value", 
                   "signed_double_value", "signed_long_value", "signed_float_value", 
                   "signed_int_value", "bool_value", "string_value" ];

function SiddhiQLParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

SiddhiQLParser.prototype = Object.create(antlr4.Parser.prototype);
SiddhiQLParser.prototype.constructor = SiddhiQLParser;

Object.defineProperty(SiddhiQLParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

SiddhiQLParser.EOF = antlr4.Token.EOF;
SiddhiQLParser.T__0 = 1;
SiddhiQLParser.INT_LITERAL = 2;
SiddhiQLParser.LONG_LITERAL = 3;
SiddhiQLParser.FLOAT_LITERAL = 4;
SiddhiQLParser.DOUBLE_LITERAL = 5;
SiddhiQLParser.COL = 6;
SiddhiQLParser.SCOL = 7;
SiddhiQLParser.DOT = 8;
SiddhiQLParser.TRIPLE_DOT = 9;
SiddhiQLParser.OPEN_PAR = 10;
SiddhiQLParser.CLOSE_PAR = 11;
SiddhiQLParser.OPEN_SQUARE_BRACKETS = 12;
SiddhiQLParser.CLOSE_SQUARE_BRACKETS = 13;
SiddhiQLParser.COMMA = 14;
SiddhiQLParser.ASSIGN = 15;
SiddhiQLParser.STAR = 16;
SiddhiQLParser.PLUS = 17;
SiddhiQLParser.QUESTION = 18;
SiddhiQLParser.MINUS = 19;
SiddhiQLParser.DIV = 20;
SiddhiQLParser.MOD = 21;
SiddhiQLParser.LT = 22;
SiddhiQLParser.LT_EQ = 23;
SiddhiQLParser.GT = 24;
SiddhiQLParser.GT_EQ = 25;
SiddhiQLParser.EQ = 26;
SiddhiQLParser.NOT_EQ = 27;
SiddhiQLParser.AT_SYMBOL = 28;
SiddhiQLParser.FOLLOWED_BY = 29;
SiddhiQLParser.HASH = 30;
SiddhiQLParser.STREAM = 31;
SiddhiQLParser.DEFINE = 32;
SiddhiQLParser.FUNCTION = 33;
SiddhiQLParser.TRIGGER = 34;
SiddhiQLParser.TABLE = 35;
SiddhiQLParser.APP = 36;
SiddhiQLParser.FROM = 37;
SiddhiQLParser.PARTITION = 38;
SiddhiQLParser.WINDOW = 39;
SiddhiQLParser.SELECT = 40;
SiddhiQLParser.GROUP = 41;
SiddhiQLParser.BY = 42;
SiddhiQLParser.ORDER = 43;
SiddhiQLParser.LIMIT = 44;
SiddhiQLParser.OFFSET = 45;
SiddhiQLParser.ASC = 46;
SiddhiQLParser.DESC = 47;
SiddhiQLParser.HAVING = 48;
SiddhiQLParser.INSERT = 49;
SiddhiQLParser.DELETE = 50;
SiddhiQLParser.UPDATE = 51;
SiddhiQLParser.SET = 52;
SiddhiQLParser.RETURN = 53;
SiddhiQLParser.EVENTS = 54;
SiddhiQLParser.INTO = 55;
SiddhiQLParser.OUTPUT = 56;
SiddhiQLParser.EXPIRED = 57;
SiddhiQLParser.CURRENT = 58;
SiddhiQLParser.SNAPSHOT = 59;
SiddhiQLParser.FOR = 60;
SiddhiQLParser.RAW = 61;
SiddhiQLParser.OF = 62;
SiddhiQLParser.AS = 63;
SiddhiQLParser.AT = 64;
SiddhiQLParser.OR = 65;
SiddhiQLParser.AND = 66;
SiddhiQLParser.IN = 67;
SiddhiQLParser.ON = 68;
SiddhiQLParser.IS = 69;
SiddhiQLParser.NOT = 70;
SiddhiQLParser.WITHIN = 71;
SiddhiQLParser.WITH = 72;
SiddhiQLParser.BEGIN = 73;
SiddhiQLParser.END = 74;
SiddhiQLParser.NULL = 75;
SiddhiQLParser.EVERY = 76;
SiddhiQLParser.LAST = 77;
SiddhiQLParser.ALL = 78;
SiddhiQLParser.FIRST = 79;
SiddhiQLParser.JOIN = 80;
SiddhiQLParser.INNER = 81;
SiddhiQLParser.OUTER = 82;
SiddhiQLParser.RIGHT = 83;
SiddhiQLParser.LEFT = 84;
SiddhiQLParser.FULL = 85;
SiddhiQLParser.UNIDIRECTIONAL = 86;
SiddhiQLParser.YEARS = 87;
SiddhiQLParser.MONTHS = 88;
SiddhiQLParser.WEEKS = 89;
SiddhiQLParser.DAYS = 90;
SiddhiQLParser.HOURS = 91;
SiddhiQLParser.MINUTES = 92;
SiddhiQLParser.SECONDS = 93;
SiddhiQLParser.MILLISECONDS = 94;
SiddhiQLParser.FALSE = 95;
SiddhiQLParser.TRUE = 96;
SiddhiQLParser.STRING = 97;
SiddhiQLParser.INT = 98;
SiddhiQLParser.LONG = 99;
SiddhiQLParser.FLOAT = 100;
SiddhiQLParser.DOUBLE = 101;
SiddhiQLParser.BOOL = 102;
SiddhiQLParser.OBJECT = 103;
SiddhiQLParser.AGGREGATION = 104;
SiddhiQLParser.AGGREGATE = 105;
SiddhiQLParser.PER = 106;
SiddhiQLParser.ID_QUOTES = 107;
SiddhiQLParser.ID = 108;
SiddhiQLParser.STRING_LITERAL = 109;
SiddhiQLParser.SINGLE_LINE_COMMENT = 110;
SiddhiQLParser.MULTILINE_COMMENT = 111;
SiddhiQLParser.SPACES = 112;
SiddhiQLParser.UNEXPECTED_CHAR = 113;
SiddhiQLParser.SCRIPT = 114;

SiddhiQLParser.RULE_parse = 0;
SiddhiQLParser.RULE_error = 1;
SiddhiQLParser.RULE_siddhi_app = 2;
SiddhiQLParser.RULE_execution_element = 3;
SiddhiQLParser.RULE_definition_stream_final = 4;
SiddhiQLParser.RULE_definition_stream = 5;
SiddhiQLParser.RULE_definition_table_final = 6;
SiddhiQLParser.RULE_definition_table = 7;
SiddhiQLParser.RULE_definition_window_final = 8;
SiddhiQLParser.RULE_definition_window = 9;
SiddhiQLParser.RULE_store_query_final = 10;
SiddhiQLParser.RULE_store_query = 11;
SiddhiQLParser.RULE_store_input = 12;
SiddhiQLParser.RULE_definition_function_final = 13;
SiddhiQLParser.RULE_definition_function = 14;
SiddhiQLParser.RULE_function_name = 15;
SiddhiQLParser.RULE_language_name = 16;
SiddhiQLParser.RULE_function_body = 17;
SiddhiQLParser.RULE_definition_trigger_final = 18;
SiddhiQLParser.RULE_definition_trigger = 19;
SiddhiQLParser.RULE_trigger_name = 20;
SiddhiQLParser.RULE_definition_aggregation_final = 21;
SiddhiQLParser.RULE_definition_aggregation = 22;
SiddhiQLParser.RULE_aggregation_name = 23;
SiddhiQLParser.RULE_aggregation_time = 24;
SiddhiQLParser.RULE_aggregation_time_duration = 25;
SiddhiQLParser.RULE_aggregation_time_range = 26;
SiddhiQLParser.RULE_aggregation_time_interval = 27;
SiddhiQLParser.RULE_annotation = 28;
SiddhiQLParser.RULE_app_annotation = 29;
SiddhiQLParser.RULE_annotation_element = 30;
SiddhiQLParser.RULE_partition = 31;
SiddhiQLParser.RULE_partition_final = 32;
SiddhiQLParser.RULE_partition_with_stream = 33;
SiddhiQLParser.RULE_condition_ranges = 34;
SiddhiQLParser.RULE_condition_range = 35;
SiddhiQLParser.RULE_query_final = 36;
SiddhiQLParser.RULE_query = 37;
SiddhiQLParser.RULE_query_input = 38;
SiddhiQLParser.RULE_standard_stream = 39;
SiddhiQLParser.RULE_join_stream = 40;
SiddhiQLParser.RULE_join_source = 41;
SiddhiQLParser.RULE_pattern_stream = 42;
SiddhiQLParser.RULE_every_pattern_source_chain = 43;
SiddhiQLParser.RULE_pattern_source_chain = 44;
SiddhiQLParser.RULE_absent_pattern_source_chain = 45;
SiddhiQLParser.RULE_left_absent_pattern_source = 46;
SiddhiQLParser.RULE_right_absent_pattern_source = 47;
SiddhiQLParser.RULE_pattern_source = 48;
SiddhiQLParser.RULE_logical_stateful_source = 49;
SiddhiQLParser.RULE_logical_absent_stateful_source = 50;
SiddhiQLParser.RULE_every_absent_pattern_source = 51;
SiddhiQLParser.RULE_basic_absent_pattern_source = 52;
SiddhiQLParser.RULE_pattern_collection_stateful_source = 53;
SiddhiQLParser.RULE_standard_stateful_source = 54;
SiddhiQLParser.RULE_basic_source = 55;
SiddhiQLParser.RULE_basic_source_stream_handlers = 56;
SiddhiQLParser.RULE_basic_source_stream_handler = 57;
SiddhiQLParser.RULE_sequence_stream = 58;
SiddhiQLParser.RULE_every_sequence_source_chain = 59;
SiddhiQLParser.RULE_every_absent_sequence_source_chain = 60;
SiddhiQLParser.RULE_absent_sequence_source_chain = 61;
SiddhiQLParser.RULE_left_absent_sequence_source = 62;
SiddhiQLParser.RULE_right_absent_sequence_source = 63;
SiddhiQLParser.RULE_sequence_source_chain = 64;
SiddhiQLParser.RULE_sequence_source = 65;
SiddhiQLParser.RULE_sequence_collection_stateful_source = 66;
SiddhiQLParser.RULE_anonymous_stream = 67;
SiddhiQLParser.RULE_filter = 68;
SiddhiQLParser.RULE_stream_function = 69;
SiddhiQLParser.RULE_window = 70;
SiddhiQLParser.RULE_group_by_query_selection = 71;
SiddhiQLParser.RULE_query_section = 72;
SiddhiQLParser.RULE_group_by = 73;
SiddhiQLParser.RULE_having = 74;
SiddhiQLParser.RULE_order_by = 75;
SiddhiQLParser.RULE_order_by_reference = 76;
SiddhiQLParser.RULE_order = 77;
SiddhiQLParser.RULE_limit = 78;
SiddhiQLParser.RULE_offset = 79;
SiddhiQLParser.RULE_query_output = 80;
SiddhiQLParser.RULE_store_query_output = 81;
SiddhiQLParser.RULE_set_clause = 82;
SiddhiQLParser.RULE_set_assignment = 83;
SiddhiQLParser.RULE_output_event_type = 84;
SiddhiQLParser.RULE_output_rate = 85;
SiddhiQLParser.RULE_output_rate_type = 86;
SiddhiQLParser.RULE_for_time = 87;
SiddhiQLParser.RULE_within_time = 88;
SiddhiQLParser.RULE_within_time_range = 89;
SiddhiQLParser.RULE_per = 90;
SiddhiQLParser.RULE_output_attribute = 91;
SiddhiQLParser.RULE_attribute = 92;
SiddhiQLParser.RULE_expression = 93;
SiddhiQLParser.RULE_math_operation = 94;
SiddhiQLParser.RULE_function_operation = 95;
SiddhiQLParser.RULE_attribute_list = 96;
SiddhiQLParser.RULE_null_check = 97;
SiddhiQLParser.RULE_stream_reference = 98;
SiddhiQLParser.RULE_attribute_reference = 99;
SiddhiQLParser.RULE_attribute_index = 100;
SiddhiQLParser.RULE_function_id = 101;
SiddhiQLParser.RULE_function_namespace = 102;
SiddhiQLParser.RULE_stream_id = 103;
SiddhiQLParser.RULE_source_id = 104;
SiddhiQLParser.RULE_alias = 105;
SiddhiQLParser.RULE_property_name = 106;
SiddhiQLParser.RULE_attribute_name = 107;
SiddhiQLParser.RULE_type = 108;
SiddhiQLParser.RULE_property_value = 109;
SiddhiQLParser.RULE_property_separator = 110;
SiddhiQLParser.RULE_source = 111;
SiddhiQLParser.RULE_target = 112;
SiddhiQLParser.RULE_event = 113;
SiddhiQLParser.RULE_name = 114;
SiddhiQLParser.RULE_collect = 115;
SiddhiQLParser.RULE_attribute_type = 116;
SiddhiQLParser.RULE_join = 117;
SiddhiQLParser.RULE_constant_value = 118;
SiddhiQLParser.RULE_id = 119;
SiddhiQLParser.RULE_keyword = 120;
SiddhiQLParser.RULE_time_value = 121;
SiddhiQLParser.RULE_year_value = 122;
SiddhiQLParser.RULE_month_value = 123;
SiddhiQLParser.RULE_week_value = 124;
SiddhiQLParser.RULE_day_value = 125;
SiddhiQLParser.RULE_hour_value = 126;
SiddhiQLParser.RULE_minute_value = 127;
SiddhiQLParser.RULE_second_value = 128;
SiddhiQLParser.RULE_millisecond_value = 129;
SiddhiQLParser.RULE_signed_double_value = 130;
SiddhiQLParser.RULE_signed_long_value = 131;
SiddhiQLParser.RULE_signed_float_value = 132;
SiddhiQLParser.RULE_signed_int_value = 133;
SiddhiQLParser.RULE_bool_value = 134;
SiddhiQLParser.RULE_string_value = 135;

function ParseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_parse;
    return this;
}

ParseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParseContext.prototype.constructor = ParseContext;

ParseContext.prototype.siddhi_app = function() {
    return this.getTypedRuleContext(Siddhi_appContext,0);
};

ParseContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

ParseContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterParse(this);
	}
};

ParseContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitParse(this);
	}
};




SiddhiQLParser.ParseContext = ParseContext;

SiddhiQLParser.prototype.parse = function() {

    var localctx = new ParseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, SiddhiQLParser.RULE_parse);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 272;
        this.siddhi_app();
        this.state = 273;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ErrorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_error;
    return this;
}

ErrorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ErrorContext.prototype.constructor = ErrorContext;

ErrorContext.prototype.UNEXPECTED_CHAR = function() {
    return this.getToken(SiddhiQLParser.UNEXPECTED_CHAR, 0);
};

ErrorContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterError(this);
	}
};

ErrorContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitError(this);
	}
};




SiddhiQLParser.ErrorContext = ErrorContext;

SiddhiQLParser.prototype.error = function() {

    var localctx = new ErrorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, SiddhiQLParser.RULE_error);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 275;
        this.match(SiddhiQLParser.UNEXPECTED_CHAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Siddhi_appContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_siddhi_app;
    return this;
}

Siddhi_appContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Siddhi_appContext.prototype.constructor = Siddhi_appContext;

Siddhi_appContext.prototype.definition_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_streamContext);
    } else {
        return this.getTypedRuleContext(Definition_streamContext,i);
    }
};

Siddhi_appContext.prototype.definition_table = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_tableContext);
    } else {
        return this.getTypedRuleContext(Definition_tableContext,i);
    }
};

Siddhi_appContext.prototype.definition_trigger = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_triggerContext);
    } else {
        return this.getTypedRuleContext(Definition_triggerContext,i);
    }
};

Siddhi_appContext.prototype.definition_function = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_functionContext);
    } else {
        return this.getTypedRuleContext(Definition_functionContext,i);
    }
};

Siddhi_appContext.prototype.definition_window = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_windowContext);
    } else {
        return this.getTypedRuleContext(Definition_windowContext,i);
    }
};

Siddhi_appContext.prototype.definition_aggregation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_aggregationContext);
    } else {
        return this.getTypedRuleContext(Definition_aggregationContext,i);
    }
};

Siddhi_appContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

Siddhi_appContext.prototype.app_annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(App_annotationContext);
    } else {
        return this.getTypedRuleContext(App_annotationContext,i);
    }
};

Siddhi_appContext.prototype.execution_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Execution_elementContext);
    } else {
        return this.getTypedRuleContext(Execution_elementContext,i);
    }
};

Siddhi_appContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSiddhi_app(this);
	}
};

Siddhi_appContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSiddhi_app(this);
	}
};




SiddhiQLParser.Siddhi_appContext = Siddhi_appContext;

SiddhiQLParser.prototype.siddhi_app = function() {

    var localctx = new Siddhi_appContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, SiddhiQLParser.RULE_siddhi_app);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 281;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,1,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 279;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                    this.state = 277;
                    this.app_annotation();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 278;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 283;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,1,this._ctx);
        }

        this.state = 291;
        var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);
        switch(la_) {
        case 1:
            this.state = 284;
            this.definition_stream();
            break;

        case 2:
            this.state = 285;
            this.definition_table();
            break;

        case 3:
            this.state = 286;
            this.definition_trigger();
            break;

        case 4:
            this.state = 287;
            this.definition_function();
            break;

        case 5:
            this.state = 288;
            this.definition_window();
            break;

        case 6:
            this.state = 289;
            this.definition_aggregation();
            break;

        case 7:
            this.state = 290;
            this.error();
            break;

        }
        this.state = 305;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,4,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 293;
                this.match(SiddhiQLParser.SCOL);
                this.state = 301;
                var la_ = this._interp.adaptivePredict(this._input,3,this._ctx);
                switch(la_) {
                case 1:
                    this.state = 294;
                    this.definition_stream();
                    break;

                case 2:
                    this.state = 295;
                    this.definition_table();
                    break;

                case 3:
                    this.state = 296;
                    this.definition_trigger();
                    break;

                case 4:
                    this.state = 297;
                    this.definition_function();
                    break;

                case 5:
                    this.state = 298;
                    this.definition_window();
                    break;

                case 6:
                    this.state = 299;
                    this.definition_aggregation();
                    break;

                case 7:
                    this.state = 300;
                    this.error();
                    break;

                } 
            }
            this.state = 307;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,4,this._ctx);
        }

        this.state = 315;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,6,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 308;
                this.match(SiddhiQLParser.SCOL);
                this.state = 311;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                case SiddhiQLParser.FROM:
                case SiddhiQLParser.PARTITION:
                    this.state = 309;
                    this.execution_element();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 310;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 317;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,6,this._ctx);
        }

        this.state = 319;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 318;
            this.match(SiddhiQLParser.SCOL);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_element;
    return this;
}

Execution_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_elementContext.prototype.constructor = Execution_elementContext;

Execution_elementContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Execution_elementContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Execution_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExecution_element(this);
	}
};

Execution_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExecution_element(this);
	}
};




SiddhiQLParser.Execution_elementContext = Execution_elementContext;

SiddhiQLParser.prototype.execution_element = function() {

    var localctx = new Execution_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, SiddhiQLParser.RULE_execution_element);
    try {
        this.state = 323;
        var la_ = this._interp.adaptivePredict(this._input,8,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 321;
            this.query();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 322;
            this.partition();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_stream_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream_final;
    return this;
}

Definition_stream_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_stream_finalContext.prototype.constructor = Definition_stream_finalContext;

Definition_stream_finalContext.prototype.definition_stream = function() {
    return this.getTypedRuleContext(Definition_streamContext,0);
};

Definition_stream_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_stream_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream_final(this);
	}
};

Definition_stream_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream_final(this);
	}
};




SiddhiQLParser.Definition_stream_finalContext = Definition_stream_finalContext;

SiddhiQLParser.prototype.definition_stream_final = function() {

    var localctx = new Definition_stream_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, SiddhiQLParser.RULE_definition_stream_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 325;
        this.definition_stream();
        this.state = 327;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 326;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 329;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream;
    return this;
}

Definition_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_streamContext.prototype.constructor = Definition_streamContext;

Definition_streamContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_streamContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

Definition_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_streamContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_streamContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_streamContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream(this);
	}
};

Definition_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream(this);
	}
};




SiddhiQLParser.Definition_streamContext = Definition_streamContext;

SiddhiQLParser.prototype.definition_stream = function() {

    var localctx = new Definition_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, SiddhiQLParser.RULE_definition_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 334;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 331;
            this.annotation();
            this.state = 336;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 337;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 338;
        this.match(SiddhiQLParser.STREAM);
        this.state = 339;
        this.source();
        this.state = 340;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 341;
        this.attribute_name();
        this.state = 342;
        this.attribute_type();
        this.state = 349;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 343;
            this.match(SiddhiQLParser.COMMA);
            this.state = 344;
            this.attribute_name();
            this.state = 345;
            this.attribute_type();
            this.state = 351;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 352;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_table_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table_final;
    return this;
}

Definition_table_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_table_finalContext.prototype.constructor = Definition_table_finalContext;

Definition_table_finalContext.prototype.definition_table = function() {
    return this.getTypedRuleContext(Definition_tableContext,0);
};

Definition_table_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_table_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table_final(this);
	}
};

Definition_table_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table_final(this);
	}
};




SiddhiQLParser.Definition_table_finalContext = Definition_table_finalContext;

SiddhiQLParser.prototype.definition_table_final = function() {

    var localctx = new Definition_table_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, SiddhiQLParser.RULE_definition_table_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 354;
        this.definition_table();
        this.state = 356;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 355;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 358;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_tableContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table;
    return this;
}

Definition_tableContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_tableContext.prototype.constructor = Definition_tableContext;

Definition_tableContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_tableContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

Definition_tableContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_tableContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_tableContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_tableContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_tableContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table(this);
	}
};

Definition_tableContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table(this);
	}
};




SiddhiQLParser.Definition_tableContext = Definition_tableContext;

SiddhiQLParser.prototype.definition_table = function() {

    var localctx = new Definition_tableContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, SiddhiQLParser.RULE_definition_table);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 363;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 360;
            this.annotation();
            this.state = 365;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 366;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 367;
        this.match(SiddhiQLParser.TABLE);
        this.state = 368;
        this.source();
        this.state = 369;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 370;
        this.attribute_name();
        this.state = 371;
        this.attribute_type();
        this.state = 378;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 372;
            this.match(SiddhiQLParser.COMMA);
            this.state = 373;
            this.attribute_name();
            this.state = 374;
            this.attribute_type();
            this.state = 380;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 381;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_window_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window_final;
    return this;
}

Definition_window_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_window_finalContext.prototype.constructor = Definition_window_finalContext;

Definition_window_finalContext.prototype.definition_window = function() {
    return this.getTypedRuleContext(Definition_windowContext,0);
};

Definition_window_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_window_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_window_final(this);
	}
};

Definition_window_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_window_final(this);
	}
};




SiddhiQLParser.Definition_window_finalContext = Definition_window_finalContext;

SiddhiQLParser.prototype.definition_window_final = function() {

    var localctx = new Definition_window_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, SiddhiQLParser.RULE_definition_window_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 383;
        this.definition_window();
        this.state = 385;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 384;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 387;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_windowContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window;
    return this;
}

Definition_windowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_windowContext.prototype.constructor = Definition_windowContext;

Definition_windowContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_windowContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

Definition_windowContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_windowContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_windowContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_windowContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Definition_windowContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_windowContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Definition_windowContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Definition_windowContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_window(this);
	}
};

Definition_windowContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_window(this);
	}
};




SiddhiQLParser.Definition_windowContext = Definition_windowContext;

SiddhiQLParser.prototype.definition_window = function() {

    var localctx = new Definition_windowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, SiddhiQLParser.RULE_definition_window);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 392;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 389;
            this.annotation();
            this.state = 394;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 395;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 396;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 397;
        this.source();
        this.state = 398;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 399;
        this.attribute_name();
        this.state = 400;
        this.attribute_type();
        this.state = 407;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 401;
            this.match(SiddhiQLParser.COMMA);
            this.state = 402;
            this.attribute_name();
            this.state = 403;
            this.attribute_type();
            this.state = 409;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 410;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 411;
        this.function_operation();
        this.state = 414;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OUTPUT) {
            this.state = 412;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 413;
            this.output_event_type();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Store_query_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_store_query_final;
    return this;
}

Store_query_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Store_query_finalContext.prototype.constructor = Store_query_finalContext;

Store_query_finalContext.prototype.store_query = function() {
    return this.getTypedRuleContext(Store_queryContext,0);
};

Store_query_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Store_query_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStore_query_final(this);
	}
};

Store_query_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStore_query_final(this);
	}
};




SiddhiQLParser.Store_query_finalContext = Store_query_finalContext;

SiddhiQLParser.prototype.store_query_final = function() {

    var localctx = new Store_query_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, SiddhiQLParser.RULE_store_query_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 416;
        this.store_query();
        this.state = 418;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 417;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 420;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Store_queryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_store_query;
    return this;
}

Store_queryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Store_queryContext.prototype.constructor = Store_queryContext;

Store_queryContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Store_queryContext.prototype.store_input = function() {
    return this.getTypedRuleContext(Store_inputContext,0);
};

Store_queryContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

Store_queryContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

Store_queryContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

Store_queryContext.prototype.target = function() {
    return this.getTypedRuleContext(TargetContext,0);
};

Store_queryContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

Store_queryContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Store_queryContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Store_queryContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Store_queryContext.prototype.set_clause = function() {
    return this.getTypedRuleContext(Set_clauseContext,0);
};

Store_queryContext.prototype.store_query_output = function() {
    return this.getTypedRuleContext(Store_query_outputContext,0);
};

Store_queryContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStore_query(this);
	}
};

Store_queryContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStore_query(this);
	}
};




SiddhiQLParser.Store_queryContext = Store_queryContext;

SiddhiQLParser.prototype.store_query = function() {

    var localctx = new Store_queryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, SiddhiQLParser.RULE_store_query);
    var _la = 0; // Token type
    try {
        this.state = 448;
        var la_ = this._interp.adaptivePredict(this._input,23,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 422;
            this.match(SiddhiQLParser.FROM);
            this.state = 423;
            this.store_input();
            this.state = 425;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SELECT) {
                this.state = 424;
                this.query_section();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 427;
            this.query_section();
            this.state = 428;
            this.match(SiddhiQLParser.INSERT);
            this.state = 429;
            this.match(SiddhiQLParser.INTO);
            this.state = 430;
            this.target();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 432;
            this.query_section();
            this.state = 433;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 434;
            this.match(SiddhiQLParser.OR);
            this.state = 435;
            this.match(SiddhiQLParser.INSERT);
            this.state = 436;
            this.match(SiddhiQLParser.INTO);
            this.state = 437;
            this.target();
            this.state = 439;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SET) {
                this.state = 438;
                this.set_clause();
            }

            this.state = 441;
            this.match(SiddhiQLParser.ON);
            this.state = 442;
            this.expression();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 445;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SELECT) {
                this.state = 444;
                this.query_section();
            }

            this.state = 447;
            this.store_query_output();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Store_inputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_store_input;
    return this;
}

Store_inputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Store_inputContext.prototype.constructor = Store_inputContext;

Store_inputContext.prototype.source_id = function() {
    return this.getTypedRuleContext(Source_idContext,0);
};

Store_inputContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Store_inputContext.prototype.alias = function() {
    return this.getTypedRuleContext(AliasContext,0);
};

Store_inputContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Store_inputContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Store_inputContext.prototype.within_time_range = function() {
    return this.getTypedRuleContext(Within_time_rangeContext,0);
};

Store_inputContext.prototype.per = function() {
    return this.getTypedRuleContext(PerContext,0);
};

Store_inputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStore_input(this);
	}
};

Store_inputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStore_input(this);
	}
};




SiddhiQLParser.Store_inputContext = Store_inputContext;

SiddhiQLParser.prototype.store_input = function() {

    var localctx = new Store_inputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, SiddhiQLParser.RULE_store_input);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 450;
        this.source_id();
        this.state = 453;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.AS) {
            this.state = 451;
            this.match(SiddhiQLParser.AS);
            this.state = 452;
            this.alias();
        }

        this.state = 457;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ON) {
            this.state = 455;
            this.match(SiddhiQLParser.ON);
            this.state = 456;
            this.expression();
        }

        this.state = 462;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.WITHIN) {
            this.state = 459;
            this.within_time_range();
            this.state = 460;
            this.per();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_function_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function_final;
    return this;
}

Definition_function_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_function_finalContext.prototype.constructor = Definition_function_finalContext;

Definition_function_finalContext.prototype.definition_function = function() {
    return this.getTypedRuleContext(Definition_functionContext,0);
};

Definition_function_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_function_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function_final(this);
	}
};

Definition_function_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function_final(this);
	}
};




SiddhiQLParser.Definition_function_finalContext = Definition_function_finalContext;

SiddhiQLParser.prototype.definition_function_final = function() {

    var localctx = new Definition_function_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, SiddhiQLParser.RULE_definition_function_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 464;
        this.definition_function();
        this.state = 466;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 465;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 468;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function;
    return this;
}

Definition_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_functionContext.prototype.constructor = Definition_functionContext;

Definition_functionContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_functionContext.prototype.FUNCTION = function() {
    return this.getToken(SiddhiQLParser.FUNCTION, 0);
};

Definition_functionContext.prototype.function_name = function() {
    return this.getTypedRuleContext(Function_nameContext,0);
};

Definition_functionContext.prototype.language_name = function() {
    return this.getTypedRuleContext(Language_nameContext,0);
};

Definition_functionContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Definition_functionContext.prototype.attribute_type = function() {
    return this.getTypedRuleContext(Attribute_typeContext,0);
};

Definition_functionContext.prototype.function_body = function() {
    return this.getTypedRuleContext(Function_bodyContext,0);
};

Definition_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function(this);
	}
};

Definition_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function(this);
	}
};




SiddhiQLParser.Definition_functionContext = Definition_functionContext;

SiddhiQLParser.prototype.definition_function = function() {

    var localctx = new Definition_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, SiddhiQLParser.RULE_definition_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 470;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 471;
        this.match(SiddhiQLParser.FUNCTION);
        this.state = 472;
        this.function_name();
        this.state = 473;
        this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
        this.state = 474;
        this.language_name();
        this.state = 475;
        this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
        this.state = 476;
        this.match(SiddhiQLParser.RETURN);
        this.state = 477;
        this.attribute_type();
        this.state = 478;
        this.function_body();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_name;
    return this;
}

Function_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_nameContext.prototype.constructor = Function_nameContext;

Function_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Function_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_name(this);
	}
};

Function_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_name(this);
	}
};




SiddhiQLParser.Function_nameContext = Function_nameContext;

SiddhiQLParser.prototype.function_name = function() {

    var localctx = new Function_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, SiddhiQLParser.RULE_function_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 480;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Language_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_language_name;
    return this;
}

Language_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Language_nameContext.prototype.constructor = Language_nameContext;

Language_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Language_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLanguage_name(this);
	}
};

Language_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLanguage_name(this);
	}
};




SiddhiQLParser.Language_nameContext = Language_nameContext;

SiddhiQLParser.prototype.language_name = function() {

    var localctx = new Language_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, SiddhiQLParser.RULE_language_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 482;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_bodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_body;
    return this;
}

Function_bodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_bodyContext.prototype.constructor = Function_bodyContext;

Function_bodyContext.prototype.SCRIPT = function() {
    return this.getToken(SiddhiQLParser.SCRIPT, 0);
};

Function_bodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_body(this);
	}
};

Function_bodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_body(this);
	}
};




SiddhiQLParser.Function_bodyContext = Function_bodyContext;

SiddhiQLParser.prototype.function_body = function() {

    var localctx = new Function_bodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, SiddhiQLParser.RULE_function_body);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 484;
        this.match(SiddhiQLParser.SCRIPT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_trigger_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger_final;
    return this;
}

Definition_trigger_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_trigger_finalContext.prototype.constructor = Definition_trigger_finalContext;

Definition_trigger_finalContext.prototype.definition_trigger = function() {
    return this.getTypedRuleContext(Definition_triggerContext,0);
};

Definition_trigger_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_trigger_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_trigger_final(this);
	}
};

Definition_trigger_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_trigger_final(this);
	}
};




SiddhiQLParser.Definition_trigger_finalContext = Definition_trigger_finalContext;

SiddhiQLParser.prototype.definition_trigger_final = function() {

    var localctx = new Definition_trigger_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, SiddhiQLParser.RULE_definition_trigger_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 486;
        this.definition_trigger();
        this.state = 488;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 487;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 490;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_triggerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger;
    return this;
}

Definition_triggerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_triggerContext.prototype.constructor = Definition_triggerContext;

Definition_triggerContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_triggerContext.prototype.TRIGGER = function() {
    return this.getToken(SiddhiQLParser.TRIGGER, 0);
};

Definition_triggerContext.prototype.trigger_name = function() {
    return this.getTypedRuleContext(Trigger_nameContext,0);
};

Definition_triggerContext.prototype.AT = function() {
    return this.getToken(SiddhiQLParser.AT, 0);
};

Definition_triggerContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Definition_triggerContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Definition_triggerContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Definition_triggerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_trigger(this);
	}
};

Definition_triggerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_trigger(this);
	}
};




SiddhiQLParser.Definition_triggerContext = Definition_triggerContext;

SiddhiQLParser.prototype.definition_trigger = function() {

    var localctx = new Definition_triggerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, SiddhiQLParser.RULE_definition_trigger);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 492;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 493;
        this.match(SiddhiQLParser.TRIGGER);
        this.state = 494;
        this.trigger_name();
        this.state = 495;
        this.match(SiddhiQLParser.AT);
        this.state = 499;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.EVERY:
            this.state = 496;
            this.match(SiddhiQLParser.EVERY);
            this.state = 497;
            this.time_value();
            break;
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 498;
            this.string_value();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Trigger_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_trigger_name;
    return this;
}

Trigger_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trigger_nameContext.prototype.constructor = Trigger_nameContext;

Trigger_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Trigger_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTrigger_name(this);
	}
};

Trigger_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTrigger_name(this);
	}
};




SiddhiQLParser.Trigger_nameContext = Trigger_nameContext;

SiddhiQLParser.prototype.trigger_name = function() {

    var localctx = new Trigger_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, SiddhiQLParser.RULE_trigger_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 501;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_aggregation_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_aggregation_final;
    return this;
}

Definition_aggregation_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_aggregation_finalContext.prototype.constructor = Definition_aggregation_finalContext;

Definition_aggregation_finalContext.prototype.definition_aggregation = function() {
    return this.getTypedRuleContext(Definition_aggregationContext,0);
};

Definition_aggregation_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_aggregation_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_aggregation_final(this);
	}
};

Definition_aggregation_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_aggregation_final(this);
	}
};




SiddhiQLParser.Definition_aggregation_finalContext = Definition_aggregation_finalContext;

SiddhiQLParser.prototype.definition_aggregation_final = function() {

    var localctx = new Definition_aggregation_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, SiddhiQLParser.RULE_definition_aggregation_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 503;
        this.definition_aggregation();
        this.state = 505;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 504;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 507;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_aggregationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_aggregation;
    return this;
}

Definition_aggregationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_aggregationContext.prototype.constructor = Definition_aggregationContext;

Definition_aggregationContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_aggregationContext.prototype.AGGREGATION = function() {
    return this.getToken(SiddhiQLParser.AGGREGATION, 0);
};

Definition_aggregationContext.prototype.aggregation_name = function() {
    return this.getTypedRuleContext(Aggregation_nameContext,0);
};

Definition_aggregationContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Definition_aggregationContext.prototype.standard_stream = function() {
    return this.getTypedRuleContext(Standard_streamContext,0);
};

Definition_aggregationContext.prototype.group_by_query_selection = function() {
    return this.getTypedRuleContext(Group_by_query_selectionContext,0);
};

Definition_aggregationContext.prototype.AGGREGATE = function() {
    return this.getToken(SiddhiQLParser.AGGREGATE, 0);
};

Definition_aggregationContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Definition_aggregationContext.prototype.aggregation_time = function() {
    return this.getTypedRuleContext(Aggregation_timeContext,0);
};

Definition_aggregationContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_aggregationContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Definition_aggregationContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Definition_aggregationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_aggregation(this);
	}
};

Definition_aggregationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_aggregation(this);
	}
};




SiddhiQLParser.Definition_aggregationContext = Definition_aggregationContext;

SiddhiQLParser.prototype.definition_aggregation = function() {

    var localctx = new Definition_aggregationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, SiddhiQLParser.RULE_definition_aggregation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 512;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 509;
            this.annotation();
            this.state = 514;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 515;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 516;
        this.match(SiddhiQLParser.AGGREGATION);
        this.state = 517;
        this.aggregation_name();
        this.state = 518;
        this.match(SiddhiQLParser.FROM);
        this.state = 519;
        this.standard_stream();
        this.state = 520;
        this.group_by_query_selection();
        this.state = 521;
        this.match(SiddhiQLParser.AGGREGATE);
        this.state = 524;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.BY) {
            this.state = 522;
            this.match(SiddhiQLParser.BY);
            this.state = 523;
            this.attribute_reference();
        }

        this.state = 526;
        this.match(SiddhiQLParser.EVERY);
        this.state = 527;
        this.aggregation_time();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_name;
    return this;
}

Aggregation_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_nameContext.prototype.constructor = Aggregation_nameContext;

Aggregation_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Aggregation_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_name(this);
	}
};

Aggregation_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_name(this);
	}
};




SiddhiQLParser.Aggregation_nameContext = Aggregation_nameContext;

SiddhiQLParser.prototype.aggregation_name = function() {

    var localctx = new Aggregation_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, SiddhiQLParser.RULE_aggregation_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 529;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time;
    return this;
}

Aggregation_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_timeContext.prototype.constructor = Aggregation_timeContext;

Aggregation_timeContext.prototype.aggregation_time_range = function() {
    return this.getTypedRuleContext(Aggregation_time_rangeContext,0);
};

Aggregation_timeContext.prototype.aggregation_time_interval = function() {
    return this.getTypedRuleContext(Aggregation_time_intervalContext,0);
};

Aggregation_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time(this);
	}
};

Aggregation_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time(this);
	}
};




SiddhiQLParser.Aggregation_timeContext = Aggregation_timeContext;

SiddhiQLParser.prototype.aggregation_time = function() {

    var localctx = new Aggregation_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, SiddhiQLParser.RULE_aggregation_time);
    try {
        this.state = 533;
        var la_ = this._interp.adaptivePredict(this._input,33,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 531;
            this.aggregation_time_range();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 532;
            this.aggregation_time_interval();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_time_durationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time_duration;
    return this;
}

Aggregation_time_durationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_time_durationContext.prototype.constructor = Aggregation_time_durationContext;

Aggregation_time_durationContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

Aggregation_time_durationContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

Aggregation_time_durationContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

Aggregation_time_durationContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

Aggregation_time_durationContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

Aggregation_time_durationContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

Aggregation_time_durationContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

Aggregation_time_durationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time_duration(this);
	}
};

Aggregation_time_durationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time_duration(this);
	}
};




SiddhiQLParser.Aggregation_time_durationContext = Aggregation_time_durationContext;

SiddhiQLParser.prototype.aggregation_time_duration = function() {

    var localctx = new Aggregation_time_durationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, SiddhiQLParser.RULE_aggregation_time_duration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 535;
        _la = this._input.LA(1);
        if(!(((((_la - 87)) & ~0x1f) == 0 && ((1 << (_la - 87)) & ((1 << (SiddhiQLParser.YEARS - 87)) | (1 << (SiddhiQLParser.MONTHS - 87)) | (1 << (SiddhiQLParser.WEEKS - 87)) | (1 << (SiddhiQLParser.DAYS - 87)) | (1 << (SiddhiQLParser.HOURS - 87)) | (1 << (SiddhiQLParser.MINUTES - 87)) | (1 << (SiddhiQLParser.SECONDS - 87)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_time_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time_range;
    return this;
}

Aggregation_time_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_time_rangeContext.prototype.constructor = Aggregation_time_rangeContext;

Aggregation_time_rangeContext.prototype.aggregation_time_duration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Aggregation_time_durationContext);
    } else {
        return this.getTypedRuleContext(Aggregation_time_durationContext,i);
    }
};

Aggregation_time_rangeContext.prototype.TRIPLE_DOT = function() {
    return this.getToken(SiddhiQLParser.TRIPLE_DOT, 0);
};

Aggregation_time_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time_range(this);
	}
};

Aggregation_time_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time_range(this);
	}
};




SiddhiQLParser.Aggregation_time_rangeContext = Aggregation_time_rangeContext;

SiddhiQLParser.prototype.aggregation_time_range = function() {

    var localctx = new Aggregation_time_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, SiddhiQLParser.RULE_aggregation_time_range);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 537;
        this.aggregation_time_duration();
        this.state = 538;
        this.match(SiddhiQLParser.TRIPLE_DOT);
        this.state = 539;
        this.aggregation_time_duration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_time_intervalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time_interval;
    return this;
}

Aggregation_time_intervalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_time_intervalContext.prototype.constructor = Aggregation_time_intervalContext;

Aggregation_time_intervalContext.prototype.aggregation_time_duration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Aggregation_time_durationContext);
    } else {
        return this.getTypedRuleContext(Aggregation_time_durationContext,i);
    }
};

Aggregation_time_intervalContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.COMMA);
    } else {
        return this.getToken(SiddhiQLParser.COMMA, i);
    }
};


Aggregation_time_intervalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time_interval(this);
	}
};

Aggregation_time_intervalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time_interval(this);
	}
};




SiddhiQLParser.Aggregation_time_intervalContext = Aggregation_time_intervalContext;

SiddhiQLParser.prototype.aggregation_time_interval = function() {

    var localctx = new Aggregation_time_intervalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, SiddhiQLParser.RULE_aggregation_time_interval);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 541;
        this.aggregation_time_duration();
        this.state = 546;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 542;
            this.match(SiddhiQLParser.COMMA);
            this.state = 543;
            this.aggregation_time_duration();
            this.state = 548;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation;
    return this;
}

AnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationContext.prototype.constructor = AnnotationContext;

AnnotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

AnnotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

AnnotationContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

AnnotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation(this);
	}
};

AnnotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation(this);
	}
};




SiddhiQLParser.AnnotationContext = AnnotationContext;

SiddhiQLParser.prototype.annotation = function() {

    var localctx = new AnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, SiddhiQLParser.RULE_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 549;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 550;
        this.name();
        this.state = 568;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 551;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 554;
            switch(this._input.LA(1)) {
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.APP:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.ORDER:
            case SiddhiQLParser.LIMIT:
            case SiddhiQLParser.ASC:
            case SiddhiQLParser.DESC:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
            case SiddhiQLParser.STRING_LITERAL:
                this.state = 552;
                this.annotation_element();
                break;
            case SiddhiQLParser.AT_SYMBOL:
                this.state = 553;
                this.annotation();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 563;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 556;
                this.match(SiddhiQLParser.COMMA);
                this.state = 559;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.STREAM:
                case SiddhiQLParser.DEFINE:
                case SiddhiQLParser.TABLE:
                case SiddhiQLParser.APP:
                case SiddhiQLParser.FROM:
                case SiddhiQLParser.PARTITION:
                case SiddhiQLParser.WINDOW:
                case SiddhiQLParser.SELECT:
                case SiddhiQLParser.GROUP:
                case SiddhiQLParser.BY:
                case SiddhiQLParser.ORDER:
                case SiddhiQLParser.LIMIT:
                case SiddhiQLParser.ASC:
                case SiddhiQLParser.DESC:
                case SiddhiQLParser.HAVING:
                case SiddhiQLParser.INSERT:
                case SiddhiQLParser.DELETE:
                case SiddhiQLParser.UPDATE:
                case SiddhiQLParser.RETURN:
                case SiddhiQLParser.EVENTS:
                case SiddhiQLParser.INTO:
                case SiddhiQLParser.OUTPUT:
                case SiddhiQLParser.EXPIRED:
                case SiddhiQLParser.CURRENT:
                case SiddhiQLParser.SNAPSHOT:
                case SiddhiQLParser.FOR:
                case SiddhiQLParser.RAW:
                case SiddhiQLParser.OF:
                case SiddhiQLParser.AS:
                case SiddhiQLParser.OR:
                case SiddhiQLParser.AND:
                case SiddhiQLParser.ON:
                case SiddhiQLParser.IS:
                case SiddhiQLParser.NOT:
                case SiddhiQLParser.WITHIN:
                case SiddhiQLParser.WITH:
                case SiddhiQLParser.BEGIN:
                case SiddhiQLParser.END:
                case SiddhiQLParser.NULL:
                case SiddhiQLParser.EVERY:
                case SiddhiQLParser.LAST:
                case SiddhiQLParser.ALL:
                case SiddhiQLParser.FIRST:
                case SiddhiQLParser.JOIN:
                case SiddhiQLParser.INNER:
                case SiddhiQLParser.OUTER:
                case SiddhiQLParser.RIGHT:
                case SiddhiQLParser.LEFT:
                case SiddhiQLParser.FULL:
                case SiddhiQLParser.UNIDIRECTIONAL:
                case SiddhiQLParser.YEARS:
                case SiddhiQLParser.MONTHS:
                case SiddhiQLParser.WEEKS:
                case SiddhiQLParser.DAYS:
                case SiddhiQLParser.HOURS:
                case SiddhiQLParser.MINUTES:
                case SiddhiQLParser.SECONDS:
                case SiddhiQLParser.MILLISECONDS:
                case SiddhiQLParser.FALSE:
                case SiddhiQLParser.TRUE:
                case SiddhiQLParser.STRING:
                case SiddhiQLParser.INT:
                case SiddhiQLParser.LONG:
                case SiddhiQLParser.FLOAT:
                case SiddhiQLParser.DOUBLE:
                case SiddhiQLParser.BOOL:
                case SiddhiQLParser.OBJECT:
                case SiddhiQLParser.ID_QUOTES:
                case SiddhiQLParser.ID:
                case SiddhiQLParser.STRING_LITERAL:
                    this.state = 557;
                    this.annotation_element();
                    break;
                case SiddhiQLParser.AT_SYMBOL:
                    this.state = 558;
                    this.annotation();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 565;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 566;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function App_annotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_app_annotation;
    return this;
}

App_annotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
App_annotationContext.prototype.constructor = App_annotationContext;

App_annotationContext.prototype.APP = function() {
    return this.getToken(SiddhiQLParser.APP, 0);
};

App_annotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

App_annotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

App_annotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterApp_annotation(this);
	}
};

App_annotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitApp_annotation(this);
	}
};




SiddhiQLParser.App_annotationContext = App_annotationContext;

SiddhiQLParser.prototype.app_annotation = function() {

    var localctx = new App_annotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, SiddhiQLParser.RULE_app_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 570;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 571;
        this.match(SiddhiQLParser.APP);
        this.state = 572;
        this.match(SiddhiQLParser.COL);
        this.state = 573;
        this.name();
        this.state = 585;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 574;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 575;
            this.annotation_element();
            this.state = 580;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 576;
                this.match(SiddhiQLParser.COMMA);
                this.state = 577;
                this.annotation_element();
                this.state = 582;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 583;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Annotation_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation_element;
    return this;
}

Annotation_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Annotation_elementContext.prototype.constructor = Annotation_elementContext;

Annotation_elementContext.prototype.property_value = function() {
    return this.getTypedRuleContext(Property_valueContext,0);
};

Annotation_elementContext.prototype.property_name = function() {
    return this.getTypedRuleContext(Property_nameContext,0);
};

Annotation_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation_element(this);
	}
};

Annotation_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation_element(this);
	}
};




SiddhiQLParser.Annotation_elementContext = Annotation_elementContext;

SiddhiQLParser.prototype.annotation_element = function() {

    var localctx = new Annotation_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, SiddhiQLParser.RULE_annotation_element);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 590;
        var la_ = this._interp.adaptivePredict(this._input,41,this._ctx);
        if(la_===1) {
            this.state = 587;
            this.property_name();
            this.state = 588;
            this.match(SiddhiQLParser.ASSIGN);

        }
        this.state = 592;
        this.property_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PartitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition;
    return this;
}

PartitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PartitionContext.prototype.constructor = PartitionContext;

PartitionContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

PartitionContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

PartitionContext.prototype.partition_with_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Partition_with_streamContext);
    } else {
        return this.getTypedRuleContext(Partition_with_streamContext,i);
    }
};

PartitionContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

PartitionContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

PartitionContext.prototype.query = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(QueryContext);
    } else {
        return this.getTypedRuleContext(QueryContext,i);
    }
};

PartitionContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

PartitionContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

PartitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition(this);
	}
};

PartitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition(this);
	}
};




SiddhiQLParser.PartitionContext = PartitionContext;

SiddhiQLParser.prototype.partition = function() {

    var localctx = new PartitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, SiddhiQLParser.RULE_partition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 597;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 594;
            this.annotation();
            this.state = 599;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 600;
        this.match(SiddhiQLParser.PARTITION);
        this.state = 601;
        this.match(SiddhiQLParser.WITH);
        this.state = 602;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 603;
        this.partition_with_stream();
        this.state = 608;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 604;
            this.match(SiddhiQLParser.COMMA);
            this.state = 605;
            this.partition_with_stream();
            this.state = 610;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 611;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 612;
        this.match(SiddhiQLParser.BEGIN);
        this.state = 615;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.AT_SYMBOL:
        case SiddhiQLParser.FROM:
            this.state = 613;
            this.query();
            break;
        case SiddhiQLParser.UNEXPECTED_CHAR:
            this.state = 614;
            this.error();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 624;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,46,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 617;
                this.match(SiddhiQLParser.SCOL);
                this.state = 620;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                case SiddhiQLParser.FROM:
                    this.state = 618;
                    this.query();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 619;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 626;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,46,this._ctx);
        }

        this.state = 628;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 627;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 630;
        this.match(SiddhiQLParser.END);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_final;
    return this;
}

Partition_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_finalContext.prototype.constructor = Partition_finalContext;

Partition_finalContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Partition_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Partition_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_final(this);
	}
};

Partition_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_final(this);
	}
};




SiddhiQLParser.Partition_finalContext = Partition_finalContext;

SiddhiQLParser.prototype.partition_final = function() {

    var localctx = new Partition_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, SiddhiQLParser.RULE_partition_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 632;
        this.partition();
        this.state = 634;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 633;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 636;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_with_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_with_stream;
    return this;
}

Partition_with_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_with_streamContext.prototype.constructor = Partition_with_streamContext;

Partition_with_streamContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Partition_with_streamContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

Partition_with_streamContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

Partition_with_streamContext.prototype.condition_ranges = function() {
    return this.getTypedRuleContext(Condition_rangesContext,0);
};

Partition_with_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_with_stream(this);
	}
};

Partition_with_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_with_stream(this);
	}
};




SiddhiQLParser.Partition_with_streamContext = Partition_with_streamContext;

SiddhiQLParser.prototype.partition_with_stream = function() {

    var localctx = new Partition_with_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, SiddhiQLParser.RULE_partition_with_stream);
    try {
        this.state = 646;
        var la_ = this._interp.adaptivePredict(this._input,49,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 638;
            this.attribute();
            this.state = 639;
            this.match(SiddhiQLParser.OF);
            this.state = 640;
            this.stream_id();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 642;
            this.condition_ranges();
            this.state = 643;
            this.match(SiddhiQLParser.OF);
            this.state = 644;
            this.stream_id();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_ranges;
    return this;
}

Condition_rangesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangesContext.prototype.constructor = Condition_rangesContext;

Condition_rangesContext.prototype.condition_range = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Condition_rangeContext);
    } else {
        return this.getTypedRuleContext(Condition_rangeContext,i);
    }
};

Condition_rangesContext.prototype.OR = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.OR);
    } else {
        return this.getToken(SiddhiQLParser.OR, i);
    }
};


Condition_rangesContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_ranges(this);
	}
};

Condition_rangesContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_ranges(this);
	}
};




SiddhiQLParser.Condition_rangesContext = Condition_rangesContext;

SiddhiQLParser.prototype.condition_ranges = function() {

    var localctx = new Condition_rangesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, SiddhiQLParser.RULE_condition_ranges);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 648;
        this.condition_range();
        this.state = 653;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.OR) {
            this.state = 649;
            this.match(SiddhiQLParser.OR);
            this.state = 650;
            this.condition_range();
            this.state = 655;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_range;
    return this;
}

Condition_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangeContext.prototype.constructor = Condition_rangeContext;

Condition_rangeContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Condition_rangeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Condition_rangeContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Condition_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_range(this);
	}
};

Condition_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_range(this);
	}
};




SiddhiQLParser.Condition_rangeContext = Condition_rangeContext;

SiddhiQLParser.prototype.condition_range = function() {

    var localctx = new Condition_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, SiddhiQLParser.RULE_condition_range);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 656;
        this.expression();
        this.state = 657;
        this.match(SiddhiQLParser.AS);
        this.state = 658;
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_final;
    return this;
}

Query_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_finalContext.prototype.constructor = Query_finalContext;

Query_finalContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Query_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Query_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_final(this);
	}
};

Query_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_final(this);
	}
};




SiddhiQLParser.Query_finalContext = Query_finalContext;

SiddhiQLParser.prototype.query_final = function() {

    var localctx = new Query_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, SiddhiQLParser.RULE_query_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 660;
        this.query();
        this.state = 662;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 661;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 664;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QueryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query;
    return this;
}

QueryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QueryContext.prototype.constructor = QueryContext;

QueryContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

QueryContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

QueryContext.prototype.query_output = function() {
    return this.getTypedRuleContext(Query_outputContext,0);
};

QueryContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

QueryContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

QueryContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

QueryContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery(this);
	}
};

QueryContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery(this);
	}
};




SiddhiQLParser.QueryContext = QueryContext;

SiddhiQLParser.prototype.query = function() {

    var localctx = new QueryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, SiddhiQLParser.RULE_query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 669;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 666;
            this.annotation();
            this.state = 671;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 672;
        this.match(SiddhiQLParser.FROM);
        this.state = 673;
        this.query_input();
        this.state = 675;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SELECT) {
            this.state = 674;
            this.query_section();
        }

        this.state = 678;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OUTPUT) {
            this.state = 677;
            this.output_rate();
        }

        this.state = 680;
        this.query_output();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_inputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_input;
    return this;
}

Query_inputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_inputContext.prototype.constructor = Query_inputContext;

Query_inputContext.prototype.standard_stream = function() {
    return this.getTypedRuleContext(Standard_streamContext,0);
};

Query_inputContext.prototype.join_stream = function() {
    return this.getTypedRuleContext(Join_streamContext,0);
};

Query_inputContext.prototype.pattern_stream = function() {
    return this.getTypedRuleContext(Pattern_streamContext,0);
};

Query_inputContext.prototype.sequence_stream = function() {
    return this.getTypedRuleContext(Sequence_streamContext,0);
};

Query_inputContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Query_inputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_input(this);
	}
};

Query_inputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_input(this);
	}
};




SiddhiQLParser.Query_inputContext = Query_inputContext;

SiddhiQLParser.prototype.query_input = function() {

    var localctx = new Query_inputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, SiddhiQLParser.RULE_query_input);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 687;
        var la_ = this._interp.adaptivePredict(this._input,55,this._ctx);
        switch(la_) {
        case 1:
            this.state = 682;
            this.standard_stream();
            break;

        case 2:
            this.state = 683;
            this.join_stream();
            break;

        case 3:
            this.state = 684;
            this.pattern_stream();
            break;

        case 4:
            this.state = 685;
            this.sequence_stream();
            break;

        case 5:
            this.state = 686;
            this.anonymous_stream();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stream;
    this.pre_window_handlers = null; // Basic_source_stream_handlersContext
    this.post_window_handlers = null; // Basic_source_stream_handlersContext
    return this;
}

Standard_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_streamContext.prototype.constructor = Standard_streamContext;

Standard_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Standard_streamContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Standard_streamContext.prototype.basic_source_stream_handlers = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlersContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlersContext,i);
    }
};

Standard_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stream(this);
	}
};

Standard_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stream(this);
	}
};




SiddhiQLParser.Standard_streamContext = Standard_streamContext;

SiddhiQLParser.prototype.standard_stream = function() {

    var localctx = new Standard_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, SiddhiQLParser.RULE_standard_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 689;
        this.source();
        this.state = 691;
        var la_ = this._interp.adaptivePredict(this._input,56,this._ctx);
        if(la_===1) {
            this.state = 690;
            localctx.pre_window_handlers = this.basic_source_stream_handlers();

        }
        this.state = 694;
        var la_ = this._interp.adaptivePredict(this._input,57,this._ctx);
        if(la_===1) {
            this.state = 693;
            this.window();

        }
        this.state = 697;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS || _la===SiddhiQLParser.HASH) {
            this.state = 696;
            localctx.post_window_handlers = this.basic_source_stream_handlers();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_stream;
    this.left_source = null; // Join_sourceContext
    this.right_source = null; // Join_sourceContext
    this.right_unidirectional = null; // Token
    this.left_unidirectional = null; // Token
    return this;
}

Join_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_streamContext.prototype.constructor = Join_streamContext;

Join_streamContext.prototype.join_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Join_sourceContext);
    } else {
        return this.getTypedRuleContext(Join_sourceContext,i);
    }
};

Join_streamContext.prototype.join = function() {
    return this.getTypedRuleContext(JoinContext,0);
};

Join_streamContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

Join_streamContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Join_streamContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Join_streamContext.prototype.within_time_range = function() {
    return this.getTypedRuleContext(Within_time_rangeContext,0);
};

Join_streamContext.prototype.per = function() {
    return this.getTypedRuleContext(PerContext,0);
};

Join_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_stream(this);
	}
};

Join_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_stream(this);
	}
};




SiddhiQLParser.Join_streamContext = Join_streamContext;

SiddhiQLParser.prototype.join_stream = function() {

    var localctx = new Join_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, SiddhiQLParser.RULE_join_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 699;
        localctx.left_source = this.join_source();
        this.state = 709;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
            this.state = 700;
            this.join();
            this.state = 701;
            localctx.right_source = this.join_source();
            this.state = 703;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.UNIDIRECTIONAL) {
                this.state = 702;
                localctx.right_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            }

            break;
        case SiddhiQLParser.UNIDIRECTIONAL:
            this.state = 705;
            localctx.left_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            this.state = 706;
            this.join();
            this.state = 707;
            localctx.right_source = this.join_source();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 713;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ON) {
            this.state = 711;
            this.match(SiddhiQLParser.ON);
            this.state = 712;
            this.expression();
        }

        this.state = 718;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.WITHIN) {
            this.state = 715;
            this.within_time_range();
            this.state = 716;
            this.per();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_source;
    return this;
}

Join_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_sourceContext.prototype.constructor = Join_sourceContext;

Join_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Join_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Join_sourceContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Join_sourceContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Join_sourceContext.prototype.alias = function() {
    return this.getTypedRuleContext(AliasContext,0);
};

Join_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_source(this);
	}
};

Join_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_source(this);
	}
};




SiddhiQLParser.Join_sourceContext = Join_sourceContext;

SiddhiQLParser.prototype.join_source = function() {

    var localctx = new Join_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, SiddhiQLParser.RULE_join_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 720;
        this.source();
        this.state = 722;
        var la_ = this._interp.adaptivePredict(this._input,63,this._ctx);
        if(la_===1) {
            this.state = 721;
            this.basic_source_stream_handlers();

        }
        this.state = 725;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 724;
            this.window();
        }

        this.state = 729;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.AS) {
            this.state = 727;
            this.match(SiddhiQLParser.AS);
            this.state = 728;
            this.alias();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_stream;
    return this;
}

Pattern_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_streamContext.prototype.constructor = Pattern_streamContext;

Pattern_streamContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Pattern_streamContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Pattern_streamContext.prototype.absent_pattern_source_chain = function() {
    return this.getTypedRuleContext(Absent_pattern_source_chainContext,0);
};

Pattern_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_stream(this);
	}
};

Pattern_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_stream(this);
	}
};




SiddhiQLParser.Pattern_streamContext = Pattern_streamContext;

SiddhiQLParser.prototype.pattern_stream = function() {

    var localctx = new Pattern_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, SiddhiQLParser.RULE_pattern_stream);
    var _la = 0; // Token type
    try {
        this.state = 739;
        var la_ = this._interp.adaptivePredict(this._input,68,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 731;
            this.every_pattern_source_chain(0);
            this.state = 733;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 732;
                this.within_time();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 735;
            this.absent_pattern_source_chain();
            this.state = 737;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 736;
                this.within_time();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_pattern_source_chain;
    return this;
}

Every_pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_pattern_source_chainContext.prototype.constructor = Every_pattern_source_chainContext;

Every_pattern_source_chainContext.prototype.every_pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Every_pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Every_pattern_source_chainContext,i);
    }
};

Every_pattern_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_pattern_source_chainContext.prototype.pattern_source_chain = function() {
    return this.getTypedRuleContext(Pattern_source_chainContext,0);
};

Every_pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Every_pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_pattern_source_chain(this);
	}
};

Every_pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_pattern_source_chain(this);
	}
};



SiddhiQLParser.prototype.every_pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Every_pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 86;
    this.enterRecursionRule(localctx, 86, SiddhiQLParser.RULE_every_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 754;
        var la_ = this._interp.adaptivePredict(this._input,69,this._ctx);
        switch(la_) {
        case 1:
            this.state = 742;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 743;
            this.every_pattern_source_chain(0);
            this.state = 744;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 2:
            this.state = 746;
            this.match(SiddhiQLParser.EVERY);
            this.state = 747;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 748;
            this.pattern_source_chain(0);
            this.state = 749;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            this.state = 751;
            this.pattern_source_chain(0);
            break;

        case 4:
            this.state = 752;
            this.match(SiddhiQLParser.EVERY);
            this.state = 753;
            this.pattern_source();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 761;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,70,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Every_pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_every_pattern_source_chain);
                this.state = 756;
                if (!( this.precpred(this._ctx, 3))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                }
                this.state = 757;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 758;
                this.every_pattern_source_chain(4); 
            }
            this.state = 763;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,70,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source_chain;
    return this;
}

Pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_source_chainContext.prototype.constructor = Pattern_source_chainContext;

Pattern_source_chainContext.prototype.pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Pattern_source_chainContext,i);
    }
};

Pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source_chain(this);
	}
};

Pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source_chain(this);
	}
};



SiddhiQLParser.prototype.pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 88;
    this.enterRecursionRule(localctx, 88, SiddhiQLParser.RULE_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 770;
        var la_ = this._interp.adaptivePredict(this._input,71,this._ctx);
        switch(la_) {
        case 1:
            this.state = 765;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 766;
            this.pattern_source_chain(0);
            this.state = 767;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 2:
            this.state = 769;
            this.pattern_source();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 777;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,72,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_pattern_source_chain);
                this.state = 772;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 773;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 774;
                this.pattern_source_chain(3); 
            }
            this.state = 779;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,72,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Absent_pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_absent_pattern_source_chain;
    return this;
}

Absent_pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Absent_pattern_source_chainContext.prototype.constructor = Absent_pattern_source_chainContext;

Absent_pattern_source_chainContext.prototype.absent_pattern_source_chain = function() {
    return this.getTypedRuleContext(Absent_pattern_source_chainContext,0);
};

Absent_pattern_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Absent_pattern_source_chainContext.prototype.every_absent_pattern_source = function() {
    return this.getTypedRuleContext(Every_absent_pattern_sourceContext,0);
};

Absent_pattern_source_chainContext.prototype.left_absent_pattern_source = function() {
    return this.getTypedRuleContext(Left_absent_pattern_sourceContext,0);
};

Absent_pattern_source_chainContext.prototype.right_absent_pattern_source = function() {
    return this.getTypedRuleContext(Right_absent_pattern_sourceContext,0);
};

Absent_pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAbsent_pattern_source_chain(this);
	}
};

Absent_pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAbsent_pattern_source_chain(this);
	}
};




SiddhiQLParser.Absent_pattern_source_chainContext = Absent_pattern_source_chainContext;

SiddhiQLParser.prototype.absent_pattern_source_chain = function() {

    var localctx = new Absent_pattern_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, SiddhiQLParser.RULE_absent_pattern_source_chain);
    var _la = 0; // Token type
    try {
        this.state = 790;
        var la_ = this._interp.adaptivePredict(this._input,74,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 781;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.EVERY) {
                this.state = 780;
                this.match(SiddhiQLParser.EVERY);
            }

            this.state = 783;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 784;
            this.absent_pattern_source_chain();
            this.state = 785;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 787;
            this.every_absent_pattern_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 788;
            this.left_absent_pattern_source(0);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 789;
            this.right_absent_pattern_source(0);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Left_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_left_absent_pattern_source;
    return this;
}

Left_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Left_absent_pattern_sourceContext.prototype.constructor = Left_absent_pattern_sourceContext;

Left_absent_pattern_sourceContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Left_absent_pattern_sourceContext.prototype.left_absent_pattern_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Left_absent_pattern_sourceContext);
    } else {
        return this.getTypedRuleContext(Left_absent_pattern_sourceContext,i);
    }
};

Left_absent_pattern_sourceContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Left_absent_pattern_sourceContext.prototype.every_absent_pattern_source = function() {
    return this.getTypedRuleContext(Every_absent_pattern_sourceContext,0);
};

Left_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLeft_absent_pattern_source(this);
	}
};

Left_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLeft_absent_pattern_source(this);
	}
};



SiddhiQLParser.prototype.left_absent_pattern_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Left_absent_pattern_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 92;
    this.enterRecursionRule(localctx, 92, SiddhiQLParser.RULE_left_absent_pattern_source, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 808;
        var la_ = this._interp.adaptivePredict(this._input,76,this._ctx);
        switch(la_) {
        case 1:
            this.state = 793;
            this.every_pattern_source_chain(0);
            this.state = 794;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 795;
            this.left_absent_pattern_source(1);
            break;

        case 2:
            this.state = 798;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.EVERY) {
                this.state = 797;
                this.match(SiddhiQLParser.EVERY);
            }

            this.state = 800;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 801;
            this.left_absent_pattern_source(0);
            this.state = 802;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            this.state = 804;
            this.every_absent_pattern_source();
            this.state = 805;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 806;
            this.every_pattern_source_chain(0);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 818;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,78,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 816;
                var la_ = this._interp.adaptivePredict(this._input,77,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Left_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_pattern_source);
                    this.state = 810;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 811;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 812;
                    this.left_absent_pattern_source(4);
                    break;

                case 2:
                    localctx = new Left_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_pattern_source);
                    this.state = 813;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 814;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 815;
                    this.every_absent_pattern_source();
                    break;

                } 
            }
            this.state = 820;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,78,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Right_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_right_absent_pattern_source;
    return this;
}

Right_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Right_absent_pattern_sourceContext.prototype.constructor = Right_absent_pattern_sourceContext;

Right_absent_pattern_sourceContext.prototype.every_absent_pattern_source = function() {
    return this.getTypedRuleContext(Every_absent_pattern_sourceContext,0);
};

Right_absent_pattern_sourceContext.prototype.right_absent_pattern_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Right_absent_pattern_sourceContext);
    } else {
        return this.getTypedRuleContext(Right_absent_pattern_sourceContext,i);
    }
};

Right_absent_pattern_sourceContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Right_absent_pattern_sourceContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Right_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterRight_absent_pattern_source(this);
	}
};

Right_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitRight_absent_pattern_source(this);
	}
};



SiddhiQLParser.prototype.right_absent_pattern_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Right_absent_pattern_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 94;
    this.enterRecursionRule(localctx, 94, SiddhiQLParser.RULE_right_absent_pattern_source, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 837;
        var la_ = this._interp.adaptivePredict(this._input,80,this._ctx);
        switch(la_) {
        case 1:
            this.state = 822;
            this.every_absent_pattern_source();
            this.state = 823;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 824;
            this.right_absent_pattern_source(2);
            break;

        case 2:
            this.state = 827;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.EVERY) {
                this.state = 826;
                this.match(SiddhiQLParser.EVERY);
            }

            this.state = 829;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 830;
            this.right_absent_pattern_source(0);
            this.state = 831;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            this.state = 833;
            this.every_pattern_source_chain(0);
            this.state = 834;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 835;
            this.every_absent_pattern_source();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 847;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,82,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 845;
                var la_ = this._interp.adaptivePredict(this._input,81,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Right_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_pattern_source);
                    this.state = 839;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 840;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 841;
                    this.right_absent_pattern_source(4);
                    break;

                case 2:
                    localctx = new Right_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_pattern_source);
                    this.state = 842;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 843;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 844;
                    this.every_pattern_source_chain(0);
                    break;

                } 
            }
            this.state = 849;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,82,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source;
    return this;
}

Pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_sourceContext.prototype.constructor = Pattern_sourceContext;

Pattern_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.pattern_collection_stateful_source = function() {
    return this.getTypedRuleContext(Pattern_collection_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.logical_absent_stateful_source = function() {
    return this.getTypedRuleContext(Logical_absent_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source(this);
	}
};

Pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source(this);
	}
};




SiddhiQLParser.Pattern_sourceContext = Pattern_sourceContext;

SiddhiQLParser.prototype.pattern_source = function() {

    var localctx = new Pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, SiddhiQLParser.RULE_pattern_source);
    try {
        this.state = 854;
        var la_ = this._interp.adaptivePredict(this._input,83,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 850;
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 851;
            this.pattern_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 852;
            this.standard_stateful_source();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 853;
            this.logical_absent_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logical_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_logical_stateful_source;
    return this;
}

Logical_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logical_stateful_sourceContext.prototype.constructor = Logical_stateful_sourceContext;

Logical_stateful_sourceContext.prototype.standard_stateful_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Standard_stateful_sourceContext);
    } else {
        return this.getTypedRuleContext(Standard_stateful_sourceContext,i);
    }
};

Logical_stateful_sourceContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

Logical_stateful_sourceContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Logical_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLogical_stateful_source(this);
	}
};

Logical_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLogical_stateful_source(this);
	}
};




SiddhiQLParser.Logical_stateful_sourceContext = Logical_stateful_sourceContext;

SiddhiQLParser.prototype.logical_stateful_source = function() {

    var localctx = new Logical_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, SiddhiQLParser.RULE_logical_stateful_source);
    try {
        this.state = 864;
        var la_ = this._interp.adaptivePredict(this._input,84,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 856;
            this.standard_stateful_source();
            this.state = 857;
            this.match(SiddhiQLParser.AND);
            this.state = 858;
            this.standard_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 860;
            this.standard_stateful_source();
            this.state = 861;
            this.match(SiddhiQLParser.OR);
            this.state = 862;
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logical_absent_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_logical_absent_stateful_source;
    return this;
}

Logical_absent_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logical_absent_stateful_sourceContext.prototype.constructor = Logical_absent_stateful_sourceContext;

Logical_absent_stateful_sourceContext.prototype.logical_absent_stateful_source = function() {
    return this.getTypedRuleContext(Logical_absent_stateful_sourceContext,0);
};

Logical_absent_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Logical_absent_stateful_sourceContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

Logical_absent_stateful_sourceContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Logical_absent_stateful_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Logical_absent_stateful_sourceContext.prototype.basic_absent_pattern_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_absent_pattern_sourceContext);
    } else {
        return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,i);
    }
};

Logical_absent_stateful_sourceContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Logical_absent_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLogical_absent_stateful_source(this);
	}
};

Logical_absent_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLogical_absent_stateful_source(this);
	}
};




SiddhiQLParser.Logical_absent_stateful_sourceContext = Logical_absent_stateful_sourceContext;

SiddhiQLParser.prototype.logical_absent_stateful_source = function() {

    var localctx = new Logical_absent_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, SiddhiQLParser.RULE_logical_absent_stateful_source);
    try {
        this.state = 904;
        var la_ = this._interp.adaptivePredict(this._input,85,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 866;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 867;
            this.logical_absent_stateful_source();
            this.state = 868;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 870;
            this.standard_stateful_source();
            this.state = 871;
            this.match(SiddhiQLParser.AND);
            this.state = 872;
            this.match(SiddhiQLParser.NOT);
            this.state = 873;
            this.basic_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 875;
            this.match(SiddhiQLParser.NOT);
            this.state = 876;
            this.basic_source();
            this.state = 877;
            this.match(SiddhiQLParser.AND);
            this.state = 878;
            this.standard_stateful_source();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 880;
            this.standard_stateful_source();
            this.state = 881;
            this.match(SiddhiQLParser.AND);
            this.state = 882;
            this.basic_absent_pattern_source();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 884;
            this.basic_absent_pattern_source();
            this.state = 885;
            this.match(SiddhiQLParser.AND);
            this.state = 886;
            this.standard_stateful_source();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 888;
            this.basic_absent_pattern_source();
            this.state = 889;
            this.match(SiddhiQLParser.AND);
            this.state = 890;
            this.basic_absent_pattern_source();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 892;
            this.standard_stateful_source();
            this.state = 893;
            this.match(SiddhiQLParser.OR);
            this.state = 894;
            this.basic_absent_pattern_source();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 896;
            this.basic_absent_pattern_source();
            this.state = 897;
            this.match(SiddhiQLParser.OR);
            this.state = 898;
            this.standard_stateful_source();
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 900;
            this.basic_absent_pattern_source();
            this.state = 901;
            this.match(SiddhiQLParser.OR);
            this.state = 902;
            this.basic_absent_pattern_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_absent_pattern_source;
    return this;
}

Every_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_absent_pattern_sourceContext.prototype.constructor = Every_absent_pattern_sourceContext;

Every_absent_pattern_sourceContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Every_absent_pattern_sourceContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_absent_pattern_source(this);
	}
};

Every_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_absent_pattern_source(this);
	}
};




SiddhiQLParser.Every_absent_pattern_sourceContext = Every_absent_pattern_sourceContext;

SiddhiQLParser.prototype.every_absent_pattern_source = function() {

    var localctx = new Every_absent_pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, SiddhiQLParser.RULE_every_absent_pattern_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 907;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.EVERY) {
            this.state = 906;
            this.match(SiddhiQLParser.EVERY);
        }

        this.state = 909;
        this.basic_absent_pattern_source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_absent_pattern_source;
    return this;
}

Basic_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_absent_pattern_sourceContext.prototype.constructor = Basic_absent_pattern_sourceContext;

Basic_absent_pattern_sourceContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Basic_absent_pattern_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Basic_absent_pattern_sourceContext.prototype.for_time = function() {
    return this.getTypedRuleContext(For_timeContext,0);
};

Basic_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_absent_pattern_source(this);
	}
};

Basic_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_absent_pattern_source(this);
	}
};




SiddhiQLParser.Basic_absent_pattern_sourceContext = Basic_absent_pattern_sourceContext;

SiddhiQLParser.prototype.basic_absent_pattern_source = function() {

    var localctx = new Basic_absent_pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, SiddhiQLParser.RULE_basic_absent_pattern_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 911;
        this.match(SiddhiQLParser.NOT);
        this.state = 912;
        this.basic_source();
        this.state = 913;
        this.for_time();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_collection_stateful_source;
    return this;
}

Pattern_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_collection_stateful_sourceContext.prototype.constructor = Pattern_collection_stateful_sourceContext;

Pattern_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_collection_stateful_source(this);
	}
};

Pattern_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_collection_stateful_source(this);
	}
};




SiddhiQLParser.Pattern_collection_stateful_sourceContext = Pattern_collection_stateful_sourceContext;

SiddhiQLParser.prototype.pattern_collection_stateful_source = function() {

    var localctx = new Pattern_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, SiddhiQLParser.RULE_pattern_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 915;
        this.standard_stateful_source();
        this.state = 916;
        this.match(SiddhiQLParser.LT);
        this.state = 917;
        this.collect();
        this.state = 918;
        this.match(SiddhiQLParser.GT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stateful_source;
    return this;
}

Standard_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_stateful_sourceContext.prototype.constructor = Standard_stateful_sourceContext;

Standard_stateful_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Standard_stateful_sourceContext.prototype.event = function() {
    return this.getTypedRuleContext(EventContext,0);
};

Standard_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stateful_source(this);
	}
};

Standard_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stateful_source(this);
	}
};




SiddhiQLParser.Standard_stateful_sourceContext = Standard_stateful_sourceContext;

SiddhiQLParser.prototype.standard_stateful_source = function() {

    var localctx = new Standard_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, SiddhiQLParser.RULE_standard_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 923;
        var la_ = this._interp.adaptivePredict(this._input,87,this._ctx);
        if(la_===1) {
            this.state = 920;
            this.event();
            this.state = 921;
            this.match(SiddhiQLParser.ASSIGN);

        }
        this.state = 925;
        this.basic_source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source;
    return this;
}

Basic_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_sourceContext.prototype.constructor = Basic_sourceContext;

Basic_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Basic_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Basic_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source(this);
	}
};

Basic_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source(this);
	}
};




SiddhiQLParser.Basic_sourceContext = Basic_sourceContext;

SiddhiQLParser.prototype.basic_source = function() {

    var localctx = new Basic_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, SiddhiQLParser.RULE_basic_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 927;
        this.source();
        this.state = 929;
        var la_ = this._interp.adaptivePredict(this._input,88,this._ctx);
        if(la_===1) {
            this.state = 928;
            this.basic_source_stream_handlers();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handlers;
    return this;
}

Basic_source_stream_handlersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlersContext.prototype.constructor = Basic_source_stream_handlersContext;

Basic_source_stream_handlersContext.prototype.basic_source_stream_handler = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlerContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlerContext,i);
    }
};

Basic_source_stream_handlersContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handlers(this);
	}
};

Basic_source_stream_handlersContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handlers(this);
	}
};




SiddhiQLParser.Basic_source_stream_handlersContext = Basic_source_stream_handlersContext;

SiddhiQLParser.prototype.basic_source_stream_handlers = function() {

    var localctx = new Basic_source_stream_handlersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, SiddhiQLParser.RULE_basic_source_stream_handlers);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 932; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 931;
        		this.basic_source_stream_handler();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 934; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,89, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handler;
    return this;
}

Basic_source_stream_handlerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlerContext.prototype.constructor = Basic_source_stream_handlerContext;

Basic_source_stream_handlerContext.prototype.filter = function() {
    return this.getTypedRuleContext(FilterContext,0);
};

Basic_source_stream_handlerContext.prototype.stream_function = function() {
    return this.getTypedRuleContext(Stream_functionContext,0);
};

Basic_source_stream_handlerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handler(this);
	}
};

Basic_source_stream_handlerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handler(this);
	}
};




SiddhiQLParser.Basic_source_stream_handlerContext = Basic_source_stream_handlerContext;

SiddhiQLParser.prototype.basic_source_stream_handler = function() {

    var localctx = new Basic_source_stream_handlerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, SiddhiQLParser.RULE_basic_source_stream_handler);
    try {
        this.state = 938;
        var la_ = this._interp.adaptivePredict(this._input,90,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 936;
            this.filter();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 937;
            this.stream_function();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_stream;
    return this;
}

Sequence_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_streamContext.prototype.constructor = Sequence_streamContext;

Sequence_streamContext.prototype.every_sequence_source_chain = function() {
    return this.getTypedRuleContext(Every_sequence_source_chainContext,0);
};

Sequence_streamContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Sequence_streamContext.prototype.every_absent_sequence_source_chain = function() {
    return this.getTypedRuleContext(Every_absent_sequence_source_chainContext,0);
};

Sequence_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_stream(this);
	}
};

Sequence_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_stream(this);
	}
};




SiddhiQLParser.Sequence_streamContext = Sequence_streamContext;

SiddhiQLParser.prototype.sequence_stream = function() {

    var localctx = new Sequence_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, SiddhiQLParser.RULE_sequence_stream);
    var _la = 0; // Token type
    try {
        this.state = 948;
        var la_ = this._interp.adaptivePredict(this._input,93,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 940;
            this.every_sequence_source_chain();
            this.state = 942;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 941;
                this.within_time();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 944;
            this.every_absent_sequence_source_chain();
            this.state = 946;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 945;
                this.within_time();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_sequence_source_chain;
    return this;
}

Every_sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_sequence_source_chainContext.prototype.constructor = Every_sequence_source_chainContext;

Every_sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Every_sequence_source_chainContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Every_sequence_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_sequence_source_chain(this);
	}
};

Every_sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_sequence_source_chain(this);
	}
};




SiddhiQLParser.Every_sequence_source_chainContext = Every_sequence_source_chainContext;

SiddhiQLParser.prototype.every_sequence_source_chain = function() {

    var localctx = new Every_sequence_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, SiddhiQLParser.RULE_every_sequence_source_chain);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 951;
        var la_ = this._interp.adaptivePredict(this._input,94,this._ctx);
        if(la_===1) {
            this.state = 950;
            this.match(SiddhiQLParser.EVERY);

        }
        this.state = 953;
        this.sequence_source();
        this.state = 954;
        this.match(SiddhiQLParser.COMMA);
        this.state = 955;
        this.sequence_source_chain(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_absent_sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_absent_sequence_source_chain;
    return this;
}

Every_absent_sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_absent_sequence_source_chainContext.prototype.constructor = Every_absent_sequence_source_chainContext;

Every_absent_sequence_source_chainContext.prototype.absent_sequence_source_chain = function() {
    return this.getTypedRuleContext(Absent_sequence_source_chainContext,0);
};

Every_absent_sequence_source_chainContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Every_absent_sequence_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_absent_sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Every_absent_sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_absent_sequence_source_chain(this);
	}
};

Every_absent_sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_absent_sequence_source_chain(this);
	}
};




SiddhiQLParser.Every_absent_sequence_source_chainContext = Every_absent_sequence_source_chainContext;

SiddhiQLParser.prototype.every_absent_sequence_source_chain = function() {

    var localctx = new Every_absent_sequence_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, SiddhiQLParser.RULE_every_absent_sequence_source_chain);
    try {
        this.state = 971;
        var la_ = this._interp.adaptivePredict(this._input,97,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 958;
            var la_ = this._interp.adaptivePredict(this._input,95,this._ctx);
            if(la_===1) {
                this.state = 957;
                this.match(SiddhiQLParser.EVERY);

            }
            this.state = 960;
            this.absent_sequence_source_chain();
            this.state = 961;
            this.match(SiddhiQLParser.COMMA);
            this.state = 962;
            this.sequence_source_chain(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 965;
            var la_ = this._interp.adaptivePredict(this._input,96,this._ctx);
            if(la_===1) {
                this.state = 964;
                this.match(SiddhiQLParser.EVERY);

            }
            this.state = 967;
            this.sequence_source();
            this.state = 968;
            this.match(SiddhiQLParser.COMMA);
            this.state = 969;
            this.absent_sequence_source_chain();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Absent_sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_absent_sequence_source_chain;
    return this;
}

Absent_sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Absent_sequence_source_chainContext.prototype.constructor = Absent_sequence_source_chainContext;

Absent_sequence_source_chainContext.prototype.absent_sequence_source_chain = function() {
    return this.getTypedRuleContext(Absent_sequence_source_chainContext,0);
};

Absent_sequence_source_chainContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Absent_sequence_source_chainContext.prototype.left_absent_sequence_source = function() {
    return this.getTypedRuleContext(Left_absent_sequence_sourceContext,0);
};

Absent_sequence_source_chainContext.prototype.right_absent_sequence_source = function() {
    return this.getTypedRuleContext(Right_absent_sequence_sourceContext,0);
};

Absent_sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAbsent_sequence_source_chain(this);
	}
};

Absent_sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAbsent_sequence_source_chain(this);
	}
};




SiddhiQLParser.Absent_sequence_source_chainContext = Absent_sequence_source_chainContext;

SiddhiQLParser.prototype.absent_sequence_source_chain = function() {

    var localctx = new Absent_sequence_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, SiddhiQLParser.RULE_absent_sequence_source_chain);
    try {
        this.state = 980;
        var la_ = this._interp.adaptivePredict(this._input,98,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 973;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 974;
            this.absent_sequence_source_chain();
            this.state = 975;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 977;
            this.basic_absent_pattern_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 978;
            this.left_absent_sequence_source(0);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 979;
            this.right_absent_sequence_source(0);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Left_absent_sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_left_absent_sequence_source;
    return this;
}

Left_absent_sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Left_absent_sequence_sourceContext.prototype.constructor = Left_absent_sequence_sourceContext;

Left_absent_sequence_sourceContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Left_absent_sequence_sourceContext.prototype.left_absent_sequence_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Left_absent_sequence_sourceContext);
    } else {
        return this.getTypedRuleContext(Left_absent_sequence_sourceContext,i);
    }
};

Left_absent_sequence_sourceContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Left_absent_sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLeft_absent_sequence_source(this);
	}
};

Left_absent_sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLeft_absent_sequence_source(this);
	}
};



SiddhiQLParser.prototype.left_absent_sequence_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Left_absent_sequence_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 124;
    this.enterRecursionRule(localctx, 124, SiddhiQLParser.RULE_left_absent_sequence_source, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 995;
        var la_ = this._interp.adaptivePredict(this._input,99,this._ctx);
        switch(la_) {
        case 1:
            this.state = 983;
            this.sequence_source_chain(0);
            this.state = 984;
            this.match(SiddhiQLParser.COMMA);
            this.state = 985;
            this.left_absent_sequence_source(1);
            break;

        case 2:
            this.state = 987;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 988;
            this.left_absent_sequence_source(0);
            this.state = 989;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            this.state = 991;
            this.basic_absent_pattern_source();
            this.state = 992;
            this.match(SiddhiQLParser.COMMA);
            this.state = 993;
            this.sequence_source_chain(0);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1005;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,101,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1003;
                var la_ = this._interp.adaptivePredict(this._input,100,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Left_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_sequence_source);
                    this.state = 997;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 998;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 999;
                    this.left_absent_sequence_source(4);
                    break;

                case 2:
                    localctx = new Left_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_sequence_source);
                    this.state = 1000;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 1001;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 1002;
                    this.basic_absent_pattern_source();
                    break;

                } 
            }
            this.state = 1007;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,101,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Right_absent_sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_right_absent_sequence_source;
    return this;
}

Right_absent_sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Right_absent_sequence_sourceContext.prototype.constructor = Right_absent_sequence_sourceContext;

Right_absent_sequence_sourceContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Right_absent_sequence_sourceContext.prototype.right_absent_sequence_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Right_absent_sequence_sourceContext);
    } else {
        return this.getTypedRuleContext(Right_absent_sequence_sourceContext,i);
    }
};

Right_absent_sequence_sourceContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Right_absent_sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterRight_absent_sequence_source(this);
	}
};

Right_absent_sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitRight_absent_sequence_source(this);
	}
};



SiddhiQLParser.prototype.right_absent_sequence_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Right_absent_sequence_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 126;
    this.enterRecursionRule(localctx, 126, SiddhiQLParser.RULE_right_absent_sequence_source, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1021;
        var la_ = this._interp.adaptivePredict(this._input,102,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1009;
            this.basic_absent_pattern_source();
            this.state = 1010;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1011;
            this.right_absent_sequence_source(2);
            break;

        case 2:
            this.state = 1013;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1014;
            this.right_absent_sequence_source(0);
            this.state = 1015;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            this.state = 1017;
            this.sequence_source_chain(0);
            this.state = 1018;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1019;
            this.basic_absent_pattern_source();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1031;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,104,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1029;
                var la_ = this._interp.adaptivePredict(this._input,103,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Right_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_sequence_source);
                    this.state = 1023;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 1024;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 1025;
                    this.right_absent_sequence_source(4);
                    break;

                case 2:
                    localctx = new Right_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_sequence_source);
                    this.state = 1026;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1027;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 1028;
                    this.sequence_source_chain(0);
                    break;

                } 
            }
            this.state = 1033;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,104,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source_chain;
    return this;
}

Sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_source_chainContext.prototype.constructor = Sequence_source_chainContext;

Sequence_source_chainContext.prototype.sequence_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Sequence_source_chainContext);
    } else {
        return this.getTypedRuleContext(Sequence_source_chainContext,i);
    }
};

Sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source_chain(this);
	}
};

Sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source_chain(this);
	}
};



SiddhiQLParser.prototype.sequence_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Sequence_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 128;
    this.enterRecursionRule(localctx, 128, SiddhiQLParser.RULE_sequence_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1040;
        var la_ = this._interp.adaptivePredict(this._input,105,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1035;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1036;
            this.sequence_source_chain(0);
            this.state = 1037;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 2:
            this.state = 1039;
            this.sequence_source();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1047;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,106,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Sequence_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_sequence_source_chain);
                this.state = 1042;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 1043;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1044;
                this.sequence_source_chain(3); 
            }
            this.state = 1049;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,106,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source;
    return this;
}

Sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_sourceContext.prototype.constructor = Sequence_sourceContext;

Sequence_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.sequence_collection_stateful_source = function() {
    return this.getTypedRuleContext(Sequence_collection_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.logical_absent_stateful_source = function() {
    return this.getTypedRuleContext(Logical_absent_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source(this);
	}
};

Sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source(this);
	}
};




SiddhiQLParser.Sequence_sourceContext = Sequence_sourceContext;

SiddhiQLParser.prototype.sequence_source = function() {

    var localctx = new Sequence_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, SiddhiQLParser.RULE_sequence_source);
    try {
        this.state = 1054;
        var la_ = this._interp.adaptivePredict(this._input,107,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1050;
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1051;
            this.sequence_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1052;
            this.standard_stateful_source();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1053;
            this.logical_absent_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_collection_stateful_source;
    this.zero_or_more = null; // Token
    this.zero_or_one = null; // Token
    this.one_or_more = null; // Token
    return this;
}

Sequence_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_collection_stateful_sourceContext.prototype.constructor = Sequence_collection_stateful_sourceContext;

Sequence_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_collection_stateful_source(this);
	}
};

Sequence_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_collection_stateful_source(this);
	}
};




SiddhiQLParser.Sequence_collection_stateful_sourceContext = Sequence_collection_stateful_sourceContext;

SiddhiQLParser.prototype.sequence_collection_stateful_source = function() {

    var localctx = new Sequence_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, SiddhiQLParser.RULE_sequence_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1056;
        this.standard_stateful_source();
        this.state = 1064;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LT:
            this.state = 1057;
            this.match(SiddhiQLParser.LT);
            this.state = 1058;
            this.collect();
            this.state = 1059;
            this.match(SiddhiQLParser.GT);
            break;
        case SiddhiQLParser.STAR:
            this.state = 1061;
            localctx.zero_or_more = this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.QUESTION:
            this.state = 1062;
            localctx.zero_or_one = this.match(SiddhiQLParser.QUESTION);
            break;
        case SiddhiQLParser.PLUS:
            this.state = 1063;
            localctx.one_or_more = this.match(SiddhiQLParser.PLUS);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Anonymous_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_anonymous_stream;
    return this;
}

Anonymous_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Anonymous_streamContext.prototype.constructor = Anonymous_streamContext;

Anonymous_streamContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Anonymous_streamContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Anonymous_streamContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

Anonymous_streamContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Anonymous_streamContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

Anonymous_streamContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

Anonymous_streamContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Anonymous_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnonymous_stream(this);
	}
};

Anonymous_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnonymous_stream(this);
	}
};




SiddhiQLParser.Anonymous_streamContext = Anonymous_streamContext;

SiddhiQLParser.prototype.anonymous_stream = function() {

    var localctx = new Anonymous_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, SiddhiQLParser.RULE_anonymous_stream);
    var _la = 0; // Token type
    try {
        this.state = 1082;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.enterOuterAlt(localctx, 1);
            this.state = 1066;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1067;
            this.anonymous_stream();
            this.state = 1068;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;
        case SiddhiQLParser.FROM:
            this.enterOuterAlt(localctx, 2);
            this.state = 1070;
            this.match(SiddhiQLParser.FROM);
            this.state = 1071;
            this.query_input();
            this.state = 1073;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SELECT) {
                this.state = 1072;
                this.query_section();
            }

            this.state = 1076;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OUTPUT) {
                this.state = 1075;
                this.output_rate();
            }

            this.state = 1078;
            this.match(SiddhiQLParser.RETURN);
            this.state = 1080;
            _la = this._input.LA(1);
            if(((((_la - 54)) & ~0x1f) == 0 && ((1 << (_la - 54)) & ((1 << (SiddhiQLParser.EVENTS - 54)) | (1 << (SiddhiQLParser.EXPIRED - 54)) | (1 << (SiddhiQLParser.CURRENT - 54)) | (1 << (SiddhiQLParser.ALL - 54)))) !== 0)) {
                this.state = 1079;
                this.output_event_type();
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FilterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_filter;
    return this;
}

FilterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FilterContext.prototype.constructor = FilterContext;

FilterContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

FilterContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFilter(this);
	}
};

FilterContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFilter(this);
	}
};




SiddhiQLParser.FilterContext = FilterContext;

SiddhiQLParser.prototype.filter = function() {

    var localctx = new FilterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, SiddhiQLParser.RULE_filter);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1085;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 1084;
            this.match(SiddhiQLParser.HASH);
        }

        this.state = 1087;
        this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
        this.state = 1088;
        this.expression();
        this.state = 1089;
        this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_function;
    return this;
}

Stream_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_functionContext.prototype.constructor = Stream_functionContext;

Stream_functionContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Stream_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_function(this);
	}
};

Stream_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_function(this);
	}
};




SiddhiQLParser.Stream_functionContext = Stream_functionContext;

SiddhiQLParser.prototype.stream_function = function() {

    var localctx = new Stream_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, SiddhiQLParser.RULE_stream_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1091;
        this.match(SiddhiQLParser.HASH);
        this.state = 1092;
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WindowContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_window;
    return this;
}

WindowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WindowContext.prototype.constructor = WindowContext;

WindowContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

WindowContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

WindowContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWindow(this);
	}
};

WindowContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWindow(this);
	}
};




SiddhiQLParser.WindowContext = WindowContext;

SiddhiQLParser.prototype.window = function() {

    var localctx = new WindowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, SiddhiQLParser.RULE_window);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1094;
        this.match(SiddhiQLParser.HASH);
        this.state = 1095;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 1096;
        this.match(SiddhiQLParser.DOT);
        this.state = 1097;
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Group_by_query_selectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_group_by_query_selection;
    return this;
}

Group_by_query_selectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_by_query_selectionContext.prototype.constructor = Group_by_query_selectionContext;

Group_by_query_selectionContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

Group_by_query_selectionContext.prototype.group_by = function() {
    return this.getTypedRuleContext(Group_byContext,0);
};

Group_by_query_selectionContext.prototype.output_attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Output_attributeContext);
    } else {
        return this.getTypedRuleContext(Output_attributeContext,i);
    }
};

Group_by_query_selectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGroup_by_query_selection(this);
	}
};

Group_by_query_selectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGroup_by_query_selection(this);
	}
};




SiddhiQLParser.Group_by_query_selectionContext = Group_by_query_selectionContext;

SiddhiQLParser.prototype.group_by_query_selection = function() {

    var localctx = new Group_by_query_selectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, SiddhiQLParser.RULE_group_by_query_selection);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1099;
        this.match(SiddhiQLParser.SELECT);
        this.state = 1109;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.STAR:
            this.state = 1100;
            this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.T__0:
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.APP:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 1101;
            this.output_attribute();
            this.state = 1106;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 1102;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1103;
                this.output_attribute();
                this.state = 1108;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1112;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.GROUP) {
            this.state = 1111;
            this.group_by();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_sectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_section;
    return this;
}

Query_sectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_sectionContext.prototype.constructor = Query_sectionContext;

Query_sectionContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

Query_sectionContext.prototype.group_by = function() {
    return this.getTypedRuleContext(Group_byContext,0);
};

Query_sectionContext.prototype.having = function() {
    return this.getTypedRuleContext(HavingContext,0);
};

Query_sectionContext.prototype.order_by = function() {
    return this.getTypedRuleContext(Order_byContext,0);
};

Query_sectionContext.prototype.limit = function() {
    return this.getTypedRuleContext(LimitContext,0);
};

Query_sectionContext.prototype.offset = function() {
    return this.getTypedRuleContext(OffsetContext,0);
};

Query_sectionContext.prototype.output_attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Output_attributeContext);
    } else {
        return this.getTypedRuleContext(Output_attributeContext,i);
    }
};

Query_sectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_section(this);
	}
};

Query_sectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_section(this);
	}
};




SiddhiQLParser.Query_sectionContext = Query_sectionContext;

SiddhiQLParser.prototype.query_section = function() {

    var localctx = new Query_sectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, SiddhiQLParser.RULE_query_section);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1114;
        this.match(SiddhiQLParser.SELECT);
        this.state = 1124;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.STAR:
            this.state = 1115;
            this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.T__0:
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.APP:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 1116;
            this.output_attribute();
            this.state = 1121;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 1117;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1118;
                this.output_attribute();
                this.state = 1123;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1127;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.GROUP) {
            this.state = 1126;
            this.group_by();
        }

        this.state = 1130;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HAVING) {
            this.state = 1129;
            this.having();
        }

        this.state = 1133;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ORDER) {
            this.state = 1132;
            this.order_by();
        }

        this.state = 1136;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.LIMIT) {
            this.state = 1135;
            this.limit();
        }

        this.state = 1139;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OFFSET) {
            this.state = 1138;
            this.offset();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Group_byContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_group_by;
    return this;
}

Group_byContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_byContext.prototype.constructor = Group_byContext;

Group_byContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

Group_byContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Group_byContext.prototype.attribute_reference = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_referenceContext);
    } else {
        return this.getTypedRuleContext(Attribute_referenceContext,i);
    }
};

Group_byContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGroup_by(this);
	}
};

Group_byContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGroup_by(this);
	}
};




SiddhiQLParser.Group_byContext = Group_byContext;

SiddhiQLParser.prototype.group_by = function() {

    var localctx = new Group_byContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, SiddhiQLParser.RULE_group_by);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1141;
        this.match(SiddhiQLParser.GROUP);
        this.state = 1142;
        this.match(SiddhiQLParser.BY);
        this.state = 1143;
        this.attribute_reference();
        this.state = 1148;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 1144;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1145;
            this.attribute_reference();
            this.state = 1150;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function HavingContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_having;
    return this;
}

HavingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
HavingContext.prototype.constructor = HavingContext;

HavingContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

HavingContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

HavingContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHaving(this);
	}
};

HavingContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHaving(this);
	}
};




SiddhiQLParser.HavingContext = HavingContext;

SiddhiQLParser.prototype.having = function() {

    var localctx = new HavingContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, SiddhiQLParser.RULE_having);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1151;
        this.match(SiddhiQLParser.HAVING);
        this.state = 1152;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Order_byContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_order_by;
    return this;
}

Order_byContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Order_byContext.prototype.constructor = Order_byContext;

Order_byContext.prototype.ORDER = function() {
    return this.getToken(SiddhiQLParser.ORDER, 0);
};

Order_byContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Order_byContext.prototype.order_by_reference = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Order_by_referenceContext);
    } else {
        return this.getTypedRuleContext(Order_by_referenceContext,i);
    }
};

Order_byContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOrder_by(this);
	}
};

Order_byContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOrder_by(this);
	}
};




SiddhiQLParser.Order_byContext = Order_byContext;

SiddhiQLParser.prototype.order_by = function() {

    var localctx = new Order_byContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, SiddhiQLParser.RULE_order_by);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1154;
        this.match(SiddhiQLParser.ORDER);
        this.state = 1155;
        this.match(SiddhiQLParser.BY);
        this.state = 1156;
        this.order_by_reference();
        this.state = 1161;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 1157;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1158;
            this.order_by_reference();
            this.state = 1163;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Order_by_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_order_by_reference;
    return this;
}

Order_by_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Order_by_referenceContext.prototype.constructor = Order_by_referenceContext;

Order_by_referenceContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Order_by_referenceContext.prototype.order = function() {
    return this.getTypedRuleContext(OrderContext,0);
};

Order_by_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOrder_by_reference(this);
	}
};

Order_by_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOrder_by_reference(this);
	}
};




SiddhiQLParser.Order_by_referenceContext = Order_by_referenceContext;

SiddhiQLParser.prototype.order_by_reference = function() {

    var localctx = new Order_by_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, SiddhiQLParser.RULE_order_by_reference);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1164;
        this.attribute_reference();
        this.state = 1166;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ASC || _la===SiddhiQLParser.DESC) {
            this.state = 1165;
            this.order();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OrderContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_order;
    return this;
}

OrderContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OrderContext.prototype.constructor = OrderContext;

OrderContext.prototype.ASC = function() {
    return this.getToken(SiddhiQLParser.ASC, 0);
};

OrderContext.prototype.DESC = function() {
    return this.getToken(SiddhiQLParser.DESC, 0);
};

OrderContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOrder(this);
	}
};

OrderContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOrder(this);
	}
};




SiddhiQLParser.OrderContext = OrderContext;

SiddhiQLParser.prototype.order = function() {

    var localctx = new OrderContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, SiddhiQLParser.RULE_order);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1168;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.ASC || _la===SiddhiQLParser.DESC)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LimitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_limit;
    return this;
}

LimitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LimitContext.prototype.constructor = LimitContext;

LimitContext.prototype.LIMIT = function() {
    return this.getToken(SiddhiQLParser.LIMIT, 0);
};

LimitContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

LimitContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLimit(this);
	}
};

LimitContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLimit(this);
	}
};




SiddhiQLParser.LimitContext = LimitContext;

SiddhiQLParser.prototype.limit = function() {

    var localctx = new LimitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, SiddhiQLParser.RULE_limit);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1170;
        this.match(SiddhiQLParser.LIMIT);
        this.state = 1171;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OffsetContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_offset;
    return this;
}

OffsetContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OffsetContext.prototype.constructor = OffsetContext;

OffsetContext.prototype.OFFSET = function() {
    return this.getToken(SiddhiQLParser.OFFSET, 0);
};

OffsetContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

OffsetContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOffset(this);
	}
};

OffsetContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOffset(this);
	}
};




SiddhiQLParser.OffsetContext = OffsetContext;

SiddhiQLParser.prototype.offset = function() {

    var localctx = new OffsetContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, SiddhiQLParser.RULE_offset);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1173;
        this.match(SiddhiQLParser.OFFSET);
        this.state = 1174;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_outputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_output;
    return this;
}

Query_outputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_outputContext.prototype.constructor = Query_outputContext;

Query_outputContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

Query_outputContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

Query_outputContext.prototype.target = function() {
    return this.getTypedRuleContext(TargetContext,0);
};

Query_outputContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Query_outputContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

Query_outputContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Query_outputContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Query_outputContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

Query_outputContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

Query_outputContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Query_outputContext.prototype.set_clause = function() {
    return this.getTypedRuleContext(Set_clauseContext,0);
};

Query_outputContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Query_outputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_output(this);
	}
};

Query_outputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_output(this);
	}
};




SiddhiQLParser.Query_outputContext = Query_outputContext;

SiddhiQLParser.prototype.query_output = function() {

    var localctx = new Query_outputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, SiddhiQLParser.RULE_query_output);
    var _la = 0; // Token type
    try {
        this.state = 1222;
        var la_ = this._interp.adaptivePredict(this._input,134,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1176;
            this.match(SiddhiQLParser.INSERT);
            this.state = 1178;
            _la = this._input.LA(1);
            if(((((_la - 54)) & ~0x1f) == 0 && ((1 << (_la - 54)) & ((1 << (SiddhiQLParser.EVENTS - 54)) | (1 << (SiddhiQLParser.EXPIRED - 54)) | (1 << (SiddhiQLParser.CURRENT - 54)) | (1 << (SiddhiQLParser.ALL - 54)))) !== 0)) {
                this.state = 1177;
                this.output_event_type();
            }

            this.state = 1180;
            this.match(SiddhiQLParser.INTO);
            this.state = 1181;
            this.target();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1182;
            this.match(SiddhiQLParser.DELETE);
            this.state = 1183;
            this.target();
            this.state = 1186;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 1184;
                this.match(SiddhiQLParser.FOR);
                this.state = 1185;
                this.output_event_type();
            }

            this.state = 1188;
            this.match(SiddhiQLParser.ON);
            this.state = 1189;
            this.expression();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1191;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 1192;
            this.match(SiddhiQLParser.OR);
            this.state = 1193;
            this.match(SiddhiQLParser.INSERT);
            this.state = 1194;
            this.match(SiddhiQLParser.INTO);
            this.state = 1195;
            this.target();
            this.state = 1198;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 1196;
                this.match(SiddhiQLParser.FOR);
                this.state = 1197;
                this.output_event_type();
            }

            this.state = 1201;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SET) {
                this.state = 1200;
                this.set_clause();
            }

            this.state = 1203;
            this.match(SiddhiQLParser.ON);
            this.state = 1204;
            this.expression();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1206;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 1207;
            this.target();
            this.state = 1210;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 1208;
                this.match(SiddhiQLParser.FOR);
                this.state = 1209;
                this.output_event_type();
            }

            this.state = 1213;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SET) {
                this.state = 1212;
                this.set_clause();
            }

            this.state = 1215;
            this.match(SiddhiQLParser.ON);
            this.state = 1216;
            this.expression();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1218;
            this.match(SiddhiQLParser.RETURN);
            this.state = 1220;
            _la = this._input.LA(1);
            if(((((_la - 54)) & ~0x1f) == 0 && ((1 << (_la - 54)) & ((1 << (SiddhiQLParser.EVENTS - 54)) | (1 << (SiddhiQLParser.EXPIRED - 54)) | (1 << (SiddhiQLParser.CURRENT - 54)) | (1 << (SiddhiQLParser.ALL - 54)))) !== 0)) {
                this.state = 1219;
                this.output_event_type();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Store_query_outputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_store_query_output;
    return this;
}

Store_query_outputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Store_query_outputContext.prototype.constructor = Store_query_outputContext;

Store_query_outputContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

Store_query_outputContext.prototype.target = function() {
    return this.getTypedRuleContext(TargetContext,0);
};

Store_query_outputContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Store_query_outputContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Store_query_outputContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

Store_query_outputContext.prototype.set_clause = function() {
    return this.getTypedRuleContext(Set_clauseContext,0);
};

Store_query_outputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStore_query_output(this);
	}
};

Store_query_outputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStore_query_output(this);
	}
};




SiddhiQLParser.Store_query_outputContext = Store_query_outputContext;

SiddhiQLParser.prototype.store_query_output = function() {

    var localctx = new Store_query_outputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, SiddhiQLParser.RULE_store_query_output);
    var _la = 0; // Token type
    try {
        this.state = 1237;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.DELETE:
            this.enterOuterAlt(localctx, 1);
            this.state = 1224;
            this.match(SiddhiQLParser.DELETE);
            this.state = 1225;
            this.target();
            this.state = 1226;
            this.match(SiddhiQLParser.ON);
            this.state = 1227;
            this.expression();
            break;
        case SiddhiQLParser.UPDATE:
            this.enterOuterAlt(localctx, 2);
            this.state = 1229;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 1230;
            this.target();
            this.state = 1232;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SET) {
                this.state = 1231;
                this.set_clause();
            }

            this.state = 1234;
            this.match(SiddhiQLParser.ON);
            this.state = 1235;
            this.expression();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Set_clauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_set_clause;
    return this;
}

Set_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Set_clauseContext.prototype.constructor = Set_clauseContext;

Set_clauseContext.prototype.SET = function() {
    return this.getToken(SiddhiQLParser.SET, 0);
};

Set_clauseContext.prototype.set_assignment = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Set_assignmentContext);
    } else {
        return this.getTypedRuleContext(Set_assignmentContext,i);
    }
};

Set_clauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSet_clause(this);
	}
};

Set_clauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSet_clause(this);
	}
};




SiddhiQLParser.Set_clauseContext = Set_clauseContext;

SiddhiQLParser.prototype.set_clause = function() {

    var localctx = new Set_clauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, SiddhiQLParser.RULE_set_clause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1239;
        this.match(SiddhiQLParser.SET);
        this.state = 1240;
        this.set_assignment();
        this.state = 1245;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 1241;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1242;
            this.set_assignment();
            this.state = 1247;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Set_assignmentContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_set_assignment;
    return this;
}

Set_assignmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Set_assignmentContext.prototype.constructor = Set_assignmentContext;

Set_assignmentContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Set_assignmentContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Set_assignmentContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSet_assignment(this);
	}
};

Set_assignmentContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSet_assignment(this);
	}
};




SiddhiQLParser.Set_assignmentContext = Set_assignmentContext;

SiddhiQLParser.prototype.set_assignment = function() {

    var localctx = new Set_assignmentContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, SiddhiQLParser.RULE_set_assignment);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1248;
        this.attribute_reference();
        this.state = 1249;
        this.match(SiddhiQLParser.ASSIGN);
        this.state = 1250;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_event_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_event_type;
    return this;
}

Output_event_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_event_typeContext.prototype.constructor = Output_event_typeContext;

Output_event_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_event_typeContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_event_typeContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

Output_event_typeContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

Output_event_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_event_type(this);
	}
};

Output_event_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_event_type(this);
	}
};




SiddhiQLParser.Output_event_typeContext = Output_event_typeContext;

SiddhiQLParser.prototype.output_event_type = function() {

    var localctx = new Output_event_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, SiddhiQLParser.RULE_output_event_type);
    var _la = 0; // Token type
    try {
        this.state = 1260;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.ALL:
            this.enterOuterAlt(localctx, 1);
            this.state = 1252;
            this.match(SiddhiQLParser.ALL);
            this.state = 1253;
            this.match(SiddhiQLParser.EVENTS);
            break;
        case SiddhiQLParser.EXPIRED:
            this.enterOuterAlt(localctx, 2);
            this.state = 1254;
            this.match(SiddhiQLParser.EXPIRED);
            this.state = 1255;
            this.match(SiddhiQLParser.EVENTS);
            break;
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.CURRENT:
            this.enterOuterAlt(localctx, 3);
            this.state = 1257;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.CURRENT) {
                this.state = 1256;
                this.match(SiddhiQLParser.CURRENT);
            }

            this.state = 1259;
            this.match(SiddhiQLParser.EVENTS);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rateContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate;
    return this;
}

Output_rateContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rateContext.prototype.constructor = Output_rateContext;

Output_rateContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Output_rateContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Output_rateContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Output_rateContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Output_rateContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_rateContext.prototype.output_rate_type = function() {
    return this.getTypedRuleContext(Output_rate_typeContext,0);
};

Output_rateContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

Output_rateContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate(this);
	}
};

Output_rateContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate(this);
	}
};




SiddhiQLParser.Output_rateContext = Output_rateContext;

SiddhiQLParser.prototype.output_rate = function() {

    var localctx = new Output_rateContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, SiddhiQLParser.RULE_output_rate);
    var _la = 0; // Token type
    try {
        this.state = 1276;
        var la_ = this._interp.adaptivePredict(this._input,142,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1262;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 1264;
            _la = this._input.LA(1);
            if(((((_la - 77)) & ~0x1f) == 0 && ((1 << (_la - 77)) & ((1 << (SiddhiQLParser.LAST - 77)) | (1 << (SiddhiQLParser.ALL - 77)) | (1 << (SiddhiQLParser.FIRST - 77)))) !== 0)) {
                this.state = 1263;
                this.output_rate_type();
            }

            this.state = 1266;
            this.match(SiddhiQLParser.EVERY);
            this.state = 1270;
            var la_ = this._interp.adaptivePredict(this._input,141,this._ctx);
            switch(la_) {
            case 1:
                this.state = 1267;
                this.time_value();
                break;

            case 2:
                this.state = 1268;
                this.match(SiddhiQLParser.INT_LITERAL);
                this.state = 1269;
                this.match(SiddhiQLParser.EVENTS);
                break;

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1272;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 1273;
            this.match(SiddhiQLParser.SNAPSHOT);
            this.state = 1274;
            this.match(SiddhiQLParser.EVERY);
            this.state = 1275;
            this.time_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rate_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate_type;
    return this;
}

Output_rate_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rate_typeContext.prototype.constructor = Output_rate_typeContext;

Output_rate_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_rate_typeContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Output_rate_typeContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

Output_rate_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate_type(this);
	}
};

Output_rate_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate_type(this);
	}
};




SiddhiQLParser.Output_rate_typeContext = Output_rate_typeContext;

SiddhiQLParser.prototype.output_rate_type = function() {

    var localctx = new Output_rate_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, SiddhiQLParser.RULE_output_rate_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1278;
        _la = this._input.LA(1);
        if(!(((((_la - 77)) & ~0x1f) == 0 && ((1 << (_la - 77)) & ((1 << (SiddhiQLParser.LAST - 77)) | (1 << (SiddhiQLParser.ALL - 77)) | (1 << (SiddhiQLParser.FIRST - 77)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function For_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_for_time;
    return this;
}

For_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
For_timeContext.prototype.constructor = For_timeContext;

For_timeContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

For_timeContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

For_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFor_time(this);
	}
};

For_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFor_time(this);
	}
};




SiddhiQLParser.For_timeContext = For_timeContext;

SiddhiQLParser.prototype.for_time = function() {

    var localctx = new For_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, SiddhiQLParser.RULE_for_time);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1280;
        this.match(SiddhiQLParser.FOR);
        this.state = 1281;
        this.time_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Within_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_within_time;
    return this;
}

Within_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_timeContext.prototype.constructor = Within_timeContext;

Within_timeContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

Within_timeContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Within_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWithin_time(this);
	}
};

Within_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWithin_time(this);
	}
};




SiddhiQLParser.Within_timeContext = Within_timeContext;

SiddhiQLParser.prototype.within_time = function() {

    var localctx = new Within_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, SiddhiQLParser.RULE_within_time);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1283;
        this.match(SiddhiQLParser.WITHIN);
        this.state = 1284;
        this.time_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Within_time_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_within_time_range;
    this.start_pattern = null; // ExpressionContext
    this.end_pattern = null; // ExpressionContext
    return this;
}

Within_time_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_time_rangeContext.prototype.constructor = Within_time_rangeContext;

Within_time_rangeContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

Within_time_rangeContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Within_time_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWithin_time_range(this);
	}
};

Within_time_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWithin_time_range(this);
	}
};




SiddhiQLParser.Within_time_rangeContext = Within_time_rangeContext;

SiddhiQLParser.prototype.within_time_range = function() {

    var localctx = new Within_time_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, SiddhiQLParser.RULE_within_time_range);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1286;
        this.match(SiddhiQLParser.WITHIN);
        this.state = 1287;
        localctx.start_pattern = this.expression();
        this.state = 1290;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.COMMA) {
            this.state = 1288;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1289;
            localctx.end_pattern = this.expression();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_per;
    return this;
}

PerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PerContext.prototype.constructor = PerContext;

PerContext.prototype.PER = function() {
    return this.getToken(SiddhiQLParser.PER, 0);
};

PerContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

PerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPer(this);
	}
};

PerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPer(this);
	}
};




SiddhiQLParser.PerContext = PerContext;

SiddhiQLParser.prototype.per = function() {

    var localctx = new PerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, SiddhiQLParser.RULE_per);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1292;
        this.match(SiddhiQLParser.PER);
        this.state = 1293;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_attributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_attribute;
    return this;
}

Output_attributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_attributeContext.prototype.constructor = Output_attributeContext;

Output_attributeContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Output_attributeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Output_attributeContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Output_attributeContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Output_attributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_attribute(this);
	}
};

Output_attributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_attribute(this);
	}
};




SiddhiQLParser.Output_attributeContext = Output_attributeContext;

SiddhiQLParser.prototype.output_attribute = function() {

    var localctx = new Output_attributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, SiddhiQLParser.RULE_output_attribute);
    try {
        this.state = 1300;
        var la_ = this._interp.adaptivePredict(this._input,144,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1295;
            this.attribute();
            this.state = 1296;
            this.match(SiddhiQLParser.AS);
            this.state = 1297;
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1299;
            this.attribute_reference();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute;
    return this;
}

AttributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeContext.prototype.constructor = AttributeContext;

AttributeContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

AttributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute(this);
	}
};

AttributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute(this);
	}
};




SiddhiQLParser.AttributeContext = AttributeContext;

SiddhiQLParser.prototype.attribute = function() {

    var localctx = new AttributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, SiddhiQLParser.RULE_attribute);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1302;
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_expression;
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

ExpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExpression(this);
	}
};

ExpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExpression(this);
	}
};




SiddhiQLParser.ExpressionContext = ExpressionContext;

SiddhiQLParser.prototype.expression = function() {

    var localctx = new ExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, SiddhiQLParser.RULE_expression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1304;
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Math_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_math_operation;
    return this;
}

Math_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Math_operationContext.prototype.constructor = Math_operationContext;


 
Math_operationContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};

function Multiplication_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.multiply = null; // Token;
    this.devide = null; // Token;
    this.mod = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Multiplication_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Multiplication_math_operationContext.prototype.constructor = Multiplication_math_operationContext;

SiddhiQLParser.Multiplication_math_operationContext = Multiplication_math_operationContext;

Multiplication_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Multiplication_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMultiplication_math_operation(this);
	}
};

Multiplication_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMultiplication_math_operation(this);
	}
};


function Greaterthan_lessthan_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.gt_eq = null; // Token;
    this.lt_eq = null; // Token;
    this.gt = null; // Token;
    this.lt = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Greaterthan_lessthan_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Greaterthan_lessthan_math_operationContext.prototype.constructor = Greaterthan_lessthan_math_operationContext;

SiddhiQLParser.Greaterthan_lessthan_math_operationContext = Greaterthan_lessthan_math_operationContext;

Greaterthan_lessthan_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Greaterthan_lessthan_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGreaterthan_lessthan_math_operation(this);
	}
};

Greaterthan_lessthan_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGreaterthan_lessthan_math_operation(this);
	}
};


function Basic_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Basic_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Basic_math_operationContext.prototype.constructor = Basic_math_operationContext;

SiddhiQLParser.Basic_math_operationContext = Basic_math_operationContext;

Basic_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

Basic_math_operationContext.prototype.null_check = function() {
    return this.getTypedRuleContext(Null_checkContext,0);
};

Basic_math_operationContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Basic_math_operationContext.prototype.constant_value = function() {
    return this.getTypedRuleContext(Constant_valueContext,0);
};

Basic_math_operationContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};
Basic_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_math_operation(this);
	}
};

Basic_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_math_operation(this);
	}
};


function In_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

In_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
In_math_operationContext.prototype.constructor = In_math_operationContext;

SiddhiQLParser.In_math_operationContext = In_math_operationContext;

In_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

In_math_operationContext.prototype.IN = function() {
    return this.getToken(SiddhiQLParser.IN, 0);
};

In_math_operationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};
In_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterIn_math_operation(this);
	}
};

In_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitIn_math_operation(this);
	}
};


function Addition_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.add = null; // Token;
    this.substract = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Addition_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Addition_math_operationContext.prototype.constructor = Addition_math_operationContext;

SiddhiQLParser.Addition_math_operationContext = Addition_math_operationContext;

Addition_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Addition_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAddition_math_operation(this);
	}
};

Addition_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAddition_math_operation(this);
	}
};


function And_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

And_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
And_math_operationContext.prototype.constructor = And_math_operationContext;

SiddhiQLParser.And_math_operationContext = And_math_operationContext;

And_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

And_math_operationContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};
And_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnd_math_operation(this);
	}
};

And_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnd_math_operation(this);
	}
};


function Or_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Or_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Or_math_operationContext.prototype.constructor = Or_math_operationContext;

SiddhiQLParser.Or_math_operationContext = Or_math_operationContext;

Or_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

Or_math_operationContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};
Or_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOr_math_operation(this);
	}
};

Or_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOr_math_operation(this);
	}
};


function Equality_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.eq = null; // Token;
    this.not_eq = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Equality_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Equality_math_operationContext.prototype.constructor = Equality_math_operationContext;

SiddhiQLParser.Equality_math_operationContext = Equality_math_operationContext;

Equality_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Equality_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEquality_math_operation(this);
	}
};

Equality_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEquality_math_operation(this);
	}
};


function Not_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Not_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Not_math_operationContext.prototype.constructor = Not_math_operationContext;

SiddhiQLParser.Not_math_operationContext = Not_math_operationContext;

Not_math_operationContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Not_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};
Not_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNot_math_operation(this);
	}
};

Not_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNot_math_operation(this);
	}
};



SiddhiQLParser.prototype.math_operation = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Math_operationContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 188;
    this.enterRecursionRule(localctx, 188, SiddhiQLParser.RULE_math_operation, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1317;
        var la_ = this._interp.adaptivePredict(this._input,145,this._ctx);
        switch(la_) {
        case 1:
            localctx = new Not_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;

            this.state = 1307;
            this.match(SiddhiQLParser.NOT);
            this.state = 1308;
            this.math_operation(11);
            break;

        case 2:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1309;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1310;
            this.math_operation(0);
            this.state = 1311;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1313;
            this.null_check();
            break;

        case 4:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1314;
            this.function_operation();
            break;

        case 5:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1315;
            this.constant_value();
            break;

        case 6:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1316;
            this.attribute_reference();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1357;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,151,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1355;
                var la_ = this._interp.adaptivePredict(this._input,150,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Multiplication_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1319;
                    if (!( this.precpred(this._ctx, 10))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                    }
                    this.state = 1323;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.STAR:
                        this.state = 1320;
                        localctx.multiply = this.match(SiddhiQLParser.STAR);
                        break;
                    case SiddhiQLParser.DIV:
                        this.state = 1321;
                        localctx.devide = this.match(SiddhiQLParser.DIV);
                        break;
                    case SiddhiQLParser.MOD:
                        this.state = 1322;
                        localctx.mod = this.match(SiddhiQLParser.MOD);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1325;
                    this.math_operation(11);
                    break;

                case 2:
                    localctx = new Addition_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1326;
                    if (!( this.precpred(this._ctx, 9))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                    }
                    this.state = 1329;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.PLUS:
                        this.state = 1327;
                        localctx.add = this.match(SiddhiQLParser.PLUS);
                        break;
                    case SiddhiQLParser.MINUS:
                        this.state = 1328;
                        localctx.substract = this.match(SiddhiQLParser.MINUS);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1331;
                    this.math_operation(10);
                    break;

                case 3:
                    localctx = new Greaterthan_lessthan_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1332;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 1337;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.GT_EQ:
                        this.state = 1333;
                        localctx.gt_eq = this.match(SiddhiQLParser.GT_EQ);
                        break;
                    case SiddhiQLParser.LT_EQ:
                        this.state = 1334;
                        localctx.lt_eq = this.match(SiddhiQLParser.LT_EQ);
                        break;
                    case SiddhiQLParser.GT:
                        this.state = 1335;
                        localctx.gt = this.match(SiddhiQLParser.GT);
                        break;
                    case SiddhiQLParser.LT:
                        this.state = 1336;
                        localctx.lt = this.match(SiddhiQLParser.LT);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1339;
                    this.math_operation(9);
                    break;

                case 4:
                    localctx = new Equality_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1340;
                    if (!( this.precpred(this._ctx, 7))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                    }
                    this.state = 1343;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.EQ:
                        this.state = 1341;
                        localctx.eq = this.match(SiddhiQLParser.EQ);
                        break;
                    case SiddhiQLParser.NOT_EQ:
                        this.state = 1342;
                        localctx.not_eq = this.match(SiddhiQLParser.NOT_EQ);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1345;
                    this.math_operation(8);
                    break;

                case 5:
                    localctx = new And_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1346;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 1347;
                    this.match(SiddhiQLParser.AND);
                    this.state = 1348;
                    this.math_operation(6);
                    break;

                case 6:
                    localctx = new Or_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1349;
                    if (!( this.precpred(this._ctx, 4))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                    }
                    this.state = 1350;
                    this.match(SiddhiQLParser.OR);
                    this.state = 1351;
                    this.math_operation(5);
                    break;

                case 7:
                    localctx = new In_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1352;
                    if (!( this.precpred(this._ctx, 6))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                    }
                    this.state = 1353;
                    this.match(SiddhiQLParser.IN);
                    this.state = 1354;
                    this.name();
                    break;

                } 
            }
            this.state = 1359;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,151,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Function_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_operation;
    return this;
}

Function_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_operationContext.prototype.constructor = Function_operationContext;

Function_operationContext.prototype.function_id = function() {
    return this.getTypedRuleContext(Function_idContext,0);
};

Function_operationContext.prototype.function_namespace = function() {
    return this.getTypedRuleContext(Function_namespaceContext,0);
};

Function_operationContext.prototype.attribute_list = function() {
    return this.getTypedRuleContext(Attribute_listContext,0);
};

Function_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_operation(this);
	}
};

Function_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_operation(this);
	}
};




SiddhiQLParser.Function_operationContext = Function_operationContext;

SiddhiQLParser.prototype.function_operation = function() {

    var localctx = new Function_operationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, SiddhiQLParser.RULE_function_operation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1363;
        var la_ = this._interp.adaptivePredict(this._input,152,this._ctx);
        if(la_===1) {
            this.state = 1360;
            this.function_namespace();
            this.state = 1361;
            this.match(SiddhiQLParser.COL);

        }
        this.state = 1365;
        this.function_id();
        this.state = 1366;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 1368;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.T__0) | (1 << SiddhiQLParser.INT_LITERAL) | (1 << SiddhiQLParser.LONG_LITERAL) | (1 << SiddhiQLParser.FLOAT_LITERAL) | (1 << SiddhiQLParser.DOUBLE_LITERAL) | (1 << SiddhiQLParser.OPEN_PAR) | (1 << SiddhiQLParser.STAR) | (1 << SiddhiQLParser.PLUS) | (1 << SiddhiQLParser.MINUS) | (1 << SiddhiQLParser.HASH) | (1 << SiddhiQLParser.STREAM))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SiddhiQLParser.DEFINE - 32)) | (1 << (SiddhiQLParser.TABLE - 32)) | (1 << (SiddhiQLParser.APP - 32)) | (1 << (SiddhiQLParser.FROM - 32)) | (1 << (SiddhiQLParser.PARTITION - 32)) | (1 << (SiddhiQLParser.WINDOW - 32)) | (1 << (SiddhiQLParser.SELECT - 32)) | (1 << (SiddhiQLParser.GROUP - 32)) | (1 << (SiddhiQLParser.BY - 32)) | (1 << (SiddhiQLParser.ORDER - 32)) | (1 << (SiddhiQLParser.LIMIT - 32)) | (1 << (SiddhiQLParser.ASC - 32)) | (1 << (SiddhiQLParser.DESC - 32)) | (1 << (SiddhiQLParser.HAVING - 32)) | (1 << (SiddhiQLParser.INSERT - 32)) | (1 << (SiddhiQLParser.DELETE - 32)) | (1 << (SiddhiQLParser.UPDATE - 32)) | (1 << (SiddhiQLParser.RETURN - 32)) | (1 << (SiddhiQLParser.EVENTS - 32)) | (1 << (SiddhiQLParser.INTO - 32)) | (1 << (SiddhiQLParser.OUTPUT - 32)) | (1 << (SiddhiQLParser.EXPIRED - 32)) | (1 << (SiddhiQLParser.CURRENT - 32)) | (1 << (SiddhiQLParser.SNAPSHOT - 32)) | (1 << (SiddhiQLParser.FOR - 32)) | (1 << (SiddhiQLParser.RAW - 32)) | (1 << (SiddhiQLParser.OF - 32)) | (1 << (SiddhiQLParser.AS - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (SiddhiQLParser.OR - 65)) | (1 << (SiddhiQLParser.AND - 65)) | (1 << (SiddhiQLParser.ON - 65)) | (1 << (SiddhiQLParser.IS - 65)) | (1 << (SiddhiQLParser.NOT - 65)) | (1 << (SiddhiQLParser.WITHIN - 65)) | (1 << (SiddhiQLParser.WITH - 65)) | (1 << (SiddhiQLParser.BEGIN - 65)) | (1 << (SiddhiQLParser.END - 65)) | (1 << (SiddhiQLParser.NULL - 65)) | (1 << (SiddhiQLParser.EVERY - 65)) | (1 << (SiddhiQLParser.LAST - 65)) | (1 << (SiddhiQLParser.ALL - 65)) | (1 << (SiddhiQLParser.FIRST - 65)) | (1 << (SiddhiQLParser.JOIN - 65)) | (1 << (SiddhiQLParser.INNER - 65)) | (1 << (SiddhiQLParser.OUTER - 65)) | (1 << (SiddhiQLParser.RIGHT - 65)) | (1 << (SiddhiQLParser.LEFT - 65)) | (1 << (SiddhiQLParser.FULL - 65)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 65)) | (1 << (SiddhiQLParser.YEARS - 65)) | (1 << (SiddhiQLParser.MONTHS - 65)) | (1 << (SiddhiQLParser.WEEKS - 65)) | (1 << (SiddhiQLParser.DAYS - 65)) | (1 << (SiddhiQLParser.HOURS - 65)) | (1 << (SiddhiQLParser.MINUTES - 65)) | (1 << (SiddhiQLParser.SECONDS - 65)) | (1 << (SiddhiQLParser.MILLISECONDS - 65)) | (1 << (SiddhiQLParser.FALSE - 65)) | (1 << (SiddhiQLParser.TRUE - 65)))) !== 0) || ((((_la - 97)) & ~0x1f) == 0 && ((1 << (_la - 97)) & ((1 << (SiddhiQLParser.STRING - 97)) | (1 << (SiddhiQLParser.INT - 97)) | (1 << (SiddhiQLParser.LONG - 97)) | (1 << (SiddhiQLParser.FLOAT - 97)) | (1 << (SiddhiQLParser.DOUBLE - 97)) | (1 << (SiddhiQLParser.BOOL - 97)) | (1 << (SiddhiQLParser.OBJECT - 97)) | (1 << (SiddhiQLParser.ID_QUOTES - 97)) | (1 << (SiddhiQLParser.ID - 97)) | (1 << (SiddhiQLParser.STRING_LITERAL - 97)))) !== 0)) {
            this.state = 1367;
            this.attribute_list();
        }

        this.state = 1370;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_list;
    return this;
}

Attribute_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_listContext.prototype.constructor = Attribute_listContext;

Attribute_listContext.prototype.attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AttributeContext);
    } else {
        return this.getTypedRuleContext(AttributeContext,i);
    }
};

Attribute_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_list(this);
	}
};

Attribute_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_list(this);
	}
};




SiddhiQLParser.Attribute_listContext = Attribute_listContext;

SiddhiQLParser.prototype.attribute_list = function() {

    var localctx = new Attribute_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, SiddhiQLParser.RULE_attribute_list);
    var _la = 0; // Token type
    try {
        this.state = 1381;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.T__0:
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.APP:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 1372;
            this.attribute();
            this.state = 1377;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 1373;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1374;
                this.attribute();
                this.state = 1379;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        case SiddhiQLParser.STAR:
            this.enterOuterAlt(localctx, 2);
            this.state = 1380;
            this.match(SiddhiQLParser.STAR);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Null_checkContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_null_check;
    return this;
}

Null_checkContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Null_checkContext.prototype.constructor = Null_checkContext;

Null_checkContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

Null_checkContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

Null_checkContext.prototype.stream_reference = function() {
    return this.getTypedRuleContext(Stream_referenceContext,0);
};

Null_checkContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Null_checkContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Null_checkContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNull_check(this);
	}
};

Null_checkContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNull_check(this);
	}
};




SiddhiQLParser.Null_checkContext = Null_checkContext;

SiddhiQLParser.prototype.null_check = function() {

    var localctx = new Null_checkContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, SiddhiQLParser.RULE_null_check);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1386;
        var la_ = this._interp.adaptivePredict(this._input,156,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1383;
            this.stream_reference();
            break;

        case 2:
            this.state = 1384;
            this.attribute_reference();
            break;

        case 3:
            this.state = 1385;
            this.function_operation();
            break;

        }
        this.state = 1388;
        this.match(SiddhiQLParser.IS);
        this.state = 1389;
        this.match(SiddhiQLParser.NULL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_reference;
    this.hash = null; // Token
    this.not = null; // Token
    return this;
}

Stream_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_referenceContext.prototype.constructor = Stream_referenceContext;

Stream_referenceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_referenceContext.prototype.attribute_index = function() {
    return this.getTypedRuleContext(Attribute_indexContext,0);
};

Stream_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_reference(this);
	}
};

Stream_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_reference(this);
	}
};




SiddhiQLParser.Stream_referenceContext = Stream_referenceContext;

SiddhiQLParser.prototype.stream_reference = function() {

    var localctx = new Stream_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, SiddhiQLParser.RULE_stream_reference);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1393;
        switch (this._input.LA(1)) {
        case SiddhiQLParser.HASH:
        	this.state = 1391;
        	localctx.hash = this.match(SiddhiQLParser.HASH);
        	break;
        case SiddhiQLParser.T__0:
        	this.state = 1392;
        	localctx.not = this.match(SiddhiQLParser.T__0);
        	break;
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.APP:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        	break;
        default:
        	throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1395;
        this.name();
        this.state = 1400;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS) {
            this.state = 1396;
            this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
            this.state = 1397;
            this.attribute_index();
            this.state = 1398;
            this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_reference;
    this.hash1 = null; // Token
    this.not = null; // Token
    this.name1 = null; // NameContext
    this.attribute_index1 = null; // Attribute_indexContext
    this.hash2 = null; // Token
    this.name2 = null; // NameContext
    this.attribute_index2 = null; // Attribute_indexContext
    return this;
}

Attribute_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_referenceContext.prototype.constructor = Attribute_referenceContext;

Attribute_referenceContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Attribute_referenceContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Attribute_referenceContext.prototype.attribute_index = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_indexContext);
    } else {
        return this.getTypedRuleContext(Attribute_indexContext,i);
    }
};

Attribute_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_reference(this);
	}
};

Attribute_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_reference(this);
	}
};




SiddhiQLParser.Attribute_referenceContext = Attribute_referenceContext;

SiddhiQLParser.prototype.attribute_reference = function() {

    var localctx = new Attribute_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, SiddhiQLParser.RULE_attribute_reference);
    var _la = 0; // Token type
    try {
        this.state = 1427;
        var la_ = this._interp.adaptivePredict(this._input,163,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1404;
            switch (this._input.LA(1)) {
            case SiddhiQLParser.HASH:
            	this.state = 1402;
            	localctx.hash1 = this.match(SiddhiQLParser.HASH);
            	break;
            case SiddhiQLParser.T__0:
            	this.state = 1403;
            	localctx.not = this.match(SiddhiQLParser.T__0);
            	break;
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.APP:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.ORDER:
            case SiddhiQLParser.LIMIT:
            case SiddhiQLParser.ASC:
            case SiddhiQLParser.DESC:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
            	break;
            default:
            	throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 1406;
            localctx.name1 = this.name();
            this.state = 1411;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS) {
                this.state = 1407;
                this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
                this.state = 1408;
                localctx.attribute_index1 = this.attribute_index();
                this.state = 1409;
                this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
            }

            this.state = 1421;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.HASH) {
                this.state = 1413;
                localctx.hash2 = this.match(SiddhiQLParser.HASH);
                this.state = 1414;
                localctx.name2 = this.name();
                this.state = 1419;
                _la = this._input.LA(1);
                if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS) {
                    this.state = 1415;
                    this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
                    this.state = 1416;
                    localctx.attribute_index2 = this.attribute_index();
                    this.state = 1417;
                    this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
                }

            }

            this.state = 1423;
            this.match(SiddhiQLParser.DOT);
            this.state = 1424;
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1426;
            this.attribute_name();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_indexContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_index;
    return this;
}

Attribute_indexContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_indexContext.prototype.constructor = Attribute_indexContext;

Attribute_indexContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Attribute_indexContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Attribute_indexContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_index(this);
	}
};

Attribute_indexContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_index(this);
	}
};




SiddhiQLParser.Attribute_indexContext = Attribute_indexContext;

SiddhiQLParser.prototype.attribute_index = function() {

    var localctx = new Attribute_indexContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, SiddhiQLParser.RULE_attribute_index);
    var _la = 0; // Token type
    try {
        this.state = 1435;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.INT_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 1429;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;
        case SiddhiQLParser.LAST:
            this.enterOuterAlt(localctx, 2);
            this.state = 1430;
            this.match(SiddhiQLParser.LAST);
            this.state = 1433;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.MINUS) {
                this.state = 1431;
                this.match(SiddhiQLParser.MINUS);
                this.state = 1432;
                this.match(SiddhiQLParser.INT_LITERAL);
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_id;
    return this;
}

Function_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_idContext.prototype.constructor = Function_idContext;

Function_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_id(this);
	}
};

Function_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_id(this);
	}
};




SiddhiQLParser.Function_idContext = Function_idContext;

SiddhiQLParser.prototype.function_id = function() {

    var localctx = new Function_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, SiddhiQLParser.RULE_function_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1437;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_namespaceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_namespace;
    return this;
}

Function_namespaceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_namespaceContext.prototype.constructor = Function_namespaceContext;

Function_namespaceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_namespaceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_namespace(this);
	}
};

Function_namespaceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_namespace(this);
	}
};




SiddhiQLParser.Function_namespaceContext = Function_namespaceContext;

SiddhiQLParser.prototype.function_namespace = function() {

    var localctx = new Function_namespaceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 204, SiddhiQLParser.RULE_function_namespace);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1439;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_id;
    return this;
}

Stream_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_idContext.prototype.constructor = Stream_idContext;

Stream_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_id(this);
	}
};

Stream_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_id(this);
	}
};




SiddhiQLParser.Stream_idContext = Stream_idContext;

SiddhiQLParser.prototype.stream_id = function() {

    var localctx = new Stream_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 206, SiddhiQLParser.RULE_stream_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1441;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Source_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_source_id;
    return this;
}

Source_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Source_idContext.prototype.constructor = Source_idContext;

Source_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Source_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSource_id(this);
	}
};

Source_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSource_id(this);
	}
};




SiddhiQLParser.Source_idContext = Source_idContext;

SiddhiQLParser.prototype.source_id = function() {

    var localctx = new Source_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 208, SiddhiQLParser.RULE_source_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1443;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AliasContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_alias;
    return this;
}

AliasContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AliasContext.prototype.constructor = AliasContext;

AliasContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

AliasContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAlias(this);
	}
};

AliasContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAlias(this);
	}
};




SiddhiQLParser.AliasContext = AliasContext;

SiddhiQLParser.prototype.alias = function() {

    var localctx = new AliasContext(this, this._ctx, this.state);
    this.enterRule(localctx, 210, SiddhiQLParser.RULE_alias);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1445;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_name;
    return this;
}

Property_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_nameContext.prototype.constructor = Property_nameContext;

Property_nameContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Property_nameContext.prototype.property_separator = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Property_separatorContext);
    } else {
        return this.getTypedRuleContext(Property_separatorContext,i);
    }
};

Property_nameContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Property_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_name(this);
	}
};

Property_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_name(this);
	}
};




SiddhiQLParser.Property_nameContext = Property_nameContext;

SiddhiQLParser.prototype.property_name = function() {

    var localctx = new Property_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 212, SiddhiQLParser.RULE_property_name);
    var _la = 0; // Token type
    try {
        this.state = 1457;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.APP:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.enterOuterAlt(localctx, 1);
            this.state = 1447;
            this.name();
            this.state = 1453;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.COL) | (1 << SiddhiQLParser.DOT) | (1 << SiddhiQLParser.MINUS))) !== 0)) {
                this.state = 1448;
                this.property_separator();
                this.state = 1449;
                this.name();
                this.state = 1455;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        case SiddhiQLParser.STRING_LITERAL:
            this.enterOuterAlt(localctx, 2);
            this.state = 1456;
            this.string_value();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_name;
    return this;
}

Attribute_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_nameContext.prototype.constructor = Attribute_nameContext;

Attribute_nameContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Attribute_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_name(this);
	}
};

Attribute_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_name(this);
	}
};




SiddhiQLParser.Attribute_nameContext = Attribute_nameContext;

SiddhiQLParser.prototype.attribute_name = function() {

    var localctx = new Attribute_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 214, SiddhiQLParser.RULE_attribute_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1459;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_type;
    return this;
}

TypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeContext.prototype.constructor = TypeContext;

TypeContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

TypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterType(this);
	}
};

TypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitType(this);
	}
};




SiddhiQLParser.TypeContext = TypeContext;

SiddhiQLParser.prototype.type = function() {

    var localctx = new TypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 216, SiddhiQLParser.RULE_type);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1461;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_value;
    return this;
}

Property_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_valueContext.prototype.constructor = Property_valueContext;

Property_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Property_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_value(this);
	}
};

Property_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_value(this);
	}
};




SiddhiQLParser.Property_valueContext = Property_valueContext;

SiddhiQLParser.prototype.property_value = function() {

    var localctx = new Property_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 218, SiddhiQLParser.RULE_property_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1463;
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_separatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_separator;
    return this;
}

Property_separatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_separatorContext.prototype.constructor = Property_separatorContext;

Property_separatorContext.prototype.DOT = function() {
    return this.getToken(SiddhiQLParser.DOT, 0);
};

Property_separatorContext.prototype.MINUS = function() {
    return this.getToken(SiddhiQLParser.MINUS, 0);
};

Property_separatorContext.prototype.COL = function() {
    return this.getToken(SiddhiQLParser.COL, 0);
};

Property_separatorContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_separator(this);
	}
};

Property_separatorContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_separator(this);
	}
};




SiddhiQLParser.Property_separatorContext = Property_separatorContext;

SiddhiQLParser.prototype.property_separator = function() {

    var localctx = new Property_separatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 220, SiddhiQLParser.RULE_property_separator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1465;
        _la = this._input.LA(1);
        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.COL) | (1 << SiddhiQLParser.DOT) | (1 << SiddhiQLParser.MINUS))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_source;
    this.inner = null; // Token
    this.fault = null; // Token
    return this;
}

SourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SourceContext.prototype.constructor = SourceContext;

SourceContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

SourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSource(this);
	}
};

SourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSource(this);
	}
};




SiddhiQLParser.SourceContext = SourceContext;

SiddhiQLParser.prototype.source = function() {

    var localctx = new SourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 222, SiddhiQLParser.RULE_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1469;
        switch (this._input.LA(1)) {
        case SiddhiQLParser.HASH:
        	this.state = 1467;
        	localctx.inner = this.match(SiddhiQLParser.HASH);
        	break;
        case SiddhiQLParser.T__0:
        	this.state = 1468;
        	localctx.fault = this.match(SiddhiQLParser.T__0);
        	break;
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.APP:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        	break;
        default:
        	throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1471;
        this.stream_id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TargetContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_target;
    return this;
}

TargetContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TargetContext.prototype.constructor = TargetContext;

TargetContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

TargetContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTarget(this);
	}
};

TargetContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTarget(this);
	}
};




SiddhiQLParser.TargetContext = TargetContext;

SiddhiQLParser.prototype.target = function() {

    var localctx = new TargetContext(this, this._ctx, this.state);
    this.enterRule(localctx, 224, SiddhiQLParser.RULE_target);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1473;
        this.source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EventContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_event;
    return this;
}

EventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EventContext.prototype.constructor = EventContext;

EventContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

EventContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvent(this);
	}
};

EventContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvent(this);
	}
};




SiddhiQLParser.EventContext = EventContext;

SiddhiQLParser.prototype.event = function() {

    var localctx = new EventContext(this, this._ctx, this.state);
    this.enterRule(localctx, 226, SiddhiQLParser.RULE_event);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1475;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_name;
    return this;
}

NameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NameContext.prototype.constructor = NameContext;

NameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

NameContext.prototype.keyword = function() {
    return this.getTypedRuleContext(KeywordContext,0);
};

NameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterName(this);
	}
};

NameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitName(this);
	}
};




SiddhiQLParser.NameContext = NameContext;

SiddhiQLParser.prototype.name = function() {

    var localctx = new NameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 228, SiddhiQLParser.RULE_name);
    try {
        this.state = 1479;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.enterOuterAlt(localctx, 1);
            this.state = 1477;
            this.id();
            break;
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.APP:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1478;
            this.keyword();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CollectContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_collect;
    this.start = null; // Token
    this.end = null; // Token
    return this;
}

CollectContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CollectContext.prototype.constructor = CollectContext;

CollectContext.prototype.INT_LITERAL = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.INT_LITERAL);
    } else {
        return this.getToken(SiddhiQLParser.INT_LITERAL, i);
    }
};


CollectContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCollect(this);
	}
};

CollectContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCollect(this);
	}
};




SiddhiQLParser.CollectContext = CollectContext;

SiddhiQLParser.prototype.collect = function() {

    var localctx = new CollectContext(this, this._ctx, this.state);
    this.enterRule(localctx, 230, SiddhiQLParser.RULE_collect);
    try {
        this.state = 1489;
        var la_ = this._interp.adaptivePredict(this._input,170,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1481;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 1482;
            this.match(SiddhiQLParser.COL);
            this.state = 1483;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1484;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 1485;
            this.match(SiddhiQLParser.COL);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1486;
            this.match(SiddhiQLParser.COL);
            this.state = 1487;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1488;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_type;
    return this;
}

Attribute_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_typeContext.prototype.constructor = Attribute_typeContext;

Attribute_typeContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

Attribute_typeContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

Attribute_typeContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

Attribute_typeContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

Attribute_typeContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

Attribute_typeContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

Attribute_typeContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

Attribute_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_type(this);
	}
};

Attribute_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_type(this);
	}
};




SiddhiQLParser.Attribute_typeContext = Attribute_typeContext;

SiddhiQLParser.prototype.attribute_type = function() {

    var localctx = new Attribute_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 232, SiddhiQLParser.RULE_attribute_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1491;
        _la = this._input.LA(1);
        if(!(((((_la - 97)) & ~0x1f) == 0 && ((1 << (_la - 97)) & ((1 << (SiddhiQLParser.STRING - 97)) | (1 << (SiddhiQLParser.INT - 97)) | (1 << (SiddhiQLParser.LONG - 97)) | (1 << (SiddhiQLParser.FLOAT - 97)) | (1 << (SiddhiQLParser.DOUBLE - 97)) | (1 << (SiddhiQLParser.BOOL - 97)) | (1 << (SiddhiQLParser.OBJECT - 97)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function JoinContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join;
    return this;
}

JoinContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
JoinContext.prototype.constructor = JoinContext;

JoinContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

JoinContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

JoinContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

JoinContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

JoinContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

JoinContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

JoinContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin(this);
	}
};

JoinContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin(this);
	}
};




SiddhiQLParser.JoinContext = JoinContext;

SiddhiQLParser.prototype.join = function() {

    var localctx = new JoinContext(this, this._ctx, this.state);
    this.enterRule(localctx, 234, SiddhiQLParser.RULE_join);
    var _la = 0; // Token type
    try {
        this.state = 1508;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LEFT:
            this.enterOuterAlt(localctx, 1);
            this.state = 1493;
            this.match(SiddhiQLParser.LEFT);
            this.state = 1494;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1495;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.RIGHT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1496;
            this.match(SiddhiQLParser.RIGHT);
            this.state = 1497;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1498;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.FULL:
            this.enterOuterAlt(localctx, 3);
            this.state = 1499;
            this.match(SiddhiQLParser.FULL);
            this.state = 1500;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1501;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.OUTER:
            this.enterOuterAlt(localctx, 4);
            this.state = 1502;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1503;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
            this.enterOuterAlt(localctx, 5);
            this.state = 1505;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.INNER) {
                this.state = 1504;
                this.match(SiddhiQLParser.INNER);
            }

            this.state = 1507;
            this.match(SiddhiQLParser.JOIN);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Constant_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_constant_value;
    return this;
}

Constant_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Constant_valueContext.prototype.constructor = Constant_valueContext;

Constant_valueContext.prototype.bool_value = function() {
    return this.getTypedRuleContext(Bool_valueContext,0);
};

Constant_valueContext.prototype.signed_double_value = function() {
    return this.getTypedRuleContext(Signed_double_valueContext,0);
};

Constant_valueContext.prototype.signed_float_value = function() {
    return this.getTypedRuleContext(Signed_float_valueContext,0);
};

Constant_valueContext.prototype.signed_long_value = function() {
    return this.getTypedRuleContext(Signed_long_valueContext,0);
};

Constant_valueContext.prototype.signed_int_value = function() {
    return this.getTypedRuleContext(Signed_int_valueContext,0);
};

Constant_valueContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Constant_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Constant_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterConstant_value(this);
	}
};

Constant_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitConstant_value(this);
	}
};




SiddhiQLParser.Constant_valueContext = Constant_valueContext;

SiddhiQLParser.prototype.constant_value = function() {

    var localctx = new Constant_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 236, SiddhiQLParser.RULE_constant_value);
    try {
        this.state = 1517;
        var la_ = this._interp.adaptivePredict(this._input,173,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1510;
            this.bool_value();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1511;
            this.signed_double_value();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1512;
            this.signed_float_value();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1513;
            this.signed_long_value();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1514;
            this.signed_int_value();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1515;
            this.time_value();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1516;
            this.string_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IdContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_id;
    return this;
}

IdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IdContext.prototype.constructor = IdContext;

IdContext.prototype.ID_QUOTES = function() {
    return this.getToken(SiddhiQLParser.ID_QUOTES, 0);
};

IdContext.prototype.ID = function() {
    return this.getToken(SiddhiQLParser.ID, 0);
};

IdContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterId(this);
	}
};

IdContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitId(this);
	}
};




SiddhiQLParser.IdContext = IdContext;

SiddhiQLParser.prototype.id = function() {

    var localctx = new IdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 238, SiddhiQLParser.RULE_id);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1519;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.ID_QUOTES || _la===SiddhiQLParser.ID)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function KeywordContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_keyword;
    return this;
}

KeywordContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
KeywordContext.prototype.constructor = KeywordContext;

KeywordContext.prototype.APP = function() {
    return this.getToken(SiddhiQLParser.APP, 0);
};

KeywordContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

KeywordContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

KeywordContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

KeywordContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

KeywordContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

KeywordContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

KeywordContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

KeywordContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

KeywordContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

KeywordContext.prototype.ORDER = function() {
    return this.getToken(SiddhiQLParser.ORDER, 0);
};

KeywordContext.prototype.ASC = function() {
    return this.getToken(SiddhiQLParser.ASC, 0);
};

KeywordContext.prototype.DESC = function() {
    return this.getToken(SiddhiQLParser.DESC, 0);
};

KeywordContext.prototype.LIMIT = function() {
    return this.getToken(SiddhiQLParser.LIMIT, 0);
};

KeywordContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

KeywordContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

KeywordContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

KeywordContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

KeywordContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

KeywordContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

KeywordContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

KeywordContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

KeywordContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

KeywordContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

KeywordContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

KeywordContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

KeywordContext.prototype.RAW = function() {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

KeywordContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

KeywordContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

KeywordContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

KeywordContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

KeywordContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

KeywordContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

KeywordContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

KeywordContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

KeywordContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

KeywordContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

KeywordContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

KeywordContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

KeywordContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

KeywordContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

KeywordContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

KeywordContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

KeywordContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

KeywordContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

KeywordContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

KeywordContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

KeywordContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

KeywordContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

KeywordContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

KeywordContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

KeywordContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

KeywordContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

KeywordContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

KeywordContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

KeywordContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

KeywordContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

KeywordContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

KeywordContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

KeywordContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

KeywordContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

KeywordContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

KeywordContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

KeywordContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

KeywordContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

KeywordContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

KeywordContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

KeywordContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterKeyword(this);
	}
};

KeywordContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitKeyword(this);
	}
};




SiddhiQLParser.KeywordContext = KeywordContext;

SiddhiQLParser.prototype.keyword = function() {

    var localctx = new KeywordContext(this, this._ctx, this.state);
    this.enterRule(localctx, 240, SiddhiQLParser.RULE_keyword);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1521;
        _la = this._input.LA(1);
        if(!(((((_la - 31)) & ~0x1f) == 0 && ((1 << (_la - 31)) & ((1 << (SiddhiQLParser.STREAM - 31)) | (1 << (SiddhiQLParser.DEFINE - 31)) | (1 << (SiddhiQLParser.TABLE - 31)) | (1 << (SiddhiQLParser.APP - 31)) | (1 << (SiddhiQLParser.FROM - 31)) | (1 << (SiddhiQLParser.PARTITION - 31)) | (1 << (SiddhiQLParser.WINDOW - 31)) | (1 << (SiddhiQLParser.SELECT - 31)) | (1 << (SiddhiQLParser.GROUP - 31)) | (1 << (SiddhiQLParser.BY - 31)) | (1 << (SiddhiQLParser.ORDER - 31)) | (1 << (SiddhiQLParser.LIMIT - 31)) | (1 << (SiddhiQLParser.ASC - 31)) | (1 << (SiddhiQLParser.DESC - 31)) | (1 << (SiddhiQLParser.HAVING - 31)) | (1 << (SiddhiQLParser.INSERT - 31)) | (1 << (SiddhiQLParser.DELETE - 31)) | (1 << (SiddhiQLParser.UPDATE - 31)) | (1 << (SiddhiQLParser.RETURN - 31)) | (1 << (SiddhiQLParser.EVENTS - 31)) | (1 << (SiddhiQLParser.INTO - 31)) | (1 << (SiddhiQLParser.OUTPUT - 31)) | (1 << (SiddhiQLParser.EXPIRED - 31)) | (1 << (SiddhiQLParser.CURRENT - 31)) | (1 << (SiddhiQLParser.SNAPSHOT - 31)) | (1 << (SiddhiQLParser.FOR - 31)) | (1 << (SiddhiQLParser.RAW - 31)) | (1 << (SiddhiQLParser.OF - 31)))) !== 0) || ((((_la - 63)) & ~0x1f) == 0 && ((1 << (_la - 63)) & ((1 << (SiddhiQLParser.AS - 63)) | (1 << (SiddhiQLParser.OR - 63)) | (1 << (SiddhiQLParser.AND - 63)) | (1 << (SiddhiQLParser.ON - 63)) | (1 << (SiddhiQLParser.IS - 63)) | (1 << (SiddhiQLParser.NOT - 63)) | (1 << (SiddhiQLParser.WITHIN - 63)) | (1 << (SiddhiQLParser.WITH - 63)) | (1 << (SiddhiQLParser.BEGIN - 63)) | (1 << (SiddhiQLParser.END - 63)) | (1 << (SiddhiQLParser.NULL - 63)) | (1 << (SiddhiQLParser.EVERY - 63)) | (1 << (SiddhiQLParser.LAST - 63)) | (1 << (SiddhiQLParser.ALL - 63)) | (1 << (SiddhiQLParser.FIRST - 63)) | (1 << (SiddhiQLParser.JOIN - 63)) | (1 << (SiddhiQLParser.INNER - 63)) | (1 << (SiddhiQLParser.OUTER - 63)) | (1 << (SiddhiQLParser.RIGHT - 63)) | (1 << (SiddhiQLParser.LEFT - 63)) | (1 << (SiddhiQLParser.FULL - 63)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 63)) | (1 << (SiddhiQLParser.YEARS - 63)) | (1 << (SiddhiQLParser.MONTHS - 63)) | (1 << (SiddhiQLParser.WEEKS - 63)) | (1 << (SiddhiQLParser.DAYS - 63)) | (1 << (SiddhiQLParser.HOURS - 63)) | (1 << (SiddhiQLParser.MINUTES - 63)) | (1 << (SiddhiQLParser.SECONDS - 63)) | (1 << (SiddhiQLParser.MILLISECONDS - 63)))) !== 0) || ((((_la - 95)) & ~0x1f) == 0 && ((1 << (_la - 95)) & ((1 << (SiddhiQLParser.FALSE - 95)) | (1 << (SiddhiQLParser.TRUE - 95)) | (1 << (SiddhiQLParser.STRING - 95)) | (1 << (SiddhiQLParser.INT - 95)) | (1 << (SiddhiQLParser.LONG - 95)) | (1 << (SiddhiQLParser.FLOAT - 95)) | (1 << (SiddhiQLParser.DOUBLE - 95)) | (1 << (SiddhiQLParser.BOOL - 95)) | (1 << (SiddhiQLParser.OBJECT - 95)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Time_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_time_value;
    return this;
}

Time_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Time_valueContext.prototype.constructor = Time_valueContext;

Time_valueContext.prototype.year_value = function() {
    return this.getTypedRuleContext(Year_valueContext,0);
};

Time_valueContext.prototype.month_value = function() {
    return this.getTypedRuleContext(Month_valueContext,0);
};

Time_valueContext.prototype.week_value = function() {
    return this.getTypedRuleContext(Week_valueContext,0);
};

Time_valueContext.prototype.day_value = function() {
    return this.getTypedRuleContext(Day_valueContext,0);
};

Time_valueContext.prototype.hour_value = function() {
    return this.getTypedRuleContext(Hour_valueContext,0);
};

Time_valueContext.prototype.minute_value = function() {
    return this.getTypedRuleContext(Minute_valueContext,0);
};

Time_valueContext.prototype.second_value = function() {
    return this.getTypedRuleContext(Second_valueContext,0);
};

Time_valueContext.prototype.millisecond_value = function() {
    return this.getTypedRuleContext(Millisecond_valueContext,0);
};

Time_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTime_value(this);
	}
};

Time_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTime_value(this);
	}
};




SiddhiQLParser.Time_valueContext = Time_valueContext;

SiddhiQLParser.prototype.time_value = function() {

    var localctx = new Time_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 242, SiddhiQLParser.RULE_time_value);
    try {
        this.state = 1615;
        var la_ = this._interp.adaptivePredict(this._input,202,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1523;
            this.year_value();
            this.state = 1525;
            var la_ = this._interp.adaptivePredict(this._input,174,this._ctx);
            if(la_===1) {
                this.state = 1524;
                this.month_value();

            }
            this.state = 1528;
            var la_ = this._interp.adaptivePredict(this._input,175,this._ctx);
            if(la_===1) {
                this.state = 1527;
                this.week_value();

            }
            this.state = 1531;
            var la_ = this._interp.adaptivePredict(this._input,176,this._ctx);
            if(la_===1) {
                this.state = 1530;
                this.day_value();

            }
            this.state = 1534;
            var la_ = this._interp.adaptivePredict(this._input,177,this._ctx);
            if(la_===1) {
                this.state = 1533;
                this.hour_value();

            }
            this.state = 1537;
            var la_ = this._interp.adaptivePredict(this._input,178,this._ctx);
            if(la_===1) {
                this.state = 1536;
                this.minute_value();

            }
            this.state = 1540;
            var la_ = this._interp.adaptivePredict(this._input,179,this._ctx);
            if(la_===1) {
                this.state = 1539;
                this.second_value();

            }
            this.state = 1543;
            var la_ = this._interp.adaptivePredict(this._input,180,this._ctx);
            if(la_===1) {
                this.state = 1542;
                this.millisecond_value();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1545;
            this.month_value();
            this.state = 1547;
            var la_ = this._interp.adaptivePredict(this._input,181,this._ctx);
            if(la_===1) {
                this.state = 1546;
                this.week_value();

            }
            this.state = 1550;
            var la_ = this._interp.adaptivePredict(this._input,182,this._ctx);
            if(la_===1) {
                this.state = 1549;
                this.day_value();

            }
            this.state = 1553;
            var la_ = this._interp.adaptivePredict(this._input,183,this._ctx);
            if(la_===1) {
                this.state = 1552;
                this.hour_value();

            }
            this.state = 1556;
            var la_ = this._interp.adaptivePredict(this._input,184,this._ctx);
            if(la_===1) {
                this.state = 1555;
                this.minute_value();

            }
            this.state = 1559;
            var la_ = this._interp.adaptivePredict(this._input,185,this._ctx);
            if(la_===1) {
                this.state = 1558;
                this.second_value();

            }
            this.state = 1562;
            var la_ = this._interp.adaptivePredict(this._input,186,this._ctx);
            if(la_===1) {
                this.state = 1561;
                this.millisecond_value();

            }
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1564;
            this.week_value();
            this.state = 1566;
            var la_ = this._interp.adaptivePredict(this._input,187,this._ctx);
            if(la_===1) {
                this.state = 1565;
                this.day_value();

            }
            this.state = 1569;
            var la_ = this._interp.adaptivePredict(this._input,188,this._ctx);
            if(la_===1) {
                this.state = 1568;
                this.hour_value();

            }
            this.state = 1572;
            var la_ = this._interp.adaptivePredict(this._input,189,this._ctx);
            if(la_===1) {
                this.state = 1571;
                this.minute_value();

            }
            this.state = 1575;
            var la_ = this._interp.adaptivePredict(this._input,190,this._ctx);
            if(la_===1) {
                this.state = 1574;
                this.second_value();

            }
            this.state = 1578;
            var la_ = this._interp.adaptivePredict(this._input,191,this._ctx);
            if(la_===1) {
                this.state = 1577;
                this.millisecond_value();

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1580;
            this.day_value();
            this.state = 1582;
            var la_ = this._interp.adaptivePredict(this._input,192,this._ctx);
            if(la_===1) {
                this.state = 1581;
                this.hour_value();

            }
            this.state = 1585;
            var la_ = this._interp.adaptivePredict(this._input,193,this._ctx);
            if(la_===1) {
                this.state = 1584;
                this.minute_value();

            }
            this.state = 1588;
            var la_ = this._interp.adaptivePredict(this._input,194,this._ctx);
            if(la_===1) {
                this.state = 1587;
                this.second_value();

            }
            this.state = 1591;
            var la_ = this._interp.adaptivePredict(this._input,195,this._ctx);
            if(la_===1) {
                this.state = 1590;
                this.millisecond_value();

            }
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1593;
            this.hour_value();
            this.state = 1595;
            var la_ = this._interp.adaptivePredict(this._input,196,this._ctx);
            if(la_===1) {
                this.state = 1594;
                this.minute_value();

            }
            this.state = 1598;
            var la_ = this._interp.adaptivePredict(this._input,197,this._ctx);
            if(la_===1) {
                this.state = 1597;
                this.second_value();

            }
            this.state = 1601;
            var la_ = this._interp.adaptivePredict(this._input,198,this._ctx);
            if(la_===1) {
                this.state = 1600;
                this.millisecond_value();

            }
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1603;
            this.minute_value();
            this.state = 1605;
            var la_ = this._interp.adaptivePredict(this._input,199,this._ctx);
            if(la_===1) {
                this.state = 1604;
                this.second_value();

            }
            this.state = 1608;
            var la_ = this._interp.adaptivePredict(this._input,200,this._ctx);
            if(la_===1) {
                this.state = 1607;
                this.millisecond_value();

            }
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1610;
            this.second_value();
            this.state = 1612;
            var la_ = this._interp.adaptivePredict(this._input,201,this._ctx);
            if(la_===1) {
                this.state = 1611;
                this.millisecond_value();

            }
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1614;
            this.millisecond_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Year_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_year_value;
    return this;
}

Year_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Year_valueContext.prototype.constructor = Year_valueContext;

Year_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Year_valueContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

Year_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterYear_value(this);
	}
};

Year_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitYear_value(this);
	}
};




SiddhiQLParser.Year_valueContext = Year_valueContext;

SiddhiQLParser.prototype.year_value = function() {

    var localctx = new Year_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 244, SiddhiQLParser.RULE_year_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1617;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1618;
        this.match(SiddhiQLParser.YEARS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Month_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_month_value;
    return this;
}

Month_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Month_valueContext.prototype.constructor = Month_valueContext;

Month_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Month_valueContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

Month_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMonth_value(this);
	}
};

Month_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMonth_value(this);
	}
};




SiddhiQLParser.Month_valueContext = Month_valueContext;

SiddhiQLParser.prototype.month_value = function() {

    var localctx = new Month_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 246, SiddhiQLParser.RULE_month_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1620;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1621;
        this.match(SiddhiQLParser.MONTHS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Week_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_week_value;
    return this;
}

Week_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Week_valueContext.prototype.constructor = Week_valueContext;

Week_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Week_valueContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

Week_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWeek_value(this);
	}
};

Week_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWeek_value(this);
	}
};




SiddhiQLParser.Week_valueContext = Week_valueContext;

SiddhiQLParser.prototype.week_value = function() {

    var localctx = new Week_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 248, SiddhiQLParser.RULE_week_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1623;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1624;
        this.match(SiddhiQLParser.WEEKS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Day_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_day_value;
    return this;
}

Day_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Day_valueContext.prototype.constructor = Day_valueContext;

Day_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Day_valueContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

Day_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDay_value(this);
	}
};

Day_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDay_value(this);
	}
};




SiddhiQLParser.Day_valueContext = Day_valueContext;

SiddhiQLParser.prototype.day_value = function() {

    var localctx = new Day_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 250, SiddhiQLParser.RULE_day_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1626;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1627;
        this.match(SiddhiQLParser.DAYS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Hour_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_hour_value;
    return this;
}

Hour_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hour_valueContext.prototype.constructor = Hour_valueContext;

Hour_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Hour_valueContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

Hour_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHour_value(this);
	}
};

Hour_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHour_value(this);
	}
};




SiddhiQLParser.Hour_valueContext = Hour_valueContext;

SiddhiQLParser.prototype.hour_value = function() {

    var localctx = new Hour_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 252, SiddhiQLParser.RULE_hour_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1629;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1630;
        this.match(SiddhiQLParser.HOURS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Minute_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_minute_value;
    return this;
}

Minute_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Minute_valueContext.prototype.constructor = Minute_valueContext;

Minute_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Minute_valueContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

Minute_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMinute_value(this);
	}
};

Minute_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMinute_value(this);
	}
};




SiddhiQLParser.Minute_valueContext = Minute_valueContext;

SiddhiQLParser.prototype.minute_value = function() {

    var localctx = new Minute_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 254, SiddhiQLParser.RULE_minute_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1632;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1633;
        this.match(SiddhiQLParser.MINUTES);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Second_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_second_value;
    return this;
}

Second_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Second_valueContext.prototype.constructor = Second_valueContext;

Second_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Second_valueContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

Second_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSecond_value(this);
	}
};

Second_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSecond_value(this);
	}
};




SiddhiQLParser.Second_valueContext = Second_valueContext;

SiddhiQLParser.prototype.second_value = function() {

    var localctx = new Second_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 256, SiddhiQLParser.RULE_second_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1635;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1636;
        this.match(SiddhiQLParser.SECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Millisecond_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_millisecond_value;
    return this;
}

Millisecond_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Millisecond_valueContext.prototype.constructor = Millisecond_valueContext;

Millisecond_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Millisecond_valueContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

Millisecond_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMillisecond_value(this);
	}
};

Millisecond_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMillisecond_value(this);
	}
};




SiddhiQLParser.Millisecond_valueContext = Millisecond_valueContext;

SiddhiQLParser.prototype.millisecond_value = function() {

    var localctx = new Millisecond_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 258, SiddhiQLParser.RULE_millisecond_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1638;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1639;
        this.match(SiddhiQLParser.MILLISECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_double_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_double_value;
    return this;
}

Signed_double_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_double_valueContext.prototype.constructor = Signed_double_valueContext;

Signed_double_valueContext.prototype.DOUBLE_LITERAL = function() {
    return this.getToken(SiddhiQLParser.DOUBLE_LITERAL, 0);
};

Signed_double_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_double_value(this);
	}
};

Signed_double_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_double_value(this);
	}
};




SiddhiQLParser.Signed_double_valueContext = Signed_double_valueContext;

SiddhiQLParser.prototype.signed_double_value = function() {

    var localctx = new Signed_double_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 260, SiddhiQLParser.RULE_signed_double_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1642;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1641;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1644;
        this.match(SiddhiQLParser.DOUBLE_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_long_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_long_value;
    return this;
}

Signed_long_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_long_valueContext.prototype.constructor = Signed_long_valueContext;

Signed_long_valueContext.prototype.LONG_LITERAL = function() {
    return this.getToken(SiddhiQLParser.LONG_LITERAL, 0);
};

Signed_long_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_long_value(this);
	}
};

Signed_long_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_long_value(this);
	}
};




SiddhiQLParser.Signed_long_valueContext = Signed_long_valueContext;

SiddhiQLParser.prototype.signed_long_value = function() {

    var localctx = new Signed_long_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 262, SiddhiQLParser.RULE_signed_long_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1647;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1646;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1649;
        this.match(SiddhiQLParser.LONG_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_float_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_float_value;
    return this;
}

Signed_float_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_float_valueContext.prototype.constructor = Signed_float_valueContext;

Signed_float_valueContext.prototype.FLOAT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.FLOAT_LITERAL, 0);
};

Signed_float_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_float_value(this);
	}
};

Signed_float_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_float_value(this);
	}
};




SiddhiQLParser.Signed_float_valueContext = Signed_float_valueContext;

SiddhiQLParser.prototype.signed_float_value = function() {

    var localctx = new Signed_float_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 264, SiddhiQLParser.RULE_signed_float_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1652;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1651;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1654;
        this.match(SiddhiQLParser.FLOAT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_int_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_int_value;
    return this;
}

Signed_int_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_int_valueContext.prototype.constructor = Signed_int_valueContext;

Signed_int_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Signed_int_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_int_value(this);
	}
};

Signed_int_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_int_value(this);
	}
};




SiddhiQLParser.Signed_int_valueContext = Signed_int_valueContext;

SiddhiQLParser.prototype.signed_int_value = function() {

    var localctx = new Signed_int_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 266, SiddhiQLParser.RULE_signed_int_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1657;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1656;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1659;
        this.match(SiddhiQLParser.INT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Bool_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_bool_value;
    return this;
}

Bool_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Bool_valueContext.prototype.constructor = Bool_valueContext;

Bool_valueContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

Bool_valueContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

Bool_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBool_value(this);
	}
};

Bool_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBool_value(this);
	}
};




SiddhiQLParser.Bool_valueContext = Bool_valueContext;

SiddhiQLParser.prototype.bool_value = function() {

    var localctx = new Bool_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 268, SiddhiQLParser.RULE_bool_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1661;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.FALSE || _la===SiddhiQLParser.TRUE)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function String_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_string_value;
    return this;
}

String_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
String_valueContext.prototype.constructor = String_valueContext;

String_valueContext.prototype.STRING_LITERAL = function() {
    return this.getToken(SiddhiQLParser.STRING_LITERAL, 0);
};

String_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterString_value(this);
	}
};

String_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitString_value(this);
	}
};




SiddhiQLParser.String_valueContext = String_valueContext;

SiddhiQLParser.prototype.string_value = function() {

    var localctx = new String_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 270, SiddhiQLParser.RULE_string_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1663;
        this.match(SiddhiQLParser.STRING_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


SiddhiQLParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 43:
			return this.every_pattern_source_chain_sempred(localctx, predIndex);
	case 44:
			return this.pattern_source_chain_sempred(localctx, predIndex);
	case 46:
			return this.left_absent_pattern_source_sempred(localctx, predIndex);
	case 47:
			return this.right_absent_pattern_source_sempred(localctx, predIndex);
	case 62:
			return this.left_absent_sequence_source_sempred(localctx, predIndex);
	case 63:
			return this.right_absent_sequence_source_sempred(localctx, predIndex);
	case 64:
			return this.sequence_source_chain_sempred(localctx, predIndex);
	case 94:
			return this.math_operation_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

SiddhiQLParser.prototype.every_pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 3);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 1:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.left_absent_pattern_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 2:
			return this.precpred(this._ctx, 3);
		case 3:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.right_absent_pattern_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 4:
			return this.precpred(this._ctx, 3);
		case 5:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.left_absent_sequence_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 6:
			return this.precpred(this._ctx, 3);
		case 7:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.right_absent_sequence_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 8:
			return this.precpred(this._ctx, 3);
		case 9:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.sequence_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 10:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.math_operation_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 11:
			return this.precpred(this._ctx, 10);
		case 12:
			return this.precpred(this._ctx, 9);
		case 13:
			return this.precpred(this._ctx, 8);
		case 14:
			return this.precpred(this._ctx, 7);
		case 15:
			return this.precpred(this._ctx, 5);
		case 16:
			return this.precpred(this._ctx, 4);
		case 17:
			return this.precpred(this._ctx, 6);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.SiddhiQLParser = SiddhiQLParser;
